{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/LiveVideos/PaymentModal.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { livePaymentPaypalStart, livePaymentStripeStart, livePaymentWalletStart } from \"../../store/actions/LiveVideoAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport { Link } from \"react-router-dom\";\nconst $ = window.$;\n\nconst PaymentModal = props => {\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  useEffect(() => {\n    if (props.paymentModal === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.paymentModal]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (paymentType === \"CARD\") props.dispatch(livePaymentStripeStart({\n      live_video_id: props.liveVideo.live_video_id\n    }));\n    if (paymentType === \"wallet\") alert(paymentType);\n    props.dispatch(livePaymentWalletStart({\n      live_video_id: props.liveVideo.live_video_id\n    }));\n    props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = payment => {\n    setTimeout(() => {\n      props.dispatch(livePaymentPaypalStart({\n        live_video_id: props.liveVideo.live_video_id,\n        payment_id: payment.paymentID\n      }));\n    }, 1000);\n    props.closePaymentModal();\n  };\n\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(\"Payment cancelled please try again..\");\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    size: \"lg\",\n    className: \"modal-dialog-center sent-tip-modal\",\n    show: props.paymentModal,\n    onHide: props.closePaymentModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, props.paymentModal === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, t(\"live_video_payment\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"subscription-tip-ppv-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: paymentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CARD\"),\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 31\n    }\n  }, t('card_stripe'))) : null, configuration.get(\"configData.is_paypal_enabled\") == 1 && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"PAYPAL\"),\n    eventKey: \"PAYPAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, t('paypal'))) : null, configuration.get(\"configData.is_ccbill_enabled\") == 1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CCBILL\"),\n    eventKey: \"CCBILL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }, t('ccbill'))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"WALLET\"),\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 31\n    }\n  }, t('wallet'))) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"pay_amount\"),\n    value: props.liveVideo.amount_formatted,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ? props.cards.data.cards.map(card => card.is_default == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-list-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 41\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-action-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-link-text text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 49\n    }\n  }, t(\"default_card\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"add-account-icon\",\n    src: window.location.origin + \"/assets/images/icons/new/add-card.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 45\n    }\n  }, \"Add Card\")))))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, props.wallet.loading ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-balence-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 39\n    }\n  }, t('available')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 39\n    }\n  }, props.wallet.data.user_wallet.remaining_formatted)), props.liveVideo.amount > props.wallet.data.user_wallet.remaining ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conv-desc desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, t('low_wallet_balance_tips_payment_para')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wallet\",\n    className: \"withdraw-money-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 43\n    }\n  }, t('add_wallet_amount')))) : null)) : null))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, paymentType === \"PAYPAL\" && props.liveVideo.amount != 0 ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: props.liveVideo.amount,\n    onError: paypalOnError,\n    onSuccess: paypalOnSuccess,\n    onCancel: paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closePaymentModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, t(\"cancel\")), paymentType !== \"PAYPAL\" ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    onClick: handleSubmit,\n    disabled: props.liveVideoDetails.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, props.liveVideoDetails.loadingButtonContent !== null ? props.liveVideoDetails.loadingButtonContent : t(\"pay\")) : null)) : null);\n};\n\nconst mapStateToPros = state => ({\n  liveVideoDetails: state.liveVideo.singleLiveVideo,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(PaymentModal));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/LiveVideos/PaymentModal.jsx"],"names":["React","useEffect","useState","Form","Button","Image","Modal","Tab","Nav","Row","Col","CopyToClipboard","createNotification","connect","translate","t","configuration","PaypalExpressBtn","getSuccessNotificationMessage","getErrorNotificationMessage","livePaymentPaypalStart","livePaymentStripeStart","livePaymentWalletStart","fetchCardDetailsStart","fetchWalletDetailsStart","Link","$","window","PaymentModal","props","paymentType","setPaymentType","localStorage","getItem","paymentModal","dispatch","handleSubmit","event","preventDefault","live_video_id","liveVideo","alert","closePaymentModal","paypalOnSuccess","payment","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","env","get","currency","client","sandbox","production","amount_formatted","cards","loading","length","map","card","is_default","last_four","card_type","location","origin","wallet","user_wallet","remaining_formatted","amount","remaining","liveVideoDetails","buttonDisable","loadingButtonContent","mapStateToPros","state","singleLiveVideo","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport {\n    getSuccessNotificationMessage,\n    getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n    livePaymentPaypalStart,\n    livePaymentStripeStart,\n    livePaymentWalletStart,\n} from \"../../store/actions/LiveVideoAction\";\nimport {\n  fetchCardDetailsStart,\n} from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport { Link } from \"react-router-dom\";\nconst $ = window.$;\n\nconst PaymentModal = (props) => {\n\n    const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n\n    useEffect(() => {\n      if (props.paymentModal === true) {\n        props.dispatch(fetchCardDetailsStart());\n        props.dispatch(fetchWalletDetailsStart());\n      }\n      \n    }, [props.paymentModal]);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (paymentType === \"CARD\")\n          props.dispatch(\n            livePaymentStripeStart({\n                live_video_id:props.liveVideo.live_video_id,\n            })\n          );\n        if (paymentType === \"wallet\")\n        alert(paymentType);\n          props.dispatch(\n            livePaymentWalletStart({\n                live_video_id:props.liveVideo.live_video_id,\n            })\n          );\n        props.closePaymentModal();\n    };\n\n    const paypalOnSuccess = (payment) => {\n        setTimeout(() => {\n          props.dispatch(\n            livePaymentPaypalStart({\n                live_video_id:props.liveVideo.live_video_id,\n                payment_id: payment.paymentID,\n            })\n          );\n        }, 1000);\n        props.closePaymentModal();\n    };\n    \n    const paypalOnError = (err) => {\n        const notificationMessage = getErrorNotificationMessage(err);\n        this.props.dispatch(createNotification(notificationMessage));\n    };\n    \n    const paypalOnCancel = (data) => {\n        const notificationMessage = getErrorNotificationMessage(\n          \"Payment cancelled please try again..\"\n        );\n        this.props.dispatch(createNotification(notificationMessage));\n    };\n    let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n    let currency = \"USD\"; // or you can set this value from your props or state\n\n    const client = {\n        sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n        production: configuration.get(\"configData.PAYPAL_ID\"),\n    };\n\n    return (\n      <Modal centered\n      size=\"lg\"\n      className=\"modal-dialog-center sent-tip-modal\"\n      show={props.paymentModal}\n      onHide={props.closePaymentModal}\n    >\n      {props.paymentModal === true ? \n      <>\n      <Modal.Header closeButton>\n          <Modal.Title>{t(\"live_video_payment\")}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"subscription-tip-ppv-tab\">\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey={paymentType}>\n              <Row>\n                  <Col sm={3}>\n                      <Nav variant=\"pills\" className=\"flex-column\">\n                        {configuration.get(\"configData.is_stripe_enabled\") ==\n                          1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                          <Nav.Item>\n                              <Nav.Link onClick={() => setPaymentType(\"CARD\")} eventKey=\"CARD\">{t('card_stripe')}</Nav.Link>\n                          </Nav.Item>\n                          ) : null}\n                          {configuration.get(\"configData.is_paypal_enabled\") ==\n                            1  && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                            <Nav.Item>\n                                <Nav.Link onClick={() => setPaymentType(\"PAYPAL\")} eventKey=\"PAYPAL\">{t('paypal')}</Nav.Link>\n                            </Nav.Item>\n                          ) : null}\n                          {configuration.get(\"configData.is_ccbill_enabled\") ==\n                            1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? (\n                          <Nav.Item>\n                              <Nav.Link onClick={() => setPaymentType(\"CCBILL\")} eventKey=\"CCBILL\">{t('ccbill')}</Nav.Link>\n                          </Nav.Item>\n                          ) : null}\n                          {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                            1 ? (\n                          <Nav.Item>\n                              <Nav.Link onClick={() => setPaymentType(\"WALLET\")} eventKey=\"WALLET\">{t('wallet')}</Nav.Link>\n                          </Nav.Item>\n                          ) : null}\n                      </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <div className=\"card-stripe-box\">\n                      <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Control type=\"text\" \n                              placeholder={t(\"pay_amount\")} \n                              value={props.liveVideo.amount_formatted}\n                              disabled/>\n                        </Form.Group>\n                        <Tab.Content>\n                        \n                          {configuration.get(\"configData.is_stripe_enabled\") ==\n                            1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                              <Tab.Pane eventKey=\"CARD\">\n                                <div className=\"card-stripe-sec\">\n                                  {props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ?\n                                  props.cards.data.cards.map((card) => ( (\n                                    card.is_default == 1 && (\n                                    <div className=\"card-stripe-list-box\">\n                                        <h5 className=\"mb-3\">XXXX XXXX XXXX {card.last_four}</h5>\n                                        <h5 className=\"text-muted\">{card.card_type}</h5>\n                                        <div className=\"card-stripe-bottom\">\n                                            <div className=\"card-stripe-action-btn\">\n                                                <p className=\"card-link-text text-success\">{t(\"default_card\")}</p>\n                                            </div>\n                                        </div>\n                                      </div> )\n                                  ))): (\n                                    <div className=\"card-stripe-item\">\n                                      <Link to=\"cards\">\n                                        <div className=\"add-account-item\">\n                                            <Image\n                                                className=\"add-account-icon\"\n                                                src={\n                                                    window.location.origin + \"/assets/images/icons/new/add-card.svg\"\n                                                }\n                                            />\n                                            <h5 className=\"text-muted\">Add Card</h5>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                </div>\n                              </Tab.Pane>\n                            ) : null}\n\n                          {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                            1 ? (\n                            <Tab.Pane eventKey=\"WALLET\">\n                              {props.wallet.loading ? \"\" : (\n                                <div className=\"card-stripe-box\">\n                                  <div className=\"wallet-balence-amount\">\n                                      <h4>{t('available')}</h4>\n                                      <p>{props.wallet.data.user_wallet.remaining_formatted}</p>\n                                  </div>\n                                  {props.liveVideo.amount > props.wallet.data.user_wallet.remaining ? (\n                                    <div className=\"\">\n                                        <p className=\"conv-desc desc\">{t('low_wallet_balance_tips_payment_para')}</p>\n                                        <div className=\"d-flex\">\n                                          <Link to=\"/wallet\" className=\"withdraw-money-btn\">{t('add_wallet_amount')}</Link>\n                                        </div>\n                                    </div>\n                                  ) : null}\n                                </div>\n                              )}\n                            </Tab.Pane>\n                          ) : null}\n\n                        </Tab.Content>\n                      </Form>\n                    </div>\n                  </Col>\n              </Row>\n          </Tab.Container>\n      </Modal.Body>\n      <Modal.Footer>\n        {paymentType === \"PAYPAL\" && props.liveVideo.amount != 0 ? (\n          <PaypalExpressBtn\n            env={env}\n            client={client}\n            currency={currency}\n            total={props.liveVideo.amount}\n            onError={paypalOnError}\n            onSuccess={paypalOnSuccess}\n            onCancel={paypalOnCancel}\n          />\n        ) : null}\n          <Button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              data-dismiss=\"modal\"\n              onClick={props.closePaymentModal}\n          >\n              {t(\"cancel\")}\n          </Button>\n          {paymentType !== \"PAYPAL\" ? (\n          <Button\n              type=\"button\"\n              className=\"btn btn-success\"\n              data-dismiss=\"modal\"\n              onClick={handleSubmit}\n              disabled={props.liveVideoDetails.buttonDisable}\n          >\n              {props.liveVideoDetails.loadingButtonContent !== null\n                    ? props.liveVideoDetails.loadingButtonContent\n                    : t(\"pay\")}\n          </Button>\n          ) : null}\n      </Modal.Footer>\n      </>\n      : null}\n  </Modal>\n   );\n};\n\n\nconst mapStateToPros = (state) => ({\n    liveVideoDetails: state.liveVideo.singleLiveVideo,\n    wallet: state.wallet.walletData,\n    cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n    mapStateToPros,\n    mapDispatchToProps\n  )(translate(PaymentModal));"]},"metadata":{},"sourceType":"module"}