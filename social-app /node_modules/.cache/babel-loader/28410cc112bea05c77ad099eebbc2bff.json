{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Sample/AgoraLive.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nimport { Link } from \"react-router-dom\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { Form, Button, Container, Row, Col, Table, Media, Image } from \"react-bootstrap\";\nimport { liveViewerUpdateStart, liveVideoEndStart } from \"../../store/actions/LiveVideoAction\";\nimport configuration from \"react-global-configuration\";\nconst client = AgoraRTC.createClient({\n  mode: \"live\",\n  codec: \"vp8\"\n});\nconst $ = window.$;\n\nconst AgoraLive = props => {\n  var rtc = {\n    // For the local client.\n    client: null,\n    // For the local audio and video tracks.\n    localAudioTrack: null,\n    localVideoTrack: null\n  };\n  const localTrackState = {\n    videoTrackEnabled: true,\n    audioTrackEnabled: true\n  };\n  var options = {\n    // Pass your app ID here.\n    appId: configuration.get(\"configData.agora_app_id\"),\n    // set UID\n    uid: props.isOwner ? 1 : 0,\n    // Set the channel name.\n    channel: props.liveVideo.data.virtual_id,\n    // Pass a token if your project enables the App Certificate.\n    token: props.liveVideo.data.agora_token ? props.liveVideo.data.agora_token : null,\n    // Set the user role in the channel. // \"audience\"\n    role: props.isOwner ? \"host\" : \"audience\"\n  };\n  var remoteUsers = {};\n\n  async function startBasicCall() {\n    rtc.client = AgoraRTC.createClient({\n      mode: \"rtc\",\n      codec: \"vp8\"\n    });\n    client.setClientRole(options.role);\n    rtc.client.on(\"user-published\", async (user, mediaType) => {\n      // Subscribe to a remote user.\n      await rtc.client.subscribe(user, mediaType);\n      console.log(\"subscribe success\"); // If the subscribed track is video.\n\n      if (mediaType === \"video\") {\n        // Get `RemoteVideoTrack` in the `user` object.\n        const remoteVideoTrack = user.videoTrack;\n        remoteVideoTrack.play(\"agora_local\"); // Or just pass the ID of the DIV container.\n        // remoteVideoTrack.play(playerContainer.id);\n      }\n\n      props.dispatch(liveViewerUpdateStart({\n        live_video_id: props.liveVideo.data.live_video_id\n      })); // If the subscribed track is audio.\n\n      if (mediaType === \"audio\") {\n        // Get `RemoteAudioTrack` in the `user` object.\n        const remoteAudioTrack = user.audioTrack; // Play the audio track. No need to pass any DOM element.\n\n        remoteAudioTrack.play();\n      }\n    });\n    const uid = await rtc.client.join(options.appId, options.channel, options.token || null, options.uid || null);\n\n    if (options.role === \"host\") {\n      // Create an audio track from the audio sampled by a microphone.\n      rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack(); // Create a video track from the video captured by a camera.\n\n      rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack(); // Publish the local audio and video tracks to the channel.\n\n      rtc.localVideoTrack.play(\"agora_local\");\n      await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);\n    }\n  }\n\n  async function leaveCall() {\n    if (options.role === \"host\") {\n      // Destroy the local audio and video tracks.\n      rtc.localAudioTrack.close();\n      rtc.localVideoTrack.close(); // Traverse all remote users.\n\n      rtc.client.remoteUsers.forEach(user => {\n        // Destroy the dynamically created DIV container.\n        const playerContainer = document.getElementById(user.uid);\n        playerContainer && playerContainer.remove();\n      });\n      props.dispatch(liveVideoEndStart({\n        live_video_id: props.liveVideo.data.live_video_id\n      }));\n    } else {\n      // Leave the channel.\n      await rtc.client.leave();\n      window.location.assign(\"/live-videos\");\n    }\n  }\n\n  async function muteAudio() {\n    if (!rtc.localAudioTrack) return;\n\n    if (localTrackState.audioTrackEnabled == true) {\n      await rtc.localAudioTrack.setEnabled(false);\n      localTrackState.audioTrackEnabled = false;\n      $(\"#mute-audio\").hide();\n      $(\"#unmute-audio\").show();\n    } else {\n      await rtc.localAudioTrack.setEnabled(true);\n      localTrackState.audioTrackEnabled = true;\n      $(\"#mute-audio\").show();\n      $(\"#unmute-audio\").hide();\n    }\n  }\n\n  async function muteVideo() {\n    if (!rtc.localVideoTrack) return;\n\n    if (localTrackState.videoTrackEnabled == true) {\n      await rtc.localVideoTrack.setEnabled(false);\n      localTrackState.videoTrackEnabled = false;\n      $(\"#mute-video\").hide();\n      $(\"#unmute-video\").show();\n    } else {\n      await rtc.localVideoTrack.setEnabled(true);\n      localTrackState.videoTrackEnabled = true;\n      $(\"#mute-video\").show();\n      $(\"#unmute-video\").hide();\n    }\n  }\n\n  startBasicCall();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"agora-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"agora_local\",\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, props.isOwner ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-action-icon-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled live-action-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => leaveCall(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/end-stream.png\",\n    className: \"action-live-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    id: \"mute-audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => muteAudio(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/audio.png\",\n    className: \"action-live-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    id: \"unmute-audio\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => muteAudio(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/no-audio.png\",\n    className: \"action-live-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    id: \"mute-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => muteVideo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/video.png\",\n    className: \"action-live-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    id: \"unmute-video\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => muteVideo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/mute-video.png\",\n    className: \"action-live-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-action-icon-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled live-action-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => leaveCall(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/end-stream.png\",\n    className: \"action-live-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  })))))));\n};\n\nconst mapStateToPros = state => ({\n  liveVideo: state.liveVideo.singleLiveVideo\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(AgoraLive));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Sample/AgoraLive.jsx"],"names":["React","useEffect","useState","connect","translate","t","Link","AgoraRTC","Form","Button","Container","Row","Col","Table","Media","Image","liveViewerUpdateStart","liveVideoEndStart","configuration","client","createClient","mode","codec","$","window","AgoraLive","props","rtc","localAudioTrack","localVideoTrack","localTrackState","videoTrackEnabled","audioTrackEnabled","options","appId","get","uid","isOwner","channel","liveVideo","data","virtual_id","token","agora_token","role","remoteUsers","startBasicCall","setClientRole","on","user","mediaType","subscribe","console","log","remoteVideoTrack","videoTrack","play","dispatch","live_video_id","remoteAudioTrack","audioTrack","join","createMicrophoneAudioTrack","createCameraVideoTrack","publish","leaveCall","close","forEach","playerContainer","document","getElementById","remove","leave","location","assign","muteAudio","setEnabled","hide","show","muteVideo","width","height","origin","display","mapStateToPros","state","singleLiveVideo","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { translate, t } from \"react-multi-lang\";\nimport { Link } from \"react-router-dom\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { Form, Button, Container, Row, Col,Table, Media, Image } from \"react-bootstrap\";\nimport {\n  liveViewerUpdateStart,\n  liveVideoEndStart,\n} from \"../../store/actions/LiveVideoAction\";\nimport configuration from \"react-global-configuration\";\nconst client = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\nconst $ = window.$;\n\nconst AgoraLive = (props) => {\n\n    var rtc = {\n        // For the local client.\n        client: null,\n        // For the local audio and video tracks.\n        localAudioTrack: null,\n        localVideoTrack: null,\n    };\n    \n    const localTrackState = {\n      videoTrackEnabled: true,\n      audioTrackEnabled: true\n    }\n\n    var options = {\n        // Pass your app ID here.\n        appId: configuration.get(\"configData.agora_app_id\"),\n        // set UID\n        uid: props.isOwner ? 1 : 0,\n        // Set the channel name.\n        channel: props.liveVideo.data.virtual_id,\n        // Pass a token if your project enables the App Certificate.\n        token: props.liveVideo.data.agora_token ? props.liveVideo.data.agora_token : null,\n        // Set the user role in the channel. // \"audience\"\n        role: props.isOwner ? \"host\" : \"audience\"\n    };\n\n    var remoteUsers = {};\n  \n    async function startBasicCall() {\n        rtc.client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n        client.setClientRole(options.role);\n\n        rtc.client.on(\"user-published\", async (user, mediaType) => {\n            // Subscribe to a remote user.\n            await rtc.client.subscribe(user, mediaType);\n            console.log(\"subscribe success\");\n          \n            // If the subscribed track is video.\n            if (mediaType === \"video\") {\n              // Get `RemoteVideoTrack` in the `user` object.\n              const remoteVideoTrack = user.videoTrack;\n              \n              remoteVideoTrack.play(\"agora_local\");\n              // Or just pass the ID of the DIV container.\n              // remoteVideoTrack.play(playerContainer.id);\n            }\n            \n            props.dispatch(\n              liveViewerUpdateStart({\n                  live_video_id:props.liveVideo.data.live_video_id,\n              })\n            );\n          \n            // If the subscribed track is audio.\n            if (mediaType === \"audio\") {\n              // Get `RemoteAudioTrack` in the `user` object.\n              const remoteAudioTrack = user.audioTrack;\n              // Play the audio track. No need to pass any DOM element.\n              remoteAudioTrack.play();\n            }\n        });\n\n        const uid = await rtc.client.join(options.appId, options.channel, options.token || null, options.uid || null);\n\n        if (options.role === \"host\") {\n\n            // Create an audio track from the audio sampled by a microphone.\n            rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n            // Create a video track from the video captured by a camera.\n            rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack();\n            // Publish the local audio and video tracks to the channel.\n            rtc.localVideoTrack.play(\"agora_local\");\n\n            await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);\n        }\n        \n        \n    }\n\n    async function leaveCall() {\n\n      if (options.role === \"host\") {\n        // Destroy the local audio and video tracks.\n        rtc.localAudioTrack.close();\n        rtc.localVideoTrack.close();\n    \n        // Traverse all remote users.\n        rtc.client.remoteUsers.forEach(user => {\n          // Destroy the dynamically created DIV container.\n          const playerContainer = document.getElementById(user.uid);\n          playerContainer && playerContainer.remove();\n        });\n        props.dispatch(\n          liveVideoEndStart({\n              live_video_id:props.liveVideo.data.live_video_id,\n          })\n        );\n      } else {\n        // Leave the channel.\n        await rtc.client.leave();\n        window.location.assign(\"/live-videos\");\n      } \n    }\n\n    async function muteAudio() {\n      if (!rtc.localAudioTrack) return;\n      if(localTrackState.audioTrackEnabled == true) {\n        await rtc.localAudioTrack.setEnabled(false);\n        localTrackState.audioTrackEnabled = false;\n        $(\"#mute-audio\").hide();\n        $(\"#unmute-audio\").show();\n      } else {\n        await rtc.localAudioTrack.setEnabled(true);\n        localTrackState.audioTrackEnabled = true;\n        $(\"#mute-audio\").show();\n        $(\"#unmute-audio\").hide();\n      }\n    }\n\n    async function muteVideo() {\n      if (!rtc.localVideoTrack) return;\n      if(localTrackState.videoTrackEnabled == true) {\n        await rtc.localVideoTrack.setEnabled(false);\n        localTrackState.videoTrackEnabled = false;\n        $(\"#mute-video\").hide();\n        $(\"#unmute-video\").show();\n      } else {\n        await rtc.localVideoTrack.setEnabled(true);\n        localTrackState.videoTrackEnabled = true;\n        $(\"#mute-video\").show();\n        $(\"#unmute-video\").hide();\n      }\n    }\n    \n    startBasicCall();\n\n    return (\n        <div className=\"agora-card\">\n            <div id=\"agora_local\" style={{ width: \"100%\", height: \"500px\" }} />\n            <div className=\"button-group mt-3 mb-3\">\n              \n              {props.isOwner ? \n              <>\n                <div className=\"live-action-icon-sec\">\n                  <ul className=\"list-unstyled live-action-flex\">\n                    <Media as=\"li\">\n                      <Link to=\"#\" \n                        onClick={() =>\n                          leaveCall()\n                      }>\n                        <Image\n                          src={\n                            window.location.origin + \"/assets/images/icons/end-stream.png\"\n                          }\n                          className=\"action-live-icon\"\n                        />\n                      </Link>\n                    </Media>\n                    <Media as=\"li\" id=\"mute-audio\">\n                      <Link to=\"#\"\n                      onClick={() =>\n                        muteAudio()\n                      }>\n                        <Image\n                          src={\n                            window.location.origin + \"/assets/images/icons/audio.png\"\n                          }\n                          className=\"action-live-icon\"\n                        />\n                      </Link>\n                    </Media>\n                    <Media as=\"li\" id=\"unmute-audio\" style={{display: \"none\"}}>\n                      <Link to=\"#\"\n                      onClick={() =>\n                        muteAudio()\n                      }>\n                        <Image\n                          src={\n                            window.location.origin + \"/assets/images/icons/no-audio.png\"\n                          }\n                          className=\"action-live-icon\"\n                        />\n                      </Link>\n                    </Media>\n                    <Media as=\"li\" id=\"mute-video\">\n                      <Link to=\"#\"\n                      onClick={() =>\n                        muteVideo()\n                      }>\n                        <Image\n                          src={\n                            window.location.origin + \"/assets/images/icons/video.png\"\n                          }\n                          className=\"action-live-icon\"\n                        />\n                      </Link>\n                    </Media>\n                    <Media as=\"li\" id=\"unmute-video\" style={{display: \"none\"}}>\n                      <Link to=\"#\"\n                      onClick={() =>\n                        muteVideo()\n                      }>\n                        <Image\n                          src={\n                            window.location.origin + \"/assets/images/icons/mute-video.png\"\n                          }\n                          className=\"action-live-icon\"\n                        />\n                      </Link>\n                    </Media>\n                  </ul>\n                </div>\n              </>\n                :\n                <div className=\"live-action-icon-sec\">\n                  <ul className=\"list-unstyled live-action-flex\">\n                    <Media as=\"li\">\n                      <Link to=\"#\" \n                        onClick={() =>\n                          leaveCall()\n                      }>\n                        <Image\n                          src={\n                            window.location.origin + \"/assets/images/icons/end-stream.png\"\n                          }\n                          className=\"action-live-icon\"\n                        />\n                      </Link>\n                    </Media>\n                  </ul>\n                </div>\n              }\n              \n              \n            </div>\n        </div>\n        \n    );\n};\n\n\nconst mapStateToPros = (state) => ({\n  liveVideo: state.liveVideo.singleLiveVideo,\n});\n\nfunction mapDispatchToProps(dispatch) {\nreturn { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(AgoraLive));"]},"metadata":{},"sourceType":"module"}