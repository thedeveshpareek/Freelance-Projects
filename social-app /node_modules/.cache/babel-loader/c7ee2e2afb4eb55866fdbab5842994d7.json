{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Bookmarks/BookmarksIndex.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport BookmarkNav from \"./BookmarkNav\";\nimport { connect } from \"react-redux\";\nimport { fetchBookmarksStart } from \"../../store/actions/BookmarkAction\";\nimport PostDisplayCard from \"../helper/PostDisplayCard\";\nimport BookmarkNoDataFound from \"../NoDataFound/BookmarkNoDataFound\";\nimport BookmarkLoader from \"../Loader/BookmarkLoader\";\nimport useInfiniteScroll from \"../helper/useInfiniteScroll\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst BookmarksIndex = props => {\n  useEffect(() => {\n    props.dispatch(fetchBookmarksStart({\n      type: \"all\",\n      skip: props.bookmark.skip\n    }));\n  }, []);\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchBookMarkData);\n  const [noMoreData, setNoMoreData] = useState(false);\n\n  function fetchBookMarkData() {\n    setTimeout(() => {\n      if (props.bookmark.length !== 0) {\n        props.dispatch(fetchBookmarksStart({\n          type: \"all\",\n          skip: props.bookmark.skip\n        }));\n        setIsFetching(false);\n      } else {\n        setNoMoreData(true);\n      }\n    }, 3000);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-profile bookmark-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BookmarkNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-post-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmarkes-list bookmarks-right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pull-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, t(\"all_bookmarks\"))))), props.bookmark.loading ? /*#__PURE__*/React.createElement(BookmarkLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }) : props.bookmark.data.posts.length > 0 ? props.bookmark.data.posts.map(post => /*#__PURE__*/React.createElement(PostDisplayCard, {\n    post: post,\n    key: post.post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(BookmarkNoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }))), noMoreData !== true ? /*#__PURE__*/React.createElement(React.Fragment, null, isFetching && \"Fetching more list items...\") : t(\"no_more_data\"))));\n};\n\nconst mapStateToPros = state => ({\n  bookmark: state.bookmark.bookmark\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(BookmarksIndex));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Bookmarks/BookmarksIndex.jsx"],"names":["React","useEffect","useState","Container","Row","Col","BookmarkNav","connect","fetchBookmarksStart","PostDisplayCard","BookmarkNoDataFound","BookmarkLoader","useInfiniteScroll","translate","t","BookmarksIndex","props","dispatch","type","skip","bookmark","isFetching","setIsFetching","fetchBookMarkData","noMoreData","setNoMoreData","setTimeout","length","loading","data","posts","map","post","post_id","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport BookmarkNav from \"./BookmarkNav\";\nimport { connect } from \"react-redux\";\nimport { fetchBookmarksStart } from \"../../store/actions/BookmarkAction\";\nimport PostDisplayCard from \"../helper/PostDisplayCard\";\nimport BookmarkNoDataFound from \"../NoDataFound/BookmarkNoDataFound\";\nimport BookmarkLoader from \"../Loader/BookmarkLoader\";\nimport useInfiniteScroll from \"../helper/useInfiniteScroll\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst BookmarksIndex = (props) => {\n  useEffect(() => {\n    props.dispatch(\n      fetchBookmarksStart({ type: \"all\", skip: props.bookmark.skip })\n    );\n  }, []);\n\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchBookMarkData);\n\n  const [noMoreData, setNoMoreData] = useState(false);\n\n  function fetchBookMarkData() {\n    setTimeout(() => {\n      if (props.bookmark.length !== 0) {\n        props.dispatch(\n          fetchBookmarksStart({ type: \"all\", skip: props.bookmark.skip })\n        );\n        setIsFetching(false);\n      } else {\n        setNoMoreData(true);\n      }\n    }, 3000);\n  }\n\n  return (\n    <>\n      <div className=\"edit-profile bookmark-sec\">\n        <Container>\n          <Row>\n            <BookmarkNav />\n            <Col sm={12} xs={12} md={8}>\n              <div className=\"profile-post-area\">\n                <div className=\"bookmarkes-list bookmarks-right-side\">\n                  <div className=\"pull-left\">\n                    <h3>{t(\"all_bookmarks\")}</h3>\n                  </div>\n                </div>\n              </div>\n              {props.bookmark.loading ? (\n                <BookmarkLoader />\n              ) : props.bookmark.data.posts.length > 0 ? (\n                props.bookmark.data.posts.map((post) => (\n                  <PostDisplayCard post={post} key={post.post_id} />\n                ))\n              ) : (\n                <BookmarkNoDataFound />\n              )}\n            </Col>\n          </Row>\n          {noMoreData !== true ? (\n            <>{isFetching && \"Fetching more list items...\"}</>\n          ) : (\n            t(\"no_more_data\")\n          )}\n        </Container>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  bookmark: state.bookmark.bookmark,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(BookmarksIndex));\n"]},"metadata":{},"sourceType":"module"}