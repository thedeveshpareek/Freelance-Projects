{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_WALLET_DETAILS_START, ADD_MONEY_VIA_BANK_START, ADD_MONEY_VIA_CARD_START, ADD_MONEY_VIA_PAYPAL_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchWalletDetailsSuccess, fetchWalletDetailsFailure, addMoneyViaCardSuccess, addMoneyViaCardFailure, addMoneyViaBankSuccess, addMoneyViaBankFailure, addMoneyViaPaypalSuccess, addMoneyViaPaypalFailure } from \"../actions/WalletAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* fetchWalletDetailsAPI() {\n  try {\n    const response = yield api.postMethod(\"wallets_index\");\n\n    if (response.data.success) {\n      yield put(fetchWalletDetailsSuccess(response.data.data)); // Do nothing\n    } else {\n      yield put(checkLogoutStatus(response.data));\n      yield put(fetchWalletDetailsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchWalletDetailsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.response.data.error);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addMoneyViaCardAPI() {\n  try {\n    const inputData = yield select(state => state.wallet.addMoneyInput.data);\n    const response = yield api.postMethod(\"wallets_add_money_by_stripe\", inputData);\n\n    if (response.data.success) {\n      yield put(addMoneyViaCardSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/wallet\");\n    } else {\n      yield put(addMoneyViaCardFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addMoneyViaCardFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.response.data.error);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addMoneyViaBankAPI() {\n  try {\n    const inputData = yield select(state => state.wallet.addMoneyInput.data);\n    const response = yield api.postMethod(\"wallets_add_money_by_bank_account\", inputData);\n\n    if (response.data.success) {\n      yield put(addMoneyViaBankSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/wallet\");\n    } else {\n      yield put(addMoneyViaBankFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addMoneyViaBankFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.response.data.error);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addMoneyViaPaypalAPI() {\n  try {\n    const inputData = yield select(state => state.wallet.addMoneyInput.data);\n    const response = yield api.postMethod(\"wallets_add_money_by_paypal\", inputData);\n\n    if (response.data.success) {\n      yield put(addMoneyViaPaypalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/wallet\");\n    } else {\n      yield put(addMoneyViaPaypalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addMoneyViaPaypalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.response.data.error);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_WALLET_DETAILS_START, fetchWalletDetailsAPI), yield takeLatest(ADD_MONEY_VIA_BANK_START, addMoneyViaBankAPI), yield takeLatest(ADD_MONEY_VIA_CARD_START, addMoneyViaCardAPI), yield takeLatest(ADD_MONEY_VIA_PAYPAL_START, addMoneyViaPaypalAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/WalletSaga.jsx"],"names":["call","select","put","takeLatest","all","api","FETCH_WALLET_DETAILS_START","ADD_MONEY_VIA_BANK_START","ADD_MONEY_VIA_CARD_START","ADD_MONEY_VIA_PAYPAL_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchWalletDetailsSuccess","fetchWalletDetailsFailure","addMoneyViaCardSuccess","addMoneyViaCardFailure","addMoneyViaBankSuccess","addMoneyViaBankFailure","addMoneyViaPaypalSuccess","addMoneyViaPaypalFailure","checkLogoutStatus","fetchWalletDetailsAPI","response","postMethod","data","success","error","notificationMessage","addMoneyViaCardAPI","inputData","state","wallet","addMoneyInput","message","window","location","assign","addMoneyViaBankAPI","addMoneyViaPaypalAPI","pageSaga"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\n\nimport api from \"../../Environment\";\nimport {\n  FETCH_WALLET_DETAILS_START,\n  ADD_MONEY_VIA_BANK_START,\n  ADD_MONEY_VIA_CARD_START,\n  ADD_MONEY_VIA_PAYPAL_START,\n} from \"../actions/ActionConstant\";\n\nimport { createNotification } from \"react-redux-notify\";\n\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchWalletDetailsSuccess,\n  fetchWalletDetailsFailure,\n  addMoneyViaCardSuccess,\n  addMoneyViaCardFailure,\n  addMoneyViaBankSuccess,\n  addMoneyViaBankFailure,\n  addMoneyViaPaypalSuccess,\n  addMoneyViaPaypalFailure,\n} from \"../actions/WalletAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* fetchWalletDetailsAPI() {\n  try {\n    const response = yield api.postMethod(\"wallets_index\");\n    if (response.data.success) {\n      yield put(fetchWalletDetailsSuccess(response.data.data));\n      // Do nothing\n    } else {\n      yield put(checkLogoutStatus(response.data));\n      yield put(fetchWalletDetailsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchWalletDetailsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(\n      error.response.data.error\n    );\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addMoneyViaCardAPI() {\n  try {\n    const inputData = yield select((state) => state.wallet.addMoneyInput.data);\n    const response = yield api.postMethod(\n      \"wallets_add_money_by_stripe\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(addMoneyViaCardSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/wallet\");\n    } else {\n      yield put(addMoneyViaCardFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addMoneyViaCardFailure(error));\n    const notificationMessage = getErrorNotificationMessage(\n      error.response.data.error\n    );\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addMoneyViaBankAPI() {\n  try {\n    const inputData = yield select((state) => state.wallet.addMoneyInput.data);\n    const response = yield api.postMethod(\n      \"wallets_add_money_by_bank_account\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(addMoneyViaBankSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/wallet\");\n    } else {\n      yield put(addMoneyViaBankFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addMoneyViaBankFailure(error));\n    const notificationMessage = getErrorNotificationMessage(\n      error.response.data.error\n    );\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addMoneyViaPaypalAPI() {\n  try {\n    const inputData = yield select((state) => state.wallet.addMoneyInput.data);\n    const response = yield api.postMethod(\n      \"wallets_add_money_by_paypal\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(addMoneyViaPaypalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/wallet\");\n    } else {\n      yield put(addMoneyViaPaypalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addMoneyViaPaypalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(\n      error.response.data.error\n    );\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([\n    yield takeLatest(FETCH_WALLET_DETAILS_START, fetchWalletDetailsAPI),\n    yield takeLatest(ADD_MONEY_VIA_BANK_START, addMoneyViaBankAPI),\n    yield takeLatest(ADD_MONEY_VIA_CARD_START, addMoneyViaCardAPI),\n    yield takeLatest(ADD_MONEY_VIA_PAYPAL_START, addMoneyViaPaypalAPI),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}