{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Ecom/EcomPaymentIndex.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\nimport \"./Ecom.css\";\nimport { Link } from \"react-router-dom\";\nimport { fetchCartListStart, removeCartDetailsStart, fetchDeliveryAddressStart, ordersPaymentByWalletStart, ordersPaymentByCardStart, ordersPaymentByPaypalStart } from \"../../store/actions/ProductsAction\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../NoDataFound/NoDataFound\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport AddWalletAmountModal from \"../helper/AddWalletAmountModal\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\n\nconst EcomPaymentIndex = props => {\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [selectedPayment, setSelectedPayment] = useState(\"card\");\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [newAddressInputData, setNewAddressInputData] = useState({\n    name: \"\",\n    contact_number: \"\",\n    address: \"\",\n    landmark: \"\",\n    pincode: \"\",\n    state: \"\"\n  });\n  const [addWalletAmountModal, setAddWalletAmountModal] = useState(false);\n\n  const closeAddWalletAmountModal = () => {\n    setAddWalletAmountModal(false);\n  };\n\n  const [isDefaultAddress, setIsDefaultAddress] = useState(false);\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n  useEffect(() => {\n    props.dispatch(fetchCartListStart());\n    props.dispatch(fetchDeliveryAddressStart());\n  }, []);\n\n  const handleDeliveryAddressSelect = address => {\n    setSelectedAddress(address);\n    setNewAddressInputData({\n      name: \"\",\n      contact_number: \"\",\n      address: \"\",\n      landmark: \"\",\n      pincode: \"\",\n      state: \"\"\n    });\n  }; //enable it for default address select\n  // useEffect(() => {\n  //   if (!props.deliveryAddress.loading) {\n  //     setSelectedAddress(\n  //       props.deliveryAddress.data.delivery_addresses.find(\n  //         (data) => data.is_default == 1\n  //       )\n  //     );\n  //   }\n  // }, [props.deliveryAddress.data]);\n\n\n  const handlePaymentChange = payment => {\n    setSelectedPayment(payment);\n  };\n\n  useEffect(() => {\n    switch (selectedPayment) {\n      case \"card\":\n        {\n          props.dispatch(fetchCardDetailsStart());\n          break;\n        }\n\n      case \"paypal\":\n        {\n          break;\n        }\n\n      case \"wallet\":\n        {\n          props.dispatch(fetchWalletDetailsStart());\n          break;\n        }\n\n      default:\n        return console.log(\"select payment\");\n    }\n  }, [selectedPayment]);\n  useEffect(() => {\n    if (!props.cards.loading) {\n      setSelectedCard(props.cards.data.cards.find(data => data.is_default == 1));\n    }\n  }, [props.cards.data]);\n\n  const handleCardsChange = card => {\n    setSelectedCard(card);\n  };\n\n  const handleAddressInputChange = event => {\n    setNewAddressInputData({ ...newAddressInputData,\n      [event.target.name]: event.target.value\n    });\n\n    if (event.target.value.length > 0) {\n      setSelectedAddress(null);\n    }\n  };\n\n  const handleAddressCheckboxChange = () => {\n    setIsDefaultAddress(!isDefaultAddress);\n  };\n\n  useEffect(() => {\n    setNewAddressInputData({ ...newAddressInputData,\n      is_default: isDefaultAddress ? 1 : 0\n    });\n  }, [isDefaultAddress]);\n\n  const getFormData = () => {\n    let formdata = {\n      cart_ids: !props.cartList.loading && props.cartList.data.carts.map(cart => cart.cart_id).toString()\n    };\n\n    if (selectedAddress != null) {\n      formdata = { ...formdata,\n        delivery_address_id: selectedAddress.delivery_address_id\n      };\n    } else {\n      formdata = { ...formdata,\n        ...newAddressInputData\n      };\n    }\n\n    return formdata;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formdata = getFormData();\n\n    switch (selectedPayment) {\n      case \"card\":\n        {\n          props.dispatch(ordersPaymentByCardStart({ ...formdata\n          }));\n          break;\n        }\n\n      case \"paypal\":\n        {\n          break;\n        }\n\n      case \"wallet\":\n        {\n          props.dispatch(ordersPaymentByWalletStart({ ...formdata\n          }));\n          break;\n        }\n\n      default:\n        return null;\n    }\n  };\n\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(\"Payment cancelled please try again..\");\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnSuccess = payment => {\n    setTimeout(() => {\n      const formdata = getFormData();\n      props.dispatch(ordersPaymentByPaypalStart({\n        payment_id: payment.paymentID,\n        ...formdata\n      }));\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ecom-payment-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, t(\"ecom_payment\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 7,\n    className: \"resp-mrg-btn-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-right-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, props.deliveryAddress.loading ? \"Loading\" : /*#__PURE__*/React.createElement(React.Fragment, null, props.deliveryAddress.data.total > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"payment-method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 27\n    }\n  }, props.deliveryAddress.data.delivery_addresses.map((address, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    className: \"resp-mrg-btn-xs mb-3\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radiobtn payment-method-card-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\" // id=\"inline-radio-1\"\n    ,\n    id: `inline-radio-${index + 1}`,\n    className: \"form-check-input\",\n    checked: selectedAddress != null && selectedAddress.delivery_address_id == address.delivery_address_id ? true : false,\n    name: \"delivery_address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    type: \"radio\",\n    for: \"inline-radio-1\",\n    className: \"form-check-label card-label\",\n    onClick: () => handleDeliveryAddressSelect(address),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-margin mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 43\n    }\n  }, address.contact_number)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-margin mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 43\n    }\n  }, address.landmark)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-margin mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 43\n    }\n  }, address.address)))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shipping-address-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, t(\"shipping_address\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Name\",\n    name: \"name\",\n    value: newAddressInputData.name,\n    onChange: event => handleAddressInputChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Contact Number\",\n    name: \"contact_number\",\n    type: \"number\",\n    value: newAddressInputData.contact_number,\n    onChange: event => handleAddressInputChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Address\",\n    name: \"address\",\n    value: newAddressInputData.address,\n    onChange: event => handleAddressInputChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Landmark\",\n    name: \"landmark\",\n    value: newAddressInputData.landmark,\n    onChange: event => handleAddressInputChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"pincode\",\n    name: \"pincode\",\n    type: \"number\",\n    value: newAddressInputData.pincode,\n    onChange: event => handleAddressInputChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"State\",\n    name: \"state\",\n    value: newAddressInputData.state,\n    onChange: event => handleAddressInputChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padding-small mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    id: \"customControlAutosizing-1\",\n    label: \"Save this information for next time\",\n    custom: true,\n    name: \"is_default\",\n    defaultChecked: isDefaultAddress,\n    onChange: event => handleAddressCheckboxChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"payment-method mb-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"resp-mrg-btn-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radiobtn payment-method-card-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"radio\",\n    id: \"inline-radio-1\",\n    className: \"form-check-input\",\n    checked: selectedPayment == \"card\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    type: \"radio\",\n    for: \"inline-radio-1\",\n    className: \"form-check-label card-label\",\n    onClick: () => handlePaymentChange(\"card\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 31\n    }\n  }, \"Card\"))))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radiobtn payment-method-card-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"radio\",\n    id: \"inline-radio-2\",\n    className: \"form-check-input\",\n    checked: selectedPayment == \"paypal\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    type: \"radio\",\n    for: \"inline-radio-2\",\n    className: \"form-check-label\",\n    onClick: () => handlePaymentChange(\"paypal\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 27\n    }\n  }, \"Paypal\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radiobtn payment-method-card-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"radio\",\n    id: \"inline-radio-3\",\n    className: \"form-check-input\",\n    checked: selectedPayment == \"wallet\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    type: \"radio\",\n    for: \"inline-radio-3\",\n    className: \"form-check-label\",\n    onClick: () => handlePaymentChange(\"wallet\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 27\n    }\n  }, \"Wallet\")))), selectedPayment == \"card\" ? props.cards.loading ? \"Loading\" : /*#__PURE__*/React.createElement(React.Fragment, null, props.cards.data.cards.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"payment-method gap-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 31\n    }\n  }, props.cards.data.cards.map((card, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"resp-mrg-btn-xs\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radiobtn payment-method-card-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\" // id=\"inline-radio-1\"\n    ,\n    id: `inline-radio-${index + 1}`,\n    className: \"form-check-input\",\n    name: \"cards\",\n    checked: selectedCard != null && selectedCard.unique_id == card.unique_id ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    type: \"radio\",\n    for: \"inline-radio-1\",\n    className: \"form-check-label card-label\",\n    onClick: () => handleCardsChange(card),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-margin mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 45\n    }\n  }, card.card_holder_name)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 43\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four)))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"add-account-icon\",\n    src: window.location.origin + \"/assets/images/icons/new/add-card.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 35\n    }\n  }, \"Add Card\"))))) : null, selectedPayment == \"wallet\" ? props.wallet.loading ? \"Loading\" : /*#__PURE__*/React.createElement(React.Fragment, null, props.wallet.data.user_wallet && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"payment-method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radiobtn mb-4 payment-method-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"payment-head-tit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 39\n    }\n  }, \"Wallet Balance :\", \" \", props.wallet.data.user_wallet.remaining_formatted, \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setAddWalletAmountModal(true),\n    className: \"continue-shipping-btn ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 41\n    }\n  }, t(\"add_wallet_amount\"))))))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ecom-payment-btn-sec mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, selectedPayment === \"paypal\" ? /*#__PURE__*/React.createElement(React.Fragment, null, selectedAddress != null || Object.values(newAddressInputData).filter(data => {\n    if (data) {\n      return data;\n    }\n  }).length >= 6 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: !props.cartList.loading && props.cartList.data.total_amount,\n    onError: paypalOnError,\n    onSuccess: paypalOnSuccess,\n    onCancel: paypalOnCancel,\n    shipping: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 31\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger text-bold return-to-cart-link mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }\n  }, \"Shipping address missing\")) : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"continue-shipping-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 25\n    }\n  }, t(\"pay_now\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/ecom-cart`,\n    className: \"return-to-cart-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 23\n    }\n  }, t(\"return_to_cart\")))))), /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 15\n    }\n  }, props.cartList.loading ? t(\"loading\") : props.cartList.data.carts.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ecom-payment-product-details-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 19\n    }\n  }, props.cartList.data.carts.map(cart => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-header-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-header-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"product-thumbnail-img\",\n    src: cart.user_product.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 29\n    }\n  }, cart.user_product.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ecom-payment-product-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 29\n    }\n  }, cart.sub_total_formatted))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-body-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 25\n    }\n  }, t(\"subtotal\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"product-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 25\n    }\n  }, props.cartList.data.sub_total_formatted)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 25\n    }\n  }, t(\"shipping\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 25\n    }\n  }, t(\"calculated_at_next_step\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-footer-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 23\n    }\n  }, t(\"total\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details-final-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 25\n    }\n  }, configuration.get(\"configData.currency_code\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 25\n    }\n  }, props.cartList.data.total_formatted)))) : /*#__PURE__*/React.createElement(NoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(AddWalletAmountModal, {\n    addWalletAmountModal: addWalletAmountModal,\n    closeAddWalletAmountModal: closeAddWalletAmountModal,\n    payments: props.wallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToPros = state => ({\n  cartList: state.userProducts.cartList,\n  deliveryAddress: state.userProducts.deliveryAddress,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(EcomPaymentIndex));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Ecom/EcomPaymentIndex.jsx"],"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Image","Link","fetchCartListStart","removeCartDetailsStart","fetchDeliveryAddressStart","ordersPaymentByWalletStart","ordersPaymentByCardStart","ordersPaymentByPaypalStart","connect","NoDataFound","configuration","translate","t","fetchWalletDetailsStart","fetchCardDetailsStart","PaypalExpressBtn","createNotification","AddWalletAmountModal","getSuccessNotificationMessage","getErrorNotificationMessage","EcomPaymentIndex","props","selectedAddress","setSelectedAddress","selectedPayment","setSelectedPayment","selectedCard","setSelectedCard","newAddressInputData","setNewAddressInputData","name","contact_number","address","landmark","pincode","state","addWalletAmountModal","setAddWalletAmountModal","closeAddWalletAmountModal","isDefaultAddress","setIsDefaultAddress","env","get","currency","client","sandbox","production","dispatch","handleDeliveryAddressSelect","handlePaymentChange","payment","console","log","cards","loading","data","find","is_default","handleCardsChange","card","handleAddressInputChange","event","target","value","length","handleAddressCheckboxChange","getFormData","formdata","cart_ids","cartList","carts","map","cart","cart_id","toString","delivery_address_id","handleSubmit","preventDefault","paypalOnError","err","notificationMessage","paypalOnCancel","paypalOnSuccess","setTimeout","payment_id","paymentID","deliveryAddress","total","delivery_addresses","index","unique_id","card_holder_name","last_four","window","location","origin","wallet","user_wallet","remaining_formatted","Object","values","filter","total_amount","user_product","picture","sub_total_formatted","total_formatted","mapStateToPros","userProducts","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\nimport \"./Ecom.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  fetchCartListStart,\n  removeCartDetailsStart,\n  fetchDeliveryAddressStart,\n  ordersPaymentByWalletStart,\n  ordersPaymentByCardStart,\n  ordersPaymentByPaypalStart,\n} from \"../../store/actions/ProductsAction\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../NoDataFound/NoDataFound\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport AddWalletAmountModal from \"../helper/AddWalletAmountModal\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nconst EcomPaymentIndex = (props) => {\n  const [selectedAddress, setSelectedAddress] = useState(null);\n\n  const [selectedPayment, setSelectedPayment] = useState(\"card\");\n\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const [newAddressInputData, setNewAddressInputData] = useState({\n    name : \"\",\n    contact_number : \"\",\n    address : \"\",\n    landmark :\"\",\n    pincode : \"\",\n    state : \"\"\n  });\n\n  const [addWalletAmountModal, setAddWalletAmountModal] = useState(false);\n\n\tconst closeAddWalletAmountModal = () => {\n\t\tsetAddWalletAmountModal(false);\n\t};\n\n  const [isDefaultAddress, setIsDefaultAddress] = useState(false);\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  useEffect(() => {\n    props.dispatch(fetchCartListStart());\n    props.dispatch(fetchDeliveryAddressStart());\n  }, []);\n\n  const handleDeliveryAddressSelect = (address) => {\n    setSelectedAddress(address);\n    setNewAddressInputData({\n      name : \"\",\n      contact_number : \"\",\n      address : \"\",\n      landmark :\"\",\n      pincode : \"\",\n      state : \"\"\n    })\n  };\n\n  //enable it for default address select\n\n  // useEffect(() => {\n  //   if (!props.deliveryAddress.loading) {\n  //     setSelectedAddress(\n  //       props.deliveryAddress.data.delivery_addresses.find(\n  //         (data) => data.is_default == 1\n  //       )\n  //     );\n  //   }\n  // }, [props.deliveryAddress.data]);\n\n  const handlePaymentChange = (payment) => {\n    setSelectedPayment(payment);\n  };\n\n  useEffect(() => {\n    switch (selectedPayment) {\n      case \"card\": {\n        props.dispatch(fetchCardDetailsStart());\n        break;\n      }\n      case \"paypal\": {\n        break;\n      }\n      case \"wallet\": {\n        props.dispatch(fetchWalletDetailsStart());\n        break;\n      }\n      default:\n        return console.log(\"select payment\");\n    }\n  }, [selectedPayment]);\n\n  useEffect(() => {\n    if (!props.cards.loading) {\n      setSelectedCard(\n        props.cards.data.cards.find((data) => data.is_default == 1)\n      );\n    }\n  }, [props.cards.data]);\n\n  const handleCardsChange = (card) => {\n    setSelectedCard(card);\n  };\n\n  const handleAddressInputChange = (event) => {\n    setNewAddressInputData({\n      ...newAddressInputData,\n      [event.target.name]: event.target.value,\n    });\n\n    if(event.target.value.length > 0 ){\n      setSelectedAddress(null)\n    }\n  };\n\n  const handleAddressCheckboxChange = () => {\n    setIsDefaultAddress(!isDefaultAddress);\n  };\n\n  useEffect(() => {\n    setNewAddressInputData({\n      ...newAddressInputData,\n      is_default: isDefaultAddress ? 1 : 0,\n    });\n  }, [isDefaultAddress]);\n\n  const getFormData = () => {\n    let formdata = {\n      cart_ids:\n        !props.cartList.loading &&\n        props.cartList.data.carts.map((cart) => cart.cart_id).toString(),\n    };\n\n    if (selectedAddress != null) {\n      formdata = {\n        ...formdata,\n        delivery_address_id: selectedAddress.delivery_address_id,\n      };\n    } else {\n      formdata = {\n        ...formdata,\n        ...newAddressInputData,\n      };\n    }\n\n    return formdata;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const formdata = getFormData();\n\n    switch (selectedPayment) {\n      case \"card\": {\n        props.dispatch(ordersPaymentByCardStart({ ...formdata }));\n        break;\n      }\n      case \"paypal\": {\n        break;\n      }\n      case \"wallet\": {\n        props.dispatch(ordersPaymentByWalletStart({ ...formdata }));\n        break;\n      }\n      default:\n        return null;\n    }\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnSuccess = (payment) => {\n    setTimeout(() => {\n      const formdata = getFormData();\n\n      props.dispatch(\n        ordersPaymentByPaypalStart({\n          payment_id: payment.paymentID,\n          ...formdata,\n        })\n      );\n    }, 1000);\n  };\n\n  return (\n    <>\n      <div className=\"ecom-payment-sec\">\n        <Container>\n          <h2>{t(\"ecom_payment\")}</h2>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Row>\n              <Col md={7} className=\"resp-mrg-btn-xs\">\n                <div className=\"border-right-divider\">\n                  {props.deliveryAddress.loading ? (\n                    \"Loading\"\n                  ) : (\n                    <>\n                      {props.deliveryAddress.data.total > 0 && (\n                        <>\n                          <Row className=\"payment-method\">\n                            {props.deliveryAddress.data.delivery_addresses.map(\n                              (address, index) => (\n                                <>\n                                  <Col\n                                    lg={6}\n                                    className=\"resp-mrg-btn-xs mb-3\"\n                                    key={index}\n                                  >\n                                    <div className=\"radiobtn payment-method-card-1\">\n                                      <input\n                                        type=\"radio\"\n                                        // id=\"inline-radio-1\"\n                                        id={`inline-radio-${index + 1}`}\n                                        className=\"form-check-input\"\n                                        checked={\n                                          selectedAddress != null &&\n                                          selectedAddress.delivery_address_id ==\n                                            address.delivery_address_id\n                                            ? true\n                                            : false\n                                        }\n                                        name=\"delivery_address\"\n                                      />\n                                      <label\n                                        type=\"radio\"\n                                        for=\"inline-radio-1\"\n                                        className=\"form-check-label card-label\"\n                                        onClick={() =>\n                                          handleDeliveryAddressSelect(address)\n                                        }\n                                      >\n                                        <p className=\"no-margin mb-3\">\n                                          <span className=\"card-option\">\n                                            {address.contact_number}\n                                          </span>\n                                        </p>\n                                        <p className=\"no-margin mb-3\">\n                                          <span className=\"card-option\">\n                                            {address.landmark}\n                                          </span>\n                                        </p>\n                                        <p className=\"no-margin mb-3\">\n                                          <span className=\"card-option\">\n                                            {address.address}\n                                          </span>\n                                        </p>\n                                      </label>\n                                    </div>\n                                  </Col>\n                                </>\n                              )\n                            )}\n                          </Row>\n                        </>\n                      )}\n                    </>\n                  )}\n                  {/* <div className=\"ecom-payment-header\">\n                      <h4>Contact Infromation</h4>\n                      <p>Already have an account? <Link to=\"/\">Login</Link></p>\n                  </div>\n                  <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                  </Form.Group>\n                  <Form.Check\n                      type=\"checkbox\"\n                      id=\"customControlAutosizing\"\n                      label=\"Keep me up to date on news and offers\"\n                      custom\n                  /> */}\n                  <div className=\"shipping-address-sec\">\n                    <h4>{t(\"shipping_address\")}</h4>\n                    <Form.Group>\n                      <Row>\n                        <Col>\n                          <Form.Control\n                            placeholder=\"Name\"\n                            name=\"name\"\n                            value={newAddressInputData.name}\n                            onChange={(event) =>\n                              handleAddressInputChange(event)\n                            }\n                          />\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        placeholder=\"Contact Number\"\n                        name=\"contact_number\"\n                        type=\"number\"\n                        value={newAddressInputData.contact_number}\n                        onChange={(event) => handleAddressInputChange(event)}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        placeholder=\"Address\"\n                        name=\"address\"\n                        value={newAddressInputData.address}\n                        onChange={(event) => handleAddressInputChange(event)}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        placeholder=\"Landmark\"\n                        name=\"landmark\"\n                        value={newAddressInputData.landmark}\n                        onChange={(event) => handleAddressInputChange(event)}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        placeholder=\"pincode\"\n                        name=\"pincode\"\n                        type=\"number\"\n                        value={newAddressInputData.pincode}\n                        onChange={(event) => handleAddressInputChange(event)}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Control\n                        placeholder=\"State\"\n                        name=\"state\"\n                        value={newAddressInputData.state}\n                        onChange={(event) => handleAddressInputChange(event)}\n                      />\n                    </Form.Group>\n                    {/* <Row>\n                      <Col>\n                        <Form.Group>\n                          <Form.Control\n                            as=\"select\"\n                            className=\"mr-sm-2\"\n                            id=\"inlineFormCustomSelect\"\n                            custom\n                          >\n                            <option value=\"0\">India</option>\n                            <option value=\"1\">USA</option>\n                            <option value=\"2\">UAE</option>\n                            <option value=\"3\">Spin</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group>\n                          <Form.Control\n                            as=\"select\"\n                            className=\"mr-sm-2\"\n                            id=\"inlineFormCustomSelect\"\n                            custom\n                          >\n                            <option value=\"0\">Tamil Nadu</option>\n                            <option value=\"1\">Kerala</option>\n                            <option value=\"2\">Andhra</option>\n                            <option value=\"3\">Telegana</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Control placeholder=\"PIN code\" />\n                      </Col>\n                    </Row> */}\n                    <div className=\"padding-small mb-3\">\n                      <Form.Check\n                        type=\"checkbox\"\n                        id=\"customControlAutosizing-1\"\n                        label=\"Save this information for next time\"\n                        custom\n                        name=\"is_default\"\n                        defaultChecked={isDefaultAddress}\n                        onChange={(event) => handleAddressCheckboxChange(event)}\n                      />\n                    </div>\n                    <Row className=\"payment-method mb-3 \">\n                      <Col md={6} className=\"resp-mrg-btn-xs\">\n                        <div className=\"radiobtn payment-method-card-1\">\n                          <Form.Control\n                            type=\"radio\"\n                            id=\"inline-radio-1\"\n                            className=\"form-check-input\"\n                            checked={selectedPayment == \"card\" ? true : false}\n                          />\n                          <label\n                            type=\"radio\"\n                            for=\"inline-radio-1\"\n                            className=\"form-check-label card-label\"\n                            onClick={() => handlePaymentChange(\"card\")}\n                          >\n                            <p className=\"no-margin\">\n                              <span className=\"card-option\">Card</span>\n                            </p>\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md={6}>\n                        <div className=\"radiobtn payment-method-card-1\">\n                          <Form.Control\n                            type=\"radio\"\n                            id=\"inline-radio-2\"\n                            className=\"form-check-input\"\n                            checked={selectedPayment == \"paypal\" ? true : false}\n                          />\n                          <label\n                            type=\"radio\"\n                            for=\"inline-radio-2\"\n                            className=\"form-check-label\"\n                            onClick={() => handlePaymentChange(\"paypal\")}\n                          >\n                            Paypal\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md={6} className=\"mt-4\">\n                        <div className=\"radiobtn payment-method-card-1\">\n                          <Form.Control\n                            type=\"radio\"\n                            id=\"inline-radio-3\"\n                            className=\"form-check-input\"\n                            checked={selectedPayment == \"wallet\" ? true : false}\n                          />\n                          <label\n                            type=\"radio\"\n                            for=\"inline-radio-3\"\n                            className=\"form-check-label\"\n                            onClick={() => handlePaymentChange(\"wallet\")}\n                          >\n                            Wallet\n                          </label>\n                        </div>\n                      </Col>\n                    </Row>\n                    {selectedPayment == \"card\" ? (\n                      props.cards.loading ? (\n                        \"Loading\"\n                      ) : (\n                        <>\n                          {props.cards.data.cards.length > 0 ? (\n                            <>\n                              <Row className=\"payment-method gap-3\">\n                                {props.cards.data.cards.map((card, index) => (\n                                  <>\n                                    <Col\n                                      md={12}\n                                      className=\"resp-mrg-btn-xs\"\n                                      key={index}\n                                    >\n                                      <div className=\"radiobtn payment-method-card-1\">\n                                        <input\n                                          type=\"radio\"\n                                          // id=\"inline-radio-1\"\n                                          id={`inline-radio-${index + 1}`}\n                                          className=\"form-check-input\"\n                                          name=\"cards\"\n                                          checked={\n                                            selectedCard != null &&\n                                            selectedCard.unique_id ==\n                                              card.unique_id\n                                              ? true\n                                              : false\n                                          }\n                                        />\n                                        <label\n                                          type=\"radio\"\n                                          for=\"inline-radio-1\"\n                                          className=\"form-check-label card-label\"\n                                          onClick={() =>\n                                            handleCardsChange(card)\n                                          }\n                                        >\n                                          <p className=\"no-margin mb-3\">\n                                            <span className=\"card-option\">\n                                              {card.card_holder_name}\n                                            </span>\n                                          </p>\n\n                                          <p className=\"desc\">\n                                            XXXX XXXX XXXX {card.last_four}\n                                          </p>\n                                        </label>\n                                      </div>\n                                    </Col>\n                                  </>\n                                ))}\n                              </Row>\n                            </>\n                          ) : (\n                            <div className=\"card-stripe-item\">\n                              <Link to=\"cards\">\n                                <div className=\"add-account-item\">\n                                  <Image\n                                    className=\"add-account-icon\"\n                                    src={\n                                      window.location.origin +\n                                      \"/assets/images/icons/new/add-card.svg\"\n                                    }\n                                  />\n                                  <h5 className=\"text-muted\">Add Card</h5>\n                                </div>\n                              </Link>\n                            </div>\n                          )}\n                        </>\n                      )\n                    ) : null}\n                    {selectedPayment == \"wallet\" ? (\n                      props.wallet.loading ? (\n                        \"Loading\"\n                      ) : (\n                        <>\n                          {props.wallet.data.user_wallet && (\n                            <>\n                              <Row className=\"payment-method\">\n                                <Col md={12}>\n                                  <div className=\"radiobtn mb-4 payment-method-card\">\n                                    <div>\n                                      <h3 className=\"payment-head-tit\">\n                                        Wallet Balance :{\" \"}\n                                        {\n                                          props.wallet.data.user_wallet\n                                            .remaining_formatted\n                                        }&nbsp;\n                                        <Button onClick={() => setAddWalletAmountModal(true)} className=\"continue-shipping-btn ml-4\">\n                                        {t(\"add_wallet_amount\")}\n                                      </Button>\n                                      </h3>\n                                    </div>\n                                  </div>\n                                </Col>\n                              </Row>\n                            </>\n                          )}\n                        </>\n                      )\n                    ) : null}\n                    <div className=\"ecom-payment-btn-sec mt-4\">\n                      {selectedPayment === \"paypal\" ? (\n                        <>\n                          {selectedAddress != null ||\n                          Object.values(newAddressInputData).filter((data) => {\n                            if (data) {\n                              return data;\n                            }\n                          }).length >= 6 ? (\n                            <>\n                              <PaypalExpressBtn\n                                env={env}\n                                client={client}\n                                currency={currency}\n                                total={\n                                  !props.cartList.loading &&\n                                  props.cartList.data.total_amount\n                                }\n                                onError={paypalOnError}\n                                onSuccess={paypalOnSuccess}\n                                onCancel={paypalOnCancel}\n                                shipping={2}\n                              />\n                            </>\n                          ) : (\n                            <p className=\"text-danger text-bold return-to-cart-link mb-0\">\n                              Shipping address missing\n                            </p>\n                          )}\n                        </>\n                      ) : (\n                        <Button type=\"submit\" className=\"continue-shipping-btn\">\n                          {t(\"pay_now\")}\n                        </Button>\n                      )}\n\n                      <Link to={`/ecom-cart`} className=\"return-to-cart-link\">\n                        {t(\"return_to_cart\")}\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </Col>\n              <Col md={5}>\n                {props.cartList.loading ? (\n                  t(\"loading\")\n                ) : props.cartList.data.carts.length > 0 ? (\n                  <div className=\"ecom-payment-product-details-sec\">\n                    {props.cartList.data.carts.map((cart) => (\n                      <div className=\"product-details-header-sec\">\n                        <div className=\"product-details-header-card\">\n                          <div className=\"product-details-info\">\n                            <Image\n                              className=\"product-thumbnail-img\"\n                              src={cart.user_product.picture}\n                            />\n                            <h6>{cart.user_product.name}</h6>\n                          </div>\n                          <div className=\"ecom-payment-product-amount\">\n                            <p>{cart.sub_total_formatted}</p>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                    <div className=\"product-details-body-sec\">\n                      <div className=\"product-details-card\">\n                        <h5>{t(\"subtotal\")}</h5>\n                        <p className=\"product-amount\">\n                          {props.cartList.data.sub_total_formatted}\n                        </p>\n                      </div>\n                      <div className=\"product-details-card\">\n                        <h5>{t(\"shipping\")}</h5>\n                        <p>{t(\"calculated_at_next_step\")}</p>\n                      </div>\n                    </div>\n                    <div className=\"product-details-footer-sec\">\n                      <h5>{t(\"total\")}</h5>\n                      <div className=\"product-details-final-amount\">\n                        <span>\n                          {configuration.get(\"configData.currency_code\")}\n                        </span>\n                        <p>{props.cartList.data.total_formatted}</p>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <NoDataFound></NoDataFound>\n                )}\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </div>\n      <AddWalletAmountModal\n\t\t\t\taddWalletAmountModal={addWalletAmountModal}\n\t\t\t\tcloseAddWalletAmountModal={closeAddWalletAmountModal}\n\t\t\t\tpayments={props.wallet}\n\t\t\t/>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  cartList: state.userProducts.cartList,\n  deliveryAddress: state.userProducts.deliveryAddress,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(EcomPaymentIndex));\n"]},"metadata":{},"sourceType":"module"}