{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Notification/NotificationIndex.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport NotificationAllSec from \"./NotificationAllSec\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport { fetchNotificationsStart } from \"../../store/actions/NotificationAction\";\nimport { connect } from \"react-redux\";\nimport NotificationLoader from \"../Loader/NotificationLoader\";\nimport NotificationTabSec from \"./NotificationTabSec\";\nimport NotificationInteractionsSec from \"./NotificationInteractionsSec\";\nimport NotificationLikedSec from \"./NotificationLikedSec\";\nimport NotificationSubscribedSec from \"./NotificationSubscribedSec\";\nimport NotificationTippedSec from \"./NotificationTippedSec\";\nimport NotificationPromotionsSec from \"./NotificationPromotionsSec\";\nimport NotificationVideoCallSec from \"./NotificationVideoCallSec\";\nimport NotificationAudioCallSec from \"./NotificationAudioCallSec\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst NotificationIndex = props => {\n  const [activeSec, setActiveSec] = useState(\"notify-all\");\n  useEffect(() => {\n    props.dispatch(fetchNotificationsStart());\n  }, []);\n\n  const changeSection = (event, type) => {\n    setActiveSec(type);\n\n    if (type == \"notify-all\") {\n      props.dispatch(fetchNotificationsStart());\n    } else {\n      props.dispatch(fetchNotificationsStart({\n        notification_type: type\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-post-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmarkes-list bookmarks-right-side resp-sapce-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pull-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"bookmarkes-list notify-title\",\n    to: `/home`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/back.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }), t(\"notifications\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabbable-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab\",\n    role: \"tabpanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NotificationTabSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    changeSection: changeSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content tabs padding-top-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, props.notification.loading ? /*#__PURE__*/React.createElement(NotificationLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NotificationAllSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationInteractionsSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationLikedSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationSubscribedSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationTippedSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationVideoCallSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationAudioCallSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(NotificationPromotionsSec, {\n    activeSec: activeSec,\n    setActiveSec: setActiveSec,\n    notifications: props.notification.data.notifications,\n    totalNotifications: props.notification.data.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }))))))))));\n};\n\nconst mapStateToPros = state => ({\n  notification: state.notification.notification\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(NotificationIndex));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Notification/NotificationIndex.jsx"],"names":["React","useState","useEffect","NotificationAllSec","Link","Container","Row","Col","Image","fetchNotificationsStart","connect","NotificationLoader","NotificationTabSec","NotificationInteractionsSec","NotificationLikedSec","NotificationSubscribedSec","NotificationTippedSec","NotificationPromotionsSec","NotificationVideoCallSec","NotificationAudioCallSec","translate","t","NotificationIndex","props","activeSec","setActiveSec","dispatch","changeSection","event","type","notification_type","window","location","origin","notification","loading","data","notifications","total","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NotificationAllSec from \"./NotificationAllSec\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport { fetchNotificationsStart } from \"../../store/actions/NotificationAction\";\nimport { connect } from \"react-redux\";\nimport NotificationLoader from \"../Loader/NotificationLoader\";\nimport NotificationTabSec from \"./NotificationTabSec\";\nimport NotificationInteractionsSec from \"./NotificationInteractionsSec\";\nimport NotificationLikedSec from \"./NotificationLikedSec\";\nimport NotificationSubscribedSec from \"./NotificationSubscribedSec\";\nimport NotificationTippedSec from \"./NotificationTippedSec\";\nimport NotificationPromotionsSec from \"./NotificationPromotionsSec\";\nimport NotificationVideoCallSec from \"./NotificationVideoCallSec\";\nimport NotificationAudioCallSec from \"./NotificationAudioCallSec\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst NotificationIndex = (props) => {\n  const [activeSec, setActiveSec] = useState(\"notify-all\");\n\n  useEffect(() => {\n    props.dispatch(fetchNotificationsStart());\n  }, []);\n\n  const changeSection = (event, type) => {\n    setActiveSec(type);\n    if (type == \"notify-all\") {\n      props.dispatch(fetchNotificationsStart());\n    } else {\n      props.dispatch(fetchNotificationsStart({ notification_type: type }));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"notification-page\">\n        <Container>\n          <Row>\n            <Col sm={12} md={12} xs={12}>\n              <div className=\"profile-post-area\">\n                <div className=\"bookmarkes-list bookmarks-right-side resp-sapce-center\">\n                  <div className=\"pull-left\">\n                    <Link className=\"bookmarkes-list notify-title\" to={`/home`}>\n                      <Image\n                        src={\n                          window.location.origin +\n                          \"/assets/images/icons/back.svg\"\n                        }\n                        className=\"svg-clone\"\n                      />\n                      {t(\"notifications\")}\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"tabbable-panel\">\n                <div className=\"tab\" role=\"tabpanel\">\n                  <NotificationTabSec\n                    activeSec={activeSec}\n                    setActiveSec={setActiveSec}\n                    changeSection={changeSection}\n                  />\n                  <div className=\"tab-content tabs padding-top-md\">\n                    {props.notification.loading ? (\n                      <NotificationLoader></NotificationLoader>\n                    ) : (\n                      <>\n                        <NotificationAllSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationInteractionsSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationLikedSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationSubscribedSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationTippedSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationVideoCallSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationAudioCallSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n\n                        <NotificationPromotionsSec\n                          activeSec={activeSec}\n                          setActiveSec={setActiveSec}\n                          notifications={props.notification.data.notifications}\n                          totalNotifications={props.notification.data.total}\n                        />\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  notification: state.notification.notification,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(NotificationIndex));\n"]},"metadata":{},"sourceType":"module"}