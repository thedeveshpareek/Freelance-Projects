{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport { ERROR_LOGOUT_CHECK } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nconst erroCode = [1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007];\n\nfunction* logoutStatusCheck() {\n  try {\n    const inputData = yield select(state => state.errorDetails.error);\n    console.log(\"Error Check statrted\", inputData);\n\n    if (erroCode.indexOf(inputData.error_code) !== -1) {\n      console.log(\"Error Check true\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userLoginStatus\");\n      localStorage.removeItem(\"user_picture\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"socket\");\n      localStorage.removeItem(\"user_cover\");\n      localStorage.removeItem(\"name\");\n      localStorage.removeItem(\"user_unique_id\");\n      localStorage.removeItem(\"is_document_verified\");\n      localStorage.removeItem(\"is_verified_badge\");\n      localStorage.removeItem(\"is_two_step_auth_enabled\");\n      localStorage.removeItem(\"is_content_creator\");\n      localStorage.removeItem(\"default_payment_method\");\n      localStorage.removeItem(\"emailId\");\n      localStorage.removeItem(\"total_followers\");\n      localStorage.removeItem(\"total_followings\");\n      localStorage.removeItem(\"is_subscription_enabled\");\n      const notificationMessage = getErrorNotificationMessage(inputData.error);\n      yield put(createNotification(notificationMessage));\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 300);\n    } else {\n      console.log(\"Error Check false\"); //   const notificationMessage = getErrorNotificationMessage(\n      //     response.data.error\n      //   );\n      //   yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    console.log(\"Error Check false\", error); // const notificationMessage = getErrorNotificationMessage(error.message);\n    // yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ERROR_LOGOUT_CHECK, logoutStatusCheck)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/ErrorSaga.jsx"],"names":["call","select","put","takeLatest","all","ERROR_LOGOUT_CHECK","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","erroCode","logoutStatusCheck","inputData","state","errorDetails","error","console","log","indexOf","error_code","localStorage","removeItem","notificationMessage","setTimeout","window","location","assign","pageSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAmD,oBAAnD;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SACEC,6BADF,EAEEC,2BAFF,QAGO,6CAHP;AAKA,MAAMC,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAjB;;AAEA,UAAUC,iBAAV,GAA8B;AAC5B,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMV,MAAM,CAAEW,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,KAA/B,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,SAApC;;AACA,QAAIF,QAAQ,CAACQ,OAAT,CAAiBN,SAAS,CAACO,UAA3B,MAA2C,CAAC,CAAhD,EAAmD;AACjDH,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAG,MAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,iBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,sBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,mBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,0BAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,oBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,wBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,SAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,iBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,kBAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,yBAAxB;AACA,YAAMC,mBAAmB,GAAGb,2BAA2B,CAACG,SAAS,CAACG,KAAX,CAAvD;AACA,YAAMZ,GAAG,CAACI,kBAAkB,CAACe,mBAAD,CAAnB,CAAT;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAzBD,MAyBO;AACLV,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADK,CAEL;AACA;AACA;AACA;AACD;AACF,GAnCD,CAmCE,OAAOF,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC,EADc,CAEd;AACA;AACD;AACF;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACE,kBAAD,EAAqBK,iBAArB,CAAjB,CAAD,CAAT;AACD","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport { ERROR_LOGOUT_CHECK } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nconst erroCode = [1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007];\n\nfunction* logoutStatusCheck() {\n  try {\n    const inputData = yield select((state) => state.errorDetails.error);\n    console.log(\"Error Check statrted\", inputData);\n    if (erroCode.indexOf(inputData.error_code) !== -1) {\n      console.log(\"Error Check true\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userLoginStatus\");\n      localStorage.removeItem(\"user_picture\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"socket\");\n      localStorage.removeItem(\"user_cover\");\n      localStorage.removeItem(\"name\");\n      localStorage.removeItem(\"user_unique_id\");\n      localStorage.removeItem(\"is_document_verified\");\n      localStorage.removeItem(\"is_verified_badge\");\n      localStorage.removeItem(\"is_two_step_auth_enabled\");\n      localStorage.removeItem(\"is_content_creator\");\n      localStorage.removeItem(\"default_payment_method\");\n      localStorage.removeItem(\"emailId\");\n      localStorage.removeItem(\"total_followers\");\n      localStorage.removeItem(\"total_followings\");\n      localStorage.removeItem(\"is_subscription_enabled\");\n      const notificationMessage = getErrorNotificationMessage(inputData.error);\n      yield put(createNotification(notificationMessage));\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 300);\n    } else {\n      console.log(\"Error Check false\");\n      //   const notificationMessage = getErrorNotificationMessage(\n      //     response.data.error\n      //   );\n      //   yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    console.log(\"Error Check false\", error);\n    // const notificationMessage = getErrorNotificationMessage(error.message);\n    // yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ERROR_LOGOUT_CHECK, logoutStatusCheck)]);\n}\n"]},"metadata":{},"sourceType":"module"}