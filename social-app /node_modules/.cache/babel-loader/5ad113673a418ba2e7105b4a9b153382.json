{"ast":null,"code":"import _objectSpread from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState}from\"react\";import{connect}from\"react-redux\";import{Form,Button,Container,Row,Col}from\"react-bootstrap\";import\"./AddBankIndex.css\";import{addBankAccountStart}from\"../../../store/actions/BankAccountAction\";import{translate,t}from\"react-multi-lang\";import{Link}from\"react-router-dom\";var AddBankIndex=function AddBankIndex(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),inputData=_useState2[0],setInputData=_useState2[1];var handleSubmit=function handleSubmit(event){event.preventDefault();props.dispatch(addBankAccountStart(inputData));};return/*#__PURE__*/React.createElement(\"div\",{className:\"card-list-sec\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Link,{className:\"bookmarkes-list notify-title back-button head-title\",onClick:function onClick(){return props.location.state&&props.location.state.prevPath?props.history.goBack():props.history.push(\"/home\");}},/*#__PURE__*/React.createElement(\"img\",{src:window.location.origin+\"/assets/images/icons/back.svg\",className:\"svg-clone\"}),t(\"add_bank\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"add-bank-box\"},/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formHorizontalNickname\"},/*#__PURE__*/React.createElement(Form.Label,null,t(\"routing_number\"),\": (*)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"routing_number\"),value:inputData.route_number,name:\"route_number\",onChange:function onChange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{route_number:event.currentTarget.value}));}}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formHorizontalAccountNumber\"},/*#__PURE__*/React.createElement(Form.Label,null,t(\"account_number\"),\": (*)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",placeholder:t(\"account_number\"),value:inputData.account_number,min:\"0\",name:\"account_number\",onChange:function onChange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{account_number:event.currentTarget.value}));}}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formHorizontalFirstname\"},/*#__PURE__*/React.createElement(Form.Label,null,t(\"first_name\"),\": (*)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"first_name\"),value:inputData.first_name,name:\"first_name\",onChange:function onChange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{first_name:event.currentTarget.value}));}}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formHorizontalLastname\"},/*#__PURE__*/React.createElement(Form.Label,null,t(\"last_name\"),\": (*)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"last_name\"),value:inputData.last_name,name:\"last_name\",onChange:function onChange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{last_name:event.currentTarget.value}));}}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"exampleForm.ControlSelect1\"},/*#__PURE__*/React.createElement(Form.Label,null,t(\"type_of_bank\"),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-capitalize\"},\"(*)\")),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",name:\"bank_type\",onChange:function onChange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{bank_type:event.currentTarget.value}));}},/*#__PURE__*/React.createElement(\"option\",{value:\"savings\"},t(\"savings\")),/*#__PURE__*/React.createElement(\"option\",{value:\"checking\"},t(\"checking\"))))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formHorizontalBusinessname\"},/*#__PURE__*/React.createElement(Form.Label,null,t(\"business_name\"),\": (\",t(\"optional\"),\")\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"business_name\"),value:inputData.business_name,name:\"business_name\",onChange:function onChange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{business_name:event.currentTarget.value}));}}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Form.Check,{inline:true,type:\"checkbox\",id:\"customControlAutosizing\",custom:true,required:\"required\",className:\"check-terms\"}),/*#__PURE__*/React.createElement(Form.Label,null,t(\"i_agree_to\"),/*#__PURE__*/React.createElement(Link,{target:\"_blank\",to:\"/page/terms\",className:\"terms-link\"},\" \",t(\"terms_conditions\"),\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"edit-save\"},/*#__PURE__*/React.createElement(Button,{className:\"btn gradient-btn gradientcolor addBank\",type:\"submit\",disabled:props.bankAccount.buttonDisable},props.bankAccount.loadingButtonContent!==null?props.bankAccount.loadingButtonContent:t(\"submit\")))))))));};var mapStateToPros=function mapStateToPros(state){return{bankAccount:state.bankAccount.addBankAccountInput};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(AddBankIndex));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Accounts/Payments/AddBankIndex.jsx"],"names":["React","Component","useState","connect","Form","Button","Container","Row","Col","addBankAccountStart","translate","t","Link","AddBankIndex","props","inputData","setInputData","handleSubmit","event","preventDefault","dispatch","location","state","prevPath","history","goBack","push","window","origin","route_number","currentTarget","value","account_number","first_name","last_name","bank_type","business_name","bankAccount","buttonDisable","loadingButtonContent","mapStateToPros","addBankAccountInput","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport \"./AddBankIndex.css\";\nimport { addBankAccountStart } from \"../../../store/actions/BankAccountAction\";\nimport { translate, t } from \"react-multi-lang\";\nimport { Link } from \"react-router-dom\";\n\nconst AddBankIndex = (props) => {\n  const [inputData, setInputData] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(addBankAccountStart(inputData));\n  };\n\n  return (\n    <div className=\"card-list-sec\">\n      <Container>\n        <Link\n          className=\"bookmarkes-list notify-title back-button head-title\"\n          onClick={() =>\n            props.location.state && props.location.state.prevPath\n              ? props.history.goBack()\n              : props.history.push(\"/home\")\n          }\n        >\n          <img\n            src={window.location.origin + \"/assets/images/icons/back.svg\"}\n            className=\"svg-clone\"\n          />\n          {t(\"add_bank\")}\n        </Link>\n        {/* <h4 className=\"head-title\">{t(\"add_bank\")}</h4> */}\n        <Row>\n          <Col sm={12} md={12}>\n            <div className=\"add-bank-box\">\n              <Form onSubmit={handleSubmit}>\n                <Col md={6}>\n                  <Form.Group controlId=\"formHorizontalNickname\">\n                    <Form.Label>{t(\"routing_number\")}: (*)</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder={t(\"routing_number\")}\n                      value={inputData.route_number}\n                      name=\"route_number\"\n                      onChange={(event) => {\n                        setInputData({\n                          ...inputData,\n                          route_number: event.currentTarget.value,\n                        });\n                      }}\n                    />\n                  </Form.Group>\n                </Col>\n\n                <Col md={6}>\n                  <Form.Group controlId=\"formHorizontalAccountNumber\">\n                    <Form.Label>{t(\"account_number\")}: (*)</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder={t(\"account_number\")}\n                      value={inputData.account_number}\n                      min=\"0\"\n                      name=\"account_number\"\n                      onChange={(event) => {\n                        setInputData({\n                          ...inputData,\n                          account_number: event.currentTarget.value,\n                        });\n                      }}\n                    />\n                  </Form.Group>\n                </Col>\n\n                <Col md={6}>\n                  <Form.Group controlId=\"formHorizontalFirstname\">\n                    <Form.Label>{t(\"first_name\")}: (*)</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder={t(\"first_name\")}\n                      value={inputData.first_name}\n                      name=\"first_name\"\n                      onChange={(event) => {\n                        setInputData({\n                          ...inputData,\n                          first_name: event.currentTarget.value,\n                        });\n                      }}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col md={6}>\n                  <Form.Group controlId=\"formHorizontalLastname\">\n                    <Form.Label>{t(\"last_name\")}: (*)</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder={t(\"last_name\")}\n                      value={inputData.last_name}\n                      name=\"last_name\"\n                      onChange={(event) => {\n                        setInputData({\n                          ...inputData,\n                          last_name: event.currentTarget.value,\n                        });\n                      }}\n                    />\n                  </Form.Group>\n                </Col>\n\n                <Col md={6}>\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>\n                      {t(\"type_of_bank\")}{\" \"}\n                      <span className=\"text-capitalize\">(*)</span>\n                    </Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"bank_type\"\n                      onChange={(event) => {\n                        setInputData({\n                          ...inputData,\n                          bank_type: event.currentTarget.value,\n                        });\n                      }}\n                    >\n                      <option value=\"savings\">{t(\"savings\")}</option>\n                      <option value=\"checking\">{t(\"checking\")}</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n\n                <Col md={6}>\n                  <Form.Group controlId=\"formHorizontalBusinessname\">\n                    <Form.Label>\n                      {t(\"business_name\")}: ({t(\"optional\")})\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder={t(\"business_name\")}\n                      value={inputData.business_name}\n                      name=\"business_name\"\n                      onChange={(event) => {\n                        setInputData({\n                          ...inputData,\n                          business_name: event.currentTarget.value,\n                        });\n                      }}\n                    />\n                  </Form.Group>\n                </Col>\n\n                <Col md={6}>\n                  <Form.Check\n                    inline\n                    type=\"checkbox\"\n                    id=\"customControlAutosizing\"\n                    custom\n                    required=\"required\"\n                    className=\"check-terms\"\n                  />\n                  <Form.Label>\n                    {t(\"i_agree_to\")}\n                    <Link\n                      target=\"_blank\"\n                      to=\"/page/terms\"\n                      className=\"terms-link\"\n                    >\n                      {\" \"}\n                      {t(\"terms_conditions\")}{\" \"}\n                    </Link>\n                  </Form.Label>\n                </Col>\n\n                <div className=\"edit-save\">\n                  <Button\n                    className=\"btn gradient-btn gradientcolor addBank\"\n                    type=\"submit\"\n                    disabled={props.bankAccount.buttonDisable}\n                  >\n                    {props.bankAccount.loadingButtonContent !== null\n                      ? props.bankAccount.loadingButtonContent\n                      : t(\"submit\")}\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  bankAccount: state.bankAccount.addBankAccountInput,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(AddBankIndex));\n"]},"metadata":{},"sourceType":"module"}