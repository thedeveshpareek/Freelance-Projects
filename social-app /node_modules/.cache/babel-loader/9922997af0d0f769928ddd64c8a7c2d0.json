{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import{Image}from\"react-bootstrap\";import NoDataFound from\"../NoDataFound/NoDataFound\";import VerifiedBadgeNoShadow from\"../Handlers/VerifiedBadgeNoShadow\";import{translate,t}from\"react-multi-lang\";var NotificationAllSec=function NotificationAllSec(props){var notifications=props.notifications;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{role:\"tabpanel\",className:props.activeSec===\"notify-all\"?\"tab-pane fade in active\":\"tab-pane fade\",id:\"Section1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"notification-list\"},notifications.length>0?notifications.map(function(notification){return/*#__PURE__*/React.createElement(\"div\",{className:\"notify-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"post-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"alignleft\"},/*#__PURE__*/React.createElement(\"a\",{className:\"title-container\",href:notification.action_url,target:\"_blank\"},/*#__PURE__*/React.createElement(Image,{src:notification.from_userpicture,className:\"user-image img-responsive notification-user-img \"}),/*#__PURE__*/React.createElement(\"div\",{className:\"user-name\"},/*#__PURE__*/React.createElement(\"span\",{className:\"post-user-name\"},notification.from_displayname,\" \",notification.from_user.is_verified_badge==1?/*#__PURE__*/React.createElement(\"div\",{className:\"pl-2\"},/*#__PURE__*/React.createElement(VerifiedBadgeNoShadow,null)):null,/*#__PURE__*/React.createElement(\"span\",{className:\"user-id\"},/*#__PURE__*/React.createElement(Link,{target:\"_blank\",to:notification.from_username},\"@\",notification.from_username))),/*#__PURE__*/React.createElement(\"span\",{className:\"post-user-notify\"},notification.message),/*#__PURE__*/React.createElement(\"span\",{className:\"post-user-notify-date\"},notification.updated_formatted))))));}):/*#__PURE__*/React.createElement(NoDataFound,null))));};export default translate(NotificationAllSec);","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Notification/NotificationAllSec.jsx"],"names":["React","Link","Image","NoDataFound","VerifiedBadgeNoShadow","translate","t","NotificationAllSec","props","notifications","activeSec","length","map","notification","action_url","from_userpicture","from_displayname","from_user","is_verified_badge","from_username","message","updated_formatted"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,mCAAlC,CACA,OAASC,SAAT,CAAoBC,CAApB,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,IAC5BC,CAAAA,aAD4B,CACVD,KADU,CAC5BC,aAD4B,CAGpC,mBACE,qDACE,2BACE,IAAI,CAAC,UADP,CAEE,SAAS,CACPD,KAAK,CAACE,SAAN,GAAoB,YAApB,CACI,yBADJ,CAEI,eALR,CAOE,EAAE,CAAC,UAPL,eAUE,2BAAK,SAAS,CAAC,mBAAf,EACGD,aAAa,CAACE,MAAd,CAAuB,CAAvB,CACCF,aAAa,CAACG,GAAd,CAAkB,SAACC,YAAD,qBAChB,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,yBACE,SAAS,CAAC,iBADZ,CAEE,IAAI,CAAEA,YAAY,CAACC,UAFrB,CAGE,MAAM,CAAC,QAHT,eAKE,oBAAC,KAAD,EACE,GAAG,CAAED,YAAY,CAACE,gBADpB,CAEE,SAAS,CAAC,kDAFZ,EALF,cASE,2BAAK,SAAS,CAAC,WAAf,eACE,4BAAM,SAAS,CAAC,gBAAhB,EACGF,YAAY,CAACG,gBADhB,CACkC,GADlC,CAEGH,YAAY,CAACI,SAAb,CAAuBC,iBAAvB,EAA4C,CAA5C,cACC,2BAAK,SAAS,CAAC,MAAf,eACA,oBAAC,qBAAD,MADA,CADD,CAIG,IANN,cAOE,4BAAM,SAAS,CAAC,SAAhB,eACE,oBAAC,IAAD,EACE,MAAM,CAAC,QADT,CAEE,EAAE,CAAEL,YAAY,CAACM,aAFnB,MAIIN,YAAY,CAACM,aAJjB,CADF,CAPF,CADF,cAiBE,4BAAM,SAAS,CAAC,kBAAhB,EACGN,YAAY,CAACO,OADhB,CAjBF,cAoBE,4BAAM,SAAS,CAAC,uBAAhB,EACGP,YAAY,CAACQ,iBADhB,CApBF,CATF,CADF,CADF,CADF,CADgB,EAAlB,CADD,cA4CC,oBAAC,WAAD,MA7CJ,CAVF,CADF,CADF,CA+DD,CAlED,CAoEA,cAAehB,CAAAA,SAAS,CAACE,kBAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image } from \"react-bootstrap\";\nimport NoDataFound from \"../NoDataFound/NoDataFound\";\nimport VerifiedBadgeNoShadow from \"../Handlers/VerifiedBadgeNoShadow\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst NotificationAllSec = (props) => {\n  const { notifications } = props;\n\n  return (\n    <>\n      <div\n        role=\"tabpanel\"\n        className={\n          props.activeSec === \"notify-all\"\n            ? \"tab-pane fade in active\"\n            : \"tab-pane fade\"\n        }\n        id=\"Section1\"\n      >\n       \n        <div className=\"notification-list\">\n          {notifications.length > 0 ? (\n            notifications.map((notification) => (\n              <div className=\"notify-item\">\n                <div className=\"post-header\">\n                  <div className=\"alignleft\">\n                    <a\n                      className=\"title-container\"\n                      href={notification.action_url}\n                      target=\"_blank\"\n                    >\n                      <Image\n                        src={notification.from_userpicture}\n                        className=\"user-image img-responsive notification-user-img \"\n                      />\n                      <div className=\"user-name\">\n                        <span className=\"post-user-name\">\n                          {notification.from_displayname}{\" \"}\n                          {notification.from_user.is_verified_badge == 1 ? (\n                            <div className=\"pl-2\">\n                            <VerifiedBadgeNoShadow/>\n                          </div>\n                          ) : null}\n                          <span className=\"user-id\">\n                            <Link\n                              target=\"_blank\"\n                              to={notification.from_username}\n                            >\n                              @{notification.from_username}\n                            </Link>\n                          </span>\n                        </span>\n                        <span className=\"post-user-notify\">\n                          {notification.message}\n                        </span>\n                        <span className=\"post-user-notify-date\">\n                          {notification.updated_formatted}\n                        </span>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoDataFound></NoDataFound>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default translate(NotificationAllSec);\n"]},"metadata":{},"sourceType":"module"}