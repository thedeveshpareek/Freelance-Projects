{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/UserChat/UserChatIndex.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Row, Col, Image, Container, InputGroup, FormControl, Button, Form, Overlay, Tooltip, Dropdown, Media } from \"react-bootstrap\";\nimport \"./UserChat.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addMessageContent, fetchChatMessageStart, fetchChatUsersStart } from \"../../store/actions/ChatAction\";\nimport { saveBlockUserStart } from \"../../store/actions/UserAction\";\nimport ChatUserList from \"./ChatUserList\";\nimport InboxNoDataFound from \"../NoDataFound/InboxNoDataFound\";\nimport io from \"socket.io-client\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport InboxLoader from \"../Loader/InboxLoader\";\nimport { getErrorNotificationMessage } from \"../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport VerifiedBadgeNoShadow from \"../Handlers/VerifiedBadgeNoShadow\";\nimport ChatAssetModal from \"../helper/ChatAssetModal\";\nimport ReactPlayer from \"react-player/lazy\";\nimport AssetPaymentModal from \"../helper/AssetPaymentModal\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { isMobile } from \"react-device-detect\";\nimport ReactFancyBox from 'react-fancybox';\nimport 'react-fancybox/lib/fancybox.css';\nconst $ = window.$;\nlet chatSocket;\n\nconst UserChatIndex = props => {\n  const [activeChat, setActiveChat] = useState(0);\n  const [toUserId, setToUserId] = useState(0);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [initialHeight, setInitialHeight] = useState(0);\n  const messageRef = useRef();\n  const [chatAssetUpload, setChatAssetUpload] = useState(false);\n  const [fileType, setFileType] = useState(\"picture\");\n  const [chatPayment, setPaymentModal] = useState(false);\n  const [paymentData, setPaymentData] = useState({\n    chat_message_id: 0,\n    from_user_id: localStorage.getItem(\"userId\"),\n    to_user_id: toUserId,\n    amount_formatted: 0,\n    amount: 0\n  });\n\n  const closeChatAssetUploadModal = () => {\n    setChatAssetUpload(false);\n  };\n\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n  const invalidMessageRef = useRef(null);\n  const [emptyMessageCheck, setEmptyMessageCheck] = useState(false);\n  const [searchKey, setSearchKey] = useState(\"\");\n  useEffect(() => {\n    props.dispatch(fetchChatUsersStart({\n      search_key: searchKey\n    }));\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (chatSocketUrl === \"\") {// const notificationMessage = getErrorNotificationMessage(\n      //   \"Socket URL is not configured. Chat wil not work...\"\n      // );\n      // props.dispatch(createNotification(notificationMessage));\n      // window.location.assign(\"/home\");\n    }\n\n    if (messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"nearest\"\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"Number of times called\");\n\n    if (props.chatUsers.loading === false && props.chatUsers.data.users.length > 0) {\n      console.log(\"Number of times called true  \");\n      setToUserId(props.chatUsers.data.users[0].to_user_id);\n      chatSocketConnect(props.chatUsers.data.users[0].to_user_id);\n    } else {}\n  }, [!props.chatUsers.loading]); // Scroll down function..\n\n  useEffect(() => {\n    console.log(\"Scroll down..\");\n    const objDiv = document.getElementById(\"options-holder\");\n\n    if (objDiv != null) {\n      let differenceNumber = objDiv.offsetHeight > objDiv.scrollHeight ? objDiv.offsetHeight - objDiv.scrollHeight : objDiv.scrollHeight - objDiv.offsetHeight;\n\n      if (differenceNumber > 280) {\n        objDiv.scrollTop = objDiv.scrollHeight;\n      } else {\n        objDiv.scrollTop = initialHeight;\n        setInitialHeight(initialHeight + 20);\n      }\n    }\n  }, [props.chatMessages.data.messages]);\n\n  const chatSocketConnect = to_user_id => {\n    // check the socket url is configured\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    console.log(\"chatSocket\", chatSocketUrl);\n    console.log(\"Input ID\", to_user_id);\n\n    if (chatSocketUrl) {\n      chatSocket = io(chatSocketUrl, {\n        query: `commonid:'user_id_` + localStorage.getItem(\"userId\") + `_to_user_id_` + to_user_id + `',myid:` + localStorage.getItem(\"userId\")\n      });\n      console.log(\"chatSocket\", chatSocket);\n      chatSocket.emit(\"update sender\", {\n        commonid: \"user_id_\" + localStorage.getItem(\"userId\") + \"_to_user_id_\" + to_user_id,\n        myid: localStorage.getItem(\"userId\")\n      });\n      let chatContent;\n      chatSocket.on(\"message\", newData => {\n        let content = [];\n        content.push(newData); // chatContent = [...this.state.chatData, ...content];\n        // this.setState({ chatData: chatContent });\n\n        console.log(content);\n        props.dispatch(addMessageContent(content));\n      });\n    }\n  };\n\n  const changeUser = (event, chat, index) => {\n    chatSocket.disconnect();\n\n    if (isMobile) {\n      window.location.assign(\"/user-chat-room/\" + chat.from_user_id + \"/\" + chat.to_user_id);\n    }\n\n    event.preventDefault();\n    setActiveChat(index);\n    let to_user_id = chat.to_user_id == localStorage.getItem(\"userId\") ? chat.from_user_id : chat.to_user_id;\n    setToUserId(to_user_id);\n    props.dispatch(fetchChatMessageStart({\n      to_user_id: chat.to_user_id,\n      from_user_id: chat.from_user_id\n    }));\n    chatSocketConnect(to_user_id);\n  };\n\n  const handleChatSubmit = event => {\n    event.preventDefault();\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (inputMessage.length == 0) {\n      setEmptyMessageCheck(true);\n    }\n\n    if (chatSocketUrl != undefined && inputMessage) {\n      let chatData = [{\n        from_user_id: localStorage.getItem(\"userId\"),\n        to_user_id: toUserId,\n        message: inputMessage,\n        type: \"uu\",\n        user_picture: localStorage.getItem(\"user_picture\"),\n        loggedin_user_id: localStorage.getItem(\"userId\"),\n        created: Date(),\n        from_username: localStorage.getItem(\"username\"),\n        from_displayname: localStorage.getItem(\"name\"),\n        from_userpicture: localStorage.getItem(\"user_picture\"),\n        from_user_unique_id: \"\",\n        to_username: \"\",\n        to_displayname: \"\",\n        to_userpicture: \"\",\n        to_user_unique_id: \"\"\n      }];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatData];\n      } else {\n        messages = [...chatData];\n      }\n\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatData));\n    }\n  };\n\n  useEffect(() => {\n    props.assetUpload.loading || handleMediaSubmit();\n  }, [props.assetUpload.loading]);\n\n  const handleMediaSubmit = () => {\n    const assetData = props.assetUpload.data.chat_asset;\n    const assetMessage = props.assetUpload.data.chat_message;\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (chatSocketUrl != undefined && assetData && assetMessage) {\n      let chatData = [{\n        from_user_id: localStorage.getItem(\"userId\"),\n        to_user_id: toUserId,\n        chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n        message: assetMessage ? assetMessage.message : \"\",\n        type: \"uu\",\n        user_picture: localStorage.getItem(\"user_picture\"),\n        loggedin_user_id: localStorage.getItem(\"userId\"),\n        created: Date(),\n        from_username: localStorage.getItem(\"username\"),\n        from_displayname: localStorage.getItem(\"name\"),\n        from_userpicture: localStorage.getItem(\"user_picture\"),\n        from_user_unique_id: \"\",\n        to_username: \"\",\n        to_displayname: \"\",\n        to_userpicture: \"\",\n        to_user_unique_id: \"\",\n        chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n        chat_asset_url: assetMessage.amount > 0 ? assetData.blur_file : assetData.file,\n        file_type: assetData.file_type,\n        is_user_needs_pay: assetMessage.amount > 0 ? 1 : 0,\n        amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n        amount_formatted: assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n        payment_text: assetMessage.amount > 0 ? \"UNLOCK MESSAGE FOR \" + assetMessage.amount_formatted : \"\"\n      }];\n      let chatMessageData = [{\n        from_user_id: localStorage.getItem(\"userId\"),\n        to_user_id: toUserId,\n        chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n        message: assetMessage ? assetMessage.message : \"\",\n        type: \"uu\",\n        user_picture: localStorage.getItem(\"user_picture\"),\n        loggedin_user_id: localStorage.getItem(\"userId\"),\n        created: Date(),\n        from_username: localStorage.getItem(\"username\"),\n        from_displayname: localStorage.getItem(\"name\"),\n        from_userpicture: localStorage.getItem(\"user_picture\"),\n        from_user_unique_id: \"\",\n        to_username: \"\",\n        to_displayname: \"\",\n        to_userpicture: \"\",\n        to_user_unique_id: \"\",\n        chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n        chat_asset_url: assetData.file,\n        file_type: assetData.file_type,\n        amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n        amount_formatted: assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n        is_user_needs_pay: 0,\n        payment_text: \"\"\n      }];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatMessageData];\n      } else {\n        messages = [...chatMessageData];\n      }\n\n      if (assetData) {\n        closeChatAssetUploadModal();\n      }\n\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatMessageData));\n    }\n  };\n\n  const chatInputChange = value => {\n    setInputMessage(value);\n\n    if (inputMessage.length > 0) {\n      setEmptyMessageCheck(false);\n    }\n  };\n\n  const handleAssetUploadModal = fileType => {\n    setChatAssetUpload(true);\n    setFileType(fileType);\n  };\n\n  const handleAssetPayment = (event, chat_message_id, amount_formatted, amount) => {\n    event.preventDefault();\n    setPaymentData({ ...paymentData,\n      chat_message_id: chat_message_id,\n      amount: amount,\n      amount_formatted: amount_formatted\n    });\n    setPaymentModal(true);\n  };\n\n  const closePaymentModal = () => {\n    setPaymentModal(false);\n  };\n\n  function triggerPicker(event) {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  }\n\n  const handleEmojiSelect = emoji => {\n    SetEmojiPicker(false);\n    setInputMessage(inputMessage + emoji.native);\n  };\n\n  const handleBlockUser = (event, status, user_id) => {\n    event.preventDefault();\n    props.dispatch(saveBlockUserStart({\n      user_id: user_id,\n      is_other_profile: 1\n    }));\n  };\n\n  const searchUser = value => {\n    setSearchKey(value);\n    props.dispatch(fetchChatUsersStart({\n      search_key: value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-list-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/home`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-chevron-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 21\n    }\n  }, t(\"chat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-list-search-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: t(\"search_by_username\"),\n    \"aria-label\": t(\"search_by_username\"),\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: event => searchUser(event.target.value),\n    value: searchKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-list-collapse-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, props.chatUsers.loading ? null : props.chatUsers.data && props.chatUsers.data.users.length > 0 ? /*#__PURE__*/React.createElement(ChatUserList, {\n    chatUsers: props.chatUsers.data,\n    activeChat: activeChat,\n    setActiveChat: setActiveChat,\n    changeUser: changeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-list-card active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-list-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-list-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 29\n    }\n  }, t(\"no_user_found\"))))))), props.chatUsers.loading || props.chatMessages.loading ? \"\" : props.chatMessages.data.user && props.chatMessages.data.user.user_unique_id ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-room-sec mobile-display-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-room-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.chatMessages.data.user.user_unique_id,\n    className: \"user-chat-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }, props.chatMessages.data.user.name, \" \", props.chatMessages.data.user.is_verified_badge == 1 ? /*#__PURE__*/React.createElement(VerifiedBadgeNoShadow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }) : null, props.chatMessages.data.user.is_online_status == 1 ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success f-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  }, \" \", \"(\", t(\"online\"), \")\") : \"\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"link-user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 25\n    }\n  }, \"@\", props.chatMessages.data.user.name, \" \")), /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"btn btn-default dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-ellipsis-v svg-clone vertical-dots h-dots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dropdown-menu dropdown-menu-right r-dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.chatMessages.data.user.user_unique_id,\n    className: \"dropdown-a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 29\n    }\n  }, \"View profile\")), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 27\n    }\n  }), props.chatMessages.data.is_block_user == 1 && /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"dropdown-a\",\n    onClick: event => handleBlockUser(event, \"unblocked\", props.chatMessages.data.user.user_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 31\n    }\n  }, \"UnBlock\")), /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-main-wrapper-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-content-sec\",\n    ref: messageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 23\n    }\n  }, props.chatMessages.data.messages.length > 0 ? props.chatMessages.data.messages.map((chatMessage, index) => /*#__PURE__*/React.createElement(React.Fragment, null, chatMessage.from_user_id == localStorage.getItem(\"userId\") ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-right-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: localStorage.getItem(\"user_picture\"),\n    alt: \"\",\n    className: \"user-message-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 39\n    }\n  }, chatMessage.chat_asset_url && chatMessage.file_type == \"video\" ? /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: chatMessage.chat_asset_url,\n    controls: true,\n    className: \"post-video-size chat-video\",\n    width: \"450px\",\n    height: \"450px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 43\n    }\n  }) : \"\", chatMessage.chat_asset_url && chatMessage.file_type == \"audio\" ? /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    src: chatMessage.chat_asset_url,\n    controls: true,\n    width: \"450px\",\n    height: \"450px\",\n    className: \"chat-room-audio-display\",\n    autoPlay: false,\n    controlsList: \"nodownload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 43\n    }\n  }) : // <ReactPlayer\n  //   url={chatMessage.chat_asset_url}\n  //   controls={true}\n  //   width=\"450px\"\n  //   height=\"450px\"\n  //   className=\"chat-room-audio-display\"\n  // />\n  \"\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 41\n    }\n  }, chatMessage.chat_asset_url && chatMessage.file_type == \"image\" ? /*#__PURE__*/React.createElement(ReactFancyBox, {\n    image: chatMessage.chat_asset_url,\n    className: \"chat-view-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 45\n    }\n  }) : \"\", chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery-top-btn-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"subscribe-post-btn-sec\",\n    onClick: event => handleAssetPayment(event, chatMessage.chat_message_id, chatMessage.amount, chatMessage.amount_formatted),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 47\n    }\n  }, chatMessage.payment_text)) : \"\"), chatMessage.message == \"\" ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 45\n    }\n  }, \"You, \", chatMessage.created), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 45\n    }\n  }, chatMessage.message)))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-left-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: props.chatMessages.data.user.picture,\n    alt: \"\",\n    className: \"user-message-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 39\n    }\n  }, chatMessage.chat_asset_url && chatMessage.file_type == \"video\" ? chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(Image, {\n    src: chatMessage.chat_asset_url,\n    className: \"chat-view-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: chatMessage.chat_asset_url,\n    controls: true,\n    className: \"post-video-size chat-room-video-display chat-video\",\n    width: \"450px\",\n    height: \"450px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 45\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 41\n    }\n  }, chatMessage.chat_asset_url && chatMessage.file_type == \"image\" ? /*#__PURE__*/React.createElement(Image, {\n    src: chatMessage.chat_asset_url,\n    className: \"chat-view-image\" // onClick={(event) =>\n    //   handleImagePreview(event, 1)\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 45\n    }\n  }) : \"\", chatMessage.chat_asset_url && chatMessage.file_type == \"audio\" ? chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(Image, {\n    src: chatMessage.chat_asset_url,\n    className: \"chat-view-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 47\n    }\n  }) : /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    src: chatMessage.chat_asset_url,\n    controls: true,\n    width: \"450px\",\n    height: \"450px\",\n    className: \"chat-room-audio-display\",\n    autoPlay: false,\n    controlsList: \"nodownload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 47\n    }\n  }) // <ReactPlayer\n  //   url={chatMessage.chat_asset_url}\n  //   controls={true}\n  //   width=\"450px\"\n  //   height=\"450px\"\n  //   className=\"chat-room-audio-display\"\n  // />\n  : \"\", chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery-top-btn-sec chat-room-pay-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"subscribe-post-btn-sec\",\n    onClick: event => handleAssetPayment(event, chatMessage.chat_message_id, chatMessage.amount, chatMessage.amount_formatted),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 47\n    }\n  }, chatMessage.payment_text)) : \"\"), chatMessage.message == \"\" ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 45\n    }\n  }, props.chatMessages.data.user.name, \", \", chatMessage.created), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 45\n    }\n  }, chatMessage.message)))), \" \")) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-chat-main-wrapper-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"chat_post_form\",\n    className: \"has-advanced-upload\",\n    onSubmit: handleChatSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    hasValidation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Type a message\",\n    \"aria-label\": \"Type a message\",\n    \"aria-describedby\": \"basic-addon2\",\n    value: inputMessage,\n    onChange: event => {\n      chatInputChange(event.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-icon-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 27\n    }\n  }, configuration.get(\"configData.is_chat_asset_enabled\") == 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    className: \"chat-border-needed border-radius-zero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-can_send\": \"true\",\n    className: \"g-btn m-rounded b-chat__btn-submit\",\n    onClick: () => handleAssetUploadModal(\"image\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/picture.svg\",\n    className: \"svg-clone  wh-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    className: \"border-radius-zero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-can_send\": \"true\",\n    className: \"g-btn m-rounded b-chat__btn-submit\",\n    onClick: () => handleAssetUploadModal(\"video\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/movie.svg\",\n    className: \"svg-clone  wh-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    className: \"chat-border-zero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-can_send\": \"true\",\n    className: \"g-btn m-rounded b-chat__btn-submit\",\n    onClick: () => handleAssetUploadModal(\"audio\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/audio.png\",\n    className: \"svg-clone  wh-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 37\n    }\n  }))))) : \"\", /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    className: \"position-relative last-child-mobile-icon chat-border-zero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"space-between-evenly\",\n    \"data-can_send\": \"true\",\n    onClick: handleChatSubmit,\n    ref: invalidMessageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"comment-send-icon\",\n    src: window.location.origin + \"/assets/images/icons/comment-send-icon.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Overlay, {\n    target: invalidMessageRef,\n    show: emptyMessageCheck,\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 29\n    }\n  }, props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    id: \"chat-invalid\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 33\n    }\n  }), \"Please type a message\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    type: \"button\",\n    onClick: triggerPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-smile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 31\n    }\n  })))))))), emojiPickerState && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emojiWrapper chat-emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    title: \"\",\n    emoji: \"point_up\",\n    onSelect: emoji => handleEmojiSelect(emoji),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(InboxNoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(ChatAssetModal, {\n    chatAssetUpload: chatAssetUpload,\n    closeChatAssetUploadModal: closeChatAssetUploadModal,\n    fileType: fileType,\n    toUserId: toUserId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 9\n    }\n  }), props.chatMessages.loading ? t(\"loading\") : /*#__PURE__*/React.createElement(AssetPaymentModal, {\n    chatPayment: chatPayment,\n    closePaymentModal: closePaymentModal,\n    paymentData: paymentData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToPros = state => ({\n  chatUsers: state.chat.chatUsers,\n  chatMessages: state.chat.messages,\n  assetUpload: state.chatAsset.saveAssetUpload\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(UserChatIndex));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/UserChat/UserChatIndex.jsx"],"names":["React","useEffect","useState","useRef","Row","Col","Image","Container","InputGroup","FormControl","Button","Form","Overlay","Tooltip","Dropdown","Media","Link","connect","addMessageContent","fetchChatMessageStart","fetchChatUsersStart","saveBlockUserStart","ChatUserList","InboxNoDataFound","io","configuration","translate","t","InboxLoader","getErrorNotificationMessage","createNotification","VerifiedBadgeNoShadow","ChatAssetModal","ReactPlayer","AssetPaymentModal","Picker","EmojiData","ReactAudioPlayer","isMobile","ReactFancyBox","$","window","chatSocket","UserChatIndex","props","activeChat","setActiveChat","toUserId","setToUserId","inputMessage","setInputMessage","initialHeight","setInitialHeight","messageRef","chatAssetUpload","setChatAssetUpload","fileType","setFileType","chatPayment","setPaymentModal","paymentData","setPaymentData","chat_message_id","from_user_id","localStorage","getItem","to_user_id","amount_formatted","amount","closeChatAssetUploadModal","emojiPickerState","SetEmojiPicker","invalidMessageRef","emptyMessageCheck","setEmptyMessageCheck","searchKey","setSearchKey","dispatch","search_key","chatSocketUrl","get","current","scrollIntoView","behavior","block","inline","console","log","chatUsers","loading","data","users","length","chatSocketConnect","objDiv","document","getElementById","differenceNumber","offsetHeight","scrollHeight","scrollTop","chatMessages","messages","query","emit","commonid","myid","chatContent","on","newData","content","push","changeUser","event","chat","index","disconnect","location","assign","preventDefault","handleChatSubmit","undefined","chatData","message","type","user_picture","loggedin_user_id","created","Date","from_username","from_displayname","from_userpicture","from_user_unique_id","to_username","to_displayname","to_userpicture","to_user_unique_id","assetUpload","handleMediaSubmit","assetData","chat_asset","assetMessage","chat_message","chat_asset_id","chat_asset_url","blur_file","file","file_type","is_user_needs_pay","payment_text","chatMessageData","chatInputChange","value","handleAssetUploadModal","handleAssetPayment","closePaymentModal","triggerPicker","handleEmojiSelect","emoji","native","handleBlockUser","status","user_id","is_other_profile","searchUser","target","user","user_unique_id","name","is_verified_badge","is_online_status","is_block_user","map","chatMessage","picture","currentTarget","origin","mapStateToPros","state","chatAsset","saveAssetUpload","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Row,\n  Col,\n  Image,\n  Container,\n  InputGroup,\n  FormControl,\n  Button,\n  Form,\n  Overlay,\n  Tooltip,\n  Dropdown,\n  Media,\n} from \"react-bootstrap\";\nimport \"./UserChat.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  addMessageContent,\n  fetchChatMessageStart,\n  fetchChatUsersStart,\n} from \"../../store/actions/ChatAction\";\nimport { saveBlockUserStart } from \"../../store/actions/UserAction\";\nimport ChatUserList from \"./ChatUserList\";\nimport InboxNoDataFound from \"../NoDataFound/InboxNoDataFound\";\nimport io from \"socket.io-client\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\n\nimport InboxLoader from \"../Loader/InboxLoader\";\nimport { getErrorNotificationMessage } from \"../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport VerifiedBadgeNoShadow from \"../Handlers/VerifiedBadgeNoShadow\";\nimport ChatAssetModal from \"../helper/ChatAssetModal\";\nimport ReactPlayer from \"react-player/lazy\";\nimport AssetPaymentModal from \"../helper/AssetPaymentModal\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { isMobile } from \"react-device-detect\";\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\n\nconst $ = window.$;\n\nlet chatSocket;\n\nconst UserChatIndex = (props) => {\n  const [activeChat, setActiveChat] = useState(0);\n  const [toUserId, setToUserId] = useState(0);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [initialHeight, setInitialHeight] = useState(0);\n\n  const messageRef = useRef();\n\n  const [chatAssetUpload, setChatAssetUpload] = useState(false);\n  const [fileType, setFileType] = useState(\"picture\");\n  const [chatPayment, setPaymentModal] = useState(false);\n  const [paymentData, setPaymentData] = useState({\n    chat_message_id: 0,\n    from_user_id: localStorage.getItem(\"userId\"),\n    to_user_id: toUserId,\n    amount_formatted: 0,\n    amount: 0,\n  });\n\n  const closeChatAssetUploadModal = () => {\n    setChatAssetUpload(false);\n  };\n\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  const invalidMessageRef = useRef(null);\n\n  const [emptyMessageCheck, setEmptyMessageCheck] = useState(false);\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  useEffect(() => {\n    props.dispatch(fetchChatUsersStart({ search_key: searchKey }));\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    if (chatSocketUrl === \"\") {\n      // const notificationMessage = getErrorNotificationMessage(\n      //   \"Socket URL is not configured. Chat wil not work...\"\n      // );\n      // props.dispatch(createNotification(notificationMessage));\n      // window.location.assign(\"/home\");\n    }\n    if (messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"nearest\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Number of times called\");\n    if (\n      props.chatUsers.loading === false &&\n      props.chatUsers.data.users.length > 0\n    ) {\n      console.log(\"Number of times called true  \");\n      setToUserId(props.chatUsers.data.users[0].to_user_id);\n      chatSocketConnect(props.chatUsers.data.users[0].to_user_id);\n    } else {\n    }\n  }, [!props.chatUsers.loading]);\n\n  // Scroll down function..\n  useEffect(() => {\n    console.log(\"Scroll down..\");\n    const objDiv = document.getElementById(\"options-holder\");\n    if (objDiv != null) {\n      let differenceNumber =\n        objDiv.offsetHeight > objDiv.scrollHeight\n          ? objDiv.offsetHeight - objDiv.scrollHeight\n          : objDiv.scrollHeight - objDiv.offsetHeight;\n\n      if (differenceNumber > 280) {\n        objDiv.scrollTop = objDiv.scrollHeight;\n      } else {\n        objDiv.scrollTop = initialHeight;\n        setInitialHeight(initialHeight + 20);\n      }\n    }\n  }, [props.chatMessages.data.messages]);\n\n  const chatSocketConnect = (to_user_id) => {\n    // check the socket url is configured\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    console.log(\"chatSocket\", chatSocketUrl);\n    console.log(\"Input ID\", to_user_id);\n    if (chatSocketUrl) {\n      chatSocket = io(chatSocketUrl, {\n        query:\n          `commonid:'user_id_` +\n          localStorage.getItem(\"userId\") +\n          `_to_user_id_` +\n          to_user_id +\n          `',myid:` +\n          localStorage.getItem(\"userId\"),\n      });\n      console.log(\"chatSocket\", chatSocket);\n      chatSocket.emit(\"update sender\", {\n        commonid:\n          \"user_id_\" +\n          localStorage.getItem(\"userId\") +\n          \"_to_user_id_\" +\n          to_user_id,\n        myid: localStorage.getItem(\"userId\"),\n      });\n      let chatContent;\n      chatSocket.on(\"message\", (newData) => {\n        let content = [];\n        content.push(newData);\n        // chatContent = [...this.state.chatData, ...content];\n        // this.setState({ chatData: chatContent });\n        console.log(content);\n        props.dispatch(addMessageContent(content));\n      });\n    }\n  };\n\n  const changeUser = (event, chat, index) => {\n    chatSocket.disconnect();\n    if (isMobile) {\n      window.location.assign(\n        \"/user-chat-room/\" + chat.from_user_id + \"/\" + chat.to_user_id\n      );\n    }\n    event.preventDefault();\n    setActiveChat(index);\n    let to_user_id =\n      chat.to_user_id == localStorage.getItem(\"userId\")\n        ? chat.from_user_id\n        : chat.to_user_id;\n    setToUserId(to_user_id);\n\n    props.dispatch(\n      fetchChatMessageStart({\n        to_user_id: chat.to_user_id,\n        from_user_id: chat.from_user_id,\n      })\n    );\n    chatSocketConnect(to_user_id);\n  };\n\n  const handleChatSubmit = (event) => {\n    event.preventDefault();\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (inputMessage.length == 0) {\n      setEmptyMessageCheck(true);\n    }\n\n    if (chatSocketUrl != undefined && inputMessage) {\n      let chatData = [\n        {\n          from_user_id: localStorage.getItem(\"userId\"),\n          to_user_id: toUserId,\n          message: inputMessage,\n          type: \"uu\",\n          user_picture: localStorage.getItem(\"user_picture\"),\n          loggedin_user_id: localStorage.getItem(\"userId\"),\n          created: Date(),\n          from_username: localStorage.getItem(\"username\"),\n          from_displayname: localStorage.getItem(\"name\"),\n          from_userpicture: localStorage.getItem(\"user_picture\"),\n          from_user_unique_id: \"\",\n          to_username: \"\",\n          to_displayname: \"\",\n          to_userpicture: \"\",\n          to_user_unique_id: \"\",\n        },\n      ];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatData];\n      } else {\n        messages = [...chatData];\n      }\n\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatData));\n    }\n  };\n\n  useEffect(() => {\n    props.assetUpload.loading || handleMediaSubmit();\n  }, [props.assetUpload.loading]);\n\n  const handleMediaSubmit = () => {\n    const assetData = props.assetUpload.data.chat_asset;\n    const assetMessage = props.assetUpload.data.chat_message;\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    if (chatSocketUrl != undefined && assetData && assetMessage) {\n      let chatData = [\n        {\n          from_user_id: localStorage.getItem(\"userId\"),\n          to_user_id: toUserId,\n          chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n          message: assetMessage ? assetMessage.message : \"\",\n          type: \"uu\",\n          user_picture: localStorage.getItem(\"user_picture\"),\n          loggedin_user_id: localStorage.getItem(\"userId\"),\n          created: Date(),\n          from_username: localStorage.getItem(\"username\"),\n          from_displayname: localStorage.getItem(\"name\"),\n          from_userpicture: localStorage.getItem(\"user_picture\"),\n          from_user_unique_id: \"\",\n          to_username: \"\",\n          to_displayname: \"\",\n          to_userpicture: \"\",\n          to_user_unique_id: \"\",\n          chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n          chat_asset_url:\n            assetMessage.amount > 0 ? assetData.blur_file : assetData.file,\n          file_type: assetData.file_type,\n          is_user_needs_pay: assetMessage.amount > 0 ? 1 : 0,\n          amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n          amount_formatted:\n            assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n          payment_text:\n            assetMessage.amount > 0\n              ? \"UNLOCK MESSAGE FOR \" + assetMessage.amount_formatted\n              : \"\",\n        },\n      ];\n\n      let chatMessageData = [\n        {\n          from_user_id: localStorage.getItem(\"userId\"),\n          to_user_id: toUserId,\n          chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n          message: assetMessage ? assetMessage.message : \"\",\n          type: \"uu\",\n          user_picture: localStorage.getItem(\"user_picture\"),\n          loggedin_user_id: localStorage.getItem(\"userId\"),\n          created: Date(),\n          from_username: localStorage.getItem(\"username\"),\n          from_displayname: localStorage.getItem(\"name\"),\n          from_userpicture: localStorage.getItem(\"user_picture\"),\n          from_user_unique_id: \"\",\n          to_username: \"\",\n          to_displayname: \"\",\n          to_userpicture: \"\",\n          to_user_unique_id: \"\",\n          chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n          chat_asset_url: assetData.file,\n          file_type: assetData.file_type,\n          amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n          amount_formatted:\n            assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n          is_user_needs_pay: 0,\n          payment_text: \"\",\n        },\n      ];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatMessageData];\n      } else {\n        messages = [...chatMessageData];\n      }\n      if (assetData) {\n        closeChatAssetUploadModal();\n      }\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatMessageData));\n    }\n  };\n\n  const chatInputChange = (value) => {\n    setInputMessage(value);\n    if (inputMessage.length > 0) {\n      setEmptyMessageCheck(false);\n    }\n  };\n\n  const handleAssetUploadModal = (fileType) => {\n    setChatAssetUpload(true);\n    setFileType(fileType);\n  };\n\n  const handleAssetPayment = (\n    event,\n    chat_message_id,\n    amount_formatted,\n    amount\n  ) => {\n    event.preventDefault();\n    setPaymentData({\n      ...paymentData,\n      chat_message_id: chat_message_id,\n      amount: amount,\n      amount_formatted: amount_formatted,\n    });\n    setPaymentModal(true);\n  };\n  const closePaymentModal = () => {\n    setPaymentModal(false);\n  };\n\n  function triggerPicker(event) {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  }\n\n  const handleEmojiSelect = (emoji) => {\n    SetEmojiPicker(false);\n    setInputMessage(inputMessage + emoji.native);\n  };\n\n  const handleBlockUser = (event, status, user_id) => {\n    event.preventDefault();\n    props.dispatch(\n      saveBlockUserStart({\n        user_id: user_id,\n        is_other_profile: 1,\n      })\n    );\n  };\n\n  const searchUser = (value) => {\n    setSearchKey(value);\n    props.dispatch(fetchChatUsersStart({ search_key: value }));\n  };\n\n  return (\n    <>\n      <div className=\"user-chat-sec\">\n        <Container>\n          <Row>\n            <Col sm=\"12\" md=\"12\">\n              <div className=\"user-chat-box\">\n                <div className=\"user-chat-list-sec\">\n                  <div className=\"user-chat-list-header\">\n                    <Link to={`/home`}>\n                      <div className=\"back-icon\">\n                        <i className=\"fas fa-chevron-left\"></i>\n                      </div>\n                    </Link>\n                    <h3>{t(\"chat\")}</h3>\n                  </div>\n                  <div className=\"chat-list-search-sec\">\n                    <InputGroup>\n                      <FormControl\n                        placeholder={t(\"search_by_username\")}\n                        aria-label={t(\"search_by_username\")}\n                        aria-describedby=\"basic-addon2\"\n                        onChange={(event) => searchUser(event.target.value)}\n                        value={searchKey}\n                      />\n                      <InputGroup.Text id=\"basic-addon2\">\n                        <i className=\"fas fa-search\"></i>\n                      </InputGroup.Text>\n                    </InputGroup>\n                  </div>\n                  <div className=\"chat-list-collapse-body\">\n                    {props.chatUsers.loading ? null : props.chatUsers.data &&\n                      props.chatUsers.data.users.length > 0 ? (\n                      <ChatUserList\n                        chatUsers={props.chatUsers.data}\n                        activeChat={activeChat}\n                        setActiveChat={setActiveChat}\n                        changeUser={changeUser}\n                      />\n                    ) : (\n                      <div className=\"user-list-card active\">\n                        <div className=\"user-list-body\">\n                          <div className=\"user-list-info\">\n                            <h6>{t(\"no_user_found\")}</h6>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {props.chatUsers.loading || props.chatMessages.loading ? (\n                  \"\"\n                ) : props.chatMessages.data.user &&\n                  props.chatMessages.data.user.user_unique_id ? (\n                  <div className=\"user-chat-room-sec mobile-display-none\">\n                    <div className=\"user-chat-room-header\">\n                      <Link\n                        to={`/` + props.chatMessages.data.user.user_unique_id}\n                        className=\"user-chat-msg\"\n                      >\n                        <h3>\n                          {props.chatMessages.data.user.name}{\" \"}\n                          {props.chatMessages.data.user.is_verified_badge ==\n                          1 ? (\n                            <VerifiedBadgeNoShadow />\n                          ) : null}\n                          {props.chatMessages.data.user.is_online_status ==\n                          1 ? (\n                            <span className=\"text-success f-12\">\n                              {\" \"}\n                              ({t(\"online\")})\n                            </span>\n                          ) : (\n                            \"\"\n                          )}\n                        </h3>\n                        <Link to=\"#\" className=\"link-user-name\">\n                          @{props.chatMessages.data.user.name}{\" \"}\n                        </Link>\n                      </Link>\n                      <Dropdown>\n                        <Dropdown.Toggle\n                          className=\"btn btn-default dropdown-toggle\"\n                          type=\"button\"\n                          id=\"dropdown-basic\"\n                        >\n                          {/* <Image\n                            src={\n                              window.location.origin +\n                              \"/assets/images/icons/vertical-dots.svg\"\n                            }\n                            className=\"svg-clone vertical-dots\"\n                          /> */}\n                          <i className=\"fas fa-ellipsis-v svg-clone vertical-dots h-dots\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right r-dropdown-menu\">\n                          <Media as=\"li\">\n                            <Link\n                              to={\n                                `/` +\n                                props.chatMessages.data.user.user_unique_id\n                              }\n                              className=\"dropdown-a\"\n                            >\n                              View profile\n                            </Link>\n                          </Media>\n                          <Media as=\"li\" className=\"divider\"></Media>\n                          {props.chatMessages.data.is_block_user == 1 && (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                className=\"dropdown-a\"\n                                onClick={(event) =>\n                                  handleBlockUser(\n                                    event,\n                                    \"unblocked\",\n                                    props.chatMessages.data.user.user_id\n                                  )\n                                }\n                              >\n                                UnBlock\n                              </Link>\n                            </Media>\n                          )}\n                          <></>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </div>\n                    <div className=\"user-chat-main-wrapper-body\">\n                      <div\n                        className=\"user-message-content-sec\"\n                        ref={messageRef}\n                      >\n                        {props.chatMessages.data.messages.length > 0\n                          ? props.chatMessages.data.messages.map(\n                              (chatMessage, index) => (\n                                <>\n                                  {chatMessage.from_user_id ==\n                                  localStorage.getItem(\"userId\") ? (\n                                    <div className=\"user-message-right-align\">\n                                      <div className=\"user-message-user-img-sec\">\n                                        <Image\n                                          src={localStorage.getItem(\n                                            \"user_picture\"\n                                          )}\n                                          alt=\"\"\n                                          className=\"user-message-img\"\n                                        />\n                                      </div>\n                                      <div className=\"user-message-info\">\n                                        {chatMessage.chat_asset_url &&\n                                        chatMessage.file_type == \"video\" ? (\n                                          <ReactPlayer\n                                            url={chatMessage.chat_asset_url}\n                                            controls={true}\n                                            className=\"post-video-size chat-video\"\n                                            width=\"450px\"\n                                            height=\"450px\"\n                                          />\n                                        ) : (\n                                          \"\"\n                                        )}\n                                        {chatMessage.chat_asset_url &&\n                                        chatMessage.file_type == \"audio\" ? (\n                                          <ReactAudioPlayer\n                                            src={chatMessage.chat_asset_url}\n                                            controls={true}\n                                            width=\"450px\"\n                                            height=\"450px\"\n                                            className=\"chat-room-audio-display\"\n                                            autoPlay={false}\n                                            controlsList={\"nodownload\"}\n                                          />\n                                        ) : (\n                                          // <ReactPlayer\n                                          //   url={chatMessage.chat_asset_url}\n                                          //   controls={true}\n                                          //   width=\"450px\"\n                                          //   height=\"450px\"\n                                          //   className=\"chat-room-audio-display\"\n                                          // />\n                                          \"\"\n                                        )}\n                                        <div>\n                                          {chatMessage.chat_asset_url &&\n                                          chatMessage.file_type == \"image\" ? (\n                                            <ReactFancyBox\n                                              image={chatMessage.chat_asset_url}\n                                              className=\"chat-view-image\"\n                                            />\n                                          ) : (\n                                            \"\"\n                                          )}\n\n                                          {chatMessage.is_user_needs_pay ===\n                                          1 ? (\n                                            <div className=\"gallery-top-btn-sec\">\n                                              <Button\n                                                className=\"subscribe-post-btn-sec\"\n                                                onClick={(event) =>\n                                                  handleAssetPayment(\n                                                    event,\n                                                    chatMessage.chat_message_id,\n                                                    chatMessage.amount,\n                                                    chatMessage.amount_formatted\n                                                  )\n                                                }\n                                              >\n                                                {chatMessage.payment_text}\n                                              </Button>\n                                            </div>\n                                          ) : (\n                                            \"\"\n                                          )}\n                                        </div>\n                                        {chatMessage.message == \"\" ? null : (\n                                          <>\n                                            <p>You, {chatMessage.created}</p>\n                                            <h6>{chatMessage.message}</h6>\n                                          </>\n                                        )}\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    <div className=\"user-message-left-align\">\n                                      <div className=\"user-message-user-img-sec\">\n                                        <Image\n                                          src={\n                                            props.chatMessages.data.user.picture\n                                          }\n                                          alt=\"\"\n                                          className=\"user-message-img\"\n                                        />\n                                      </div>\n                                      <div className=\"user-message-info\">\n                                        {chatMessage.chat_asset_url &&\n                                        chatMessage.file_type == \"video\" ? (\n                                          chatMessage.is_user_needs_pay ===\n                                          1 ? (\n                                            <Image\n                                              src={chatMessage.chat_asset_url}\n                                              className=\"chat-view-image\"\n                                            ></Image>\n                                          ) : (\n                                            <ReactPlayer\n                                              url={chatMessage.chat_asset_url}\n                                              controls={true}\n                                              className=\"post-video-size chat-room-video-display chat-video\"\n                                              width=\"450px\"\n                                              height=\"450px\"\n                                            />\n                                          )\n                                        ) : (\n                                          \"\"\n                                        )}\n                                        <div>\n                                          {chatMessage.chat_asset_url &&\n                                          chatMessage.file_type == \"image\" ? (\n                                            <Image\n                                              src={chatMessage.chat_asset_url}\n                                              className=\"chat-view-image\"\n                                              // onClick={(event) =>\n                                              //   handleImagePreview(event, 1)\n                                              // }\n                                            />\n                                          ) : (\n                                            \"\"\n                                          )}\n                                          {chatMessage.chat_asset_url &&\n                                          chatMessage.file_type == \"audio\" ? (\n                                            chatMessage.is_user_needs_pay ===\n                                            1 ? (\n                                              <Image\n                                                src={chatMessage.chat_asset_url}\n                                                className=\"chat-view-image\"\n                                              ></Image>\n                                            ) : (\n                                              <ReactAudioPlayer\n                                                src={chatMessage.chat_asset_url}\n                                                controls={true}\n                                                width=\"450px\"\n                                                height=\"450px\"\n                                                className=\"chat-room-audio-display\"\n                                                autoPlay={false}\n                                                controlsList={\"nodownload\"}\n                                              />\n                                              // <ReactPlayer\n                                              //   url={chatMessage.chat_asset_url}\n                                              //   controls={true}\n                                              //   width=\"450px\"\n                                              //   height=\"450px\"\n                                              //   className=\"chat-room-audio-display\"\n                                              // />\n                                            )\n                                          ) : (\n                                            \"\"\n                                          )}\n\n                                          {chatMessage.is_user_needs_pay ===\n                                          1 ? (\n                                            <div className=\"gallery-top-btn-sec chat-room-pay-display\">\n                                              <Button\n                                                className=\"subscribe-post-btn-sec\"\n                                                onClick={(event) =>\n                                                  handleAssetPayment(\n                                                    event,\n                                                    chatMessage.chat_message_id,\n                                                    chatMessage.amount,\n                                                    chatMessage.amount_formatted\n                                                  )\n                                                }\n                                              >\n                                                {chatMessage.payment_text}\n                                              </Button>\n                                            </div>\n                                          ) : (\n                                            \"\"\n                                          )}\n                                        </div>\n                                        {chatMessage.message == \"\" ? null : (\n                                          <>\n                                            <p>\n                                              {\n                                                props.chatMessages.data.user\n                                                  .name\n                                              }\n                                              , {chatMessage.created}\n                                            </p>\n                                            <h6>{chatMessage.message}</h6>\n                                          </>\n                                        )}\n                                      </div>\n                                    </div>\n                                  )}{\" \"}\n                                </>\n                              )\n                            )\n                          : \"\"}\n                      </div>\n                      {/* <p className=\"typing-text mt-5\">Jason Doyle is typing...</p> */}\n                    </div>\n                    <div className=\"user-chat-main-wrapper-footer\">\n                      <Form\n                        id=\"chat_post_form\"\n                        className=\"has-advanced-upload\"\n                        onSubmit={handleChatSubmit}\n                      >\n                        <InputGroup hasValidation>\n                          <FormControl\n                            placeholder=\"Type a message\"\n                            aria-label=\"Type a message\"\n                            aria-describedby=\"basic-addon2\"\n                            value={inputMessage}\n                            onChange={(event) => {\n                              chatInputChange(event.currentTarget.value);\n                            }}\n                          />\n                          <div className=\"chat-icon-sec\">\n                          {configuration.get(\n                            \"configData.is_chat_asset_enabled\"\n                          ) == 1 ? (\n                            <>\n                              <InputGroup.Append>\n                                <InputGroup.Text id=\"basic-addon2\" className=\"chat-border-needed border-radius-zero\">\n                                  <Button\n                                    type=\"button\"\n                                    data-can_send=\"true\"\n                                    className=\"g-btn m-rounded b-chat__btn-submit\"\n                                    onClick={() =>\n                                      handleAssetUploadModal(\"image\")\n                                    }\n                                  >\n                                    <Image\n                                      src={\n                                        window.location.origin +\n                                        \"/assets/images/icons/picture.svg\"\n                                      }\n                                      className=\"svg-clone  wh-32\"\n                                    />\n                                  </Button>\n                                </InputGroup.Text>\n                              </InputGroup.Append>\n                              <InputGroup.Append>\n                                <InputGroup.Text id=\"basic-addon2\" className=\"border-radius-zero\">\n                                  <Button\n                                    type=\"button\"\n                                    data-can_send=\"true\"\n                                    className=\"g-btn m-rounded b-chat__btn-submit\"\n                                    onClick={() =>\n                                      handleAssetUploadModal(\"video\")\n                                    }\n                                  >\n                                    <Image\n                                      src={\n                                        window.location.origin +\n                                        \"/assets/images/icons/movie.svg\"\n                                      }\n                                      className=\"svg-clone  wh-32\"\n                                    />\n                                  </Button>\n                                </InputGroup.Text>\n                              </InputGroup.Append>\n                              <InputGroup.Append>\n                                <InputGroup.Text id=\"basic-addon2\" className=\"chat-border-zero\">\n                                  <Button\n                                    type=\"button\"\n                                    data-can_send=\"true\"\n                                    className=\"g-btn m-rounded b-chat__btn-submit\"\n                                    onClick={() =>\n                                      handleAssetUploadModal(\"audio\")\n                                    }\n                                  >\n                                    <Image\n                                      src={\n                                        window.location.origin +\n                                        \"/assets/images/icons/audio.png\"\n                                      }\n                                      className=\"svg-clone  wh-32\"\n                                    />\n                                  </Button>\n                                </InputGroup.Text>\n                              </InputGroup.Append>\n                            </>\n                          ) : (\n                            \"\"\n                          )}\n                          <InputGroup.Append>\n                          <InputGroup.Text\n                            id=\"basic-addon2\"\n                            className=\"position-relative last-child-mobile-icon chat-border-zero\"\n                          >\n                            <Button\n                              type=\"button\"\n                              className=\"space-between-evenly\"\n                              data-can_send=\"true\"\n                              onClick={handleChatSubmit}\n                              ref={invalidMessageRef}\n                            >\n                              {/* <i className=\"far fa-paper-plane\"></i> */}\n                              <Image\n                                className=\"comment-send-icon\"\n                                src={\n                                  window.location.origin +\n                                  \"/assets/images/icons/comment-send-icon.png\"\n                                }\n                              />\n                            </Button>\n                            </InputGroup.Text>\n                            </InputGroup.Append>\n                            <InputGroup.Append>\n                            <InputGroup.Text>\n                            <Overlay\n                              target={invalidMessageRef}\n                              show={emptyMessageCheck}\n                              placement=\"top\"\n                            >\n                              {(props) => (\n                                <Tooltip id=\"chat-invalid\" {...props}>\n                                  Please type a message\n                                </Tooltip>\n                              )}\n                            </Overlay>\n                            <Button\n                              className=\"ml-2\"\n                              type=\"button\"\n                              onClick={triggerPicker}\n                            >\n                              <i className=\"far fa-smile\"></i>\n                            </Button>\n                            </InputGroup.Text>\n                          </InputGroup.Append>\n                        </div>\n                        </InputGroup>\n                      </Form>\n                    </div>\n                    {emojiPickerState && (\n                      <div className=\"emojiWrapper chat-emoji\">\n                        <Picker\n                          title=\"\"\n                          emoji=\"point_up\"\n                          onSelect={(emoji) => handleEmojiSelect(emoji)}\n                        />\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <InboxNoDataFound />\n                )}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n        <ChatAssetModal\n          chatAssetUpload={chatAssetUpload}\n          closeChatAssetUploadModal={closeChatAssetUploadModal}\n          fileType={fileType}\n          toUserId={toUserId}\n        />\n        {props.chatMessages.loading ? (\n          t(\"loading\")\n        ) : (\n          <AssetPaymentModal\n            chatPayment={chatPayment}\n            closePaymentModal={closePaymentModal}\n            paymentData={paymentData}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  chatUsers: state.chat.chatUsers,\n  chatMessages: state.chat.messages,\n  assetUpload: state.chatAsset.saveAssetUpload,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(UserChatIndex));\n"]},"metadata":{},"sourceType":"module"}