{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/FansFollowing/UserCard.jsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Col, Dropdown, Image, Media } from \"react-bootstrap\";\nimport AddFavModal from \"../../helper/AddFavModal\";\nimport SendTipModal from \"../../helper/SendTipModal\";\nimport { deleteFavStart, saveFavStart } from \"../../../store/actions/FavAction\";\nimport { connect } from \"react-redux\";\nimport { getSuccessNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { saveBlockUserStart } from \"../../../store/actions/UserAction\";\nimport { unFollowUserStart } from \"../../../store/actions/FollowAction\";\nimport VerifiedBadgeNoShadow from \"../../Handlers/VerifiedBadgeNoShadow\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst UserCard = props => {\n  console.log(props.user);\n  const [sendTip, setSendTip] = useState(false);\n\n  const closeSendTipModal = () => {\n    setSendTip(false);\n  };\n\n  const [addFav, setAddFav] = useState(false);\n  const [favStatus, setFavStatus] = useState(\"\");\n  const [badgeStatus, setBadgeStatus] = useState(props.user.is_verified_badge);\n  const [blockUserStatus, setBlockUserStatus] = useState(\"\");\n  const [subscribeStatus, setSubscribeStatus] = useState(\"\");\n\n  const closeAddFavModal = () => {\n    setAddFav(false);\n  };\n\n  const removeFav = () => {\n    props.dispatch(deleteFavStart({\n      user_id: props.user.user_id\n    }));\n  };\n\n  const handleStar = (event, status) => {\n    event.preventDefault();\n    setFavStatus(status);\n    props.dispatch(saveFavStart({\n      user_id: props.user.user_id\n    }));\n  };\n\n  const handleBlockUser = (event, status) => {\n    event.preventDefault();\n    setBlockUserStatus(status);\n    props.dispatch(saveBlockUserStart({\n      user_id: props.user.user_id\n    }));\n  };\n\n  const handleUnfollowUser = (event, status) => {\n    event.preventDefault();\n    setSubscribeStatus(status);\n    props.dispatch(unFollowUserStart({\n      user_id: props.user.user_id\n    }));\n  };\n\n  const onCopy = event => {\n    const notificationMessage = getSuccessNotificationMessage(t('profile_link_copied'));\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 6,\n    lg: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-subscription-lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-subscription-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.user.user_unique_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"follower-cover\",\n    src: props.user.cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-profile-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.user.user_unique_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"follower-profile-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: props.user.picture,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-profile-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-status-text\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, t(\"last_seen\"), /*#__PURE__*/React.createElement(\"span\", {\n    title: \"User Updated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, props.user.updated)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-profile-toggle-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"btn dropdown-toggle btn-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"user-dropdown-dots dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/vertical-dots-white.svg\",\n    className: \"svg-clone vertical-dots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dropdown-menu dropdown-menu-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: props.user.share_link,\n    onCopy: onCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 31\n    }\n  }, \" \", t(\"copy_link_to_profile\"), \" \"))), blockUserStatus != \"\" ? blockUserStatus == \"unblocked\" ? /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleBlockUser(event, \"blocked\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, t(\"block_the_user\"))) : /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleBlockUser(event, \"unblocked\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, t(\"unblock_the_user\"))) : props.user.is_block_user == 1 ? /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleBlockUser(event, \"unblocked\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 31\n    }\n  }, t(\"unblock_the_user\"))) : /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleBlockUser(event, \"blocked\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 31\n    }\n  }, t(\"block_the_user\"))), subscribeStatus != \"\" ? subscribeStatus == \"unsubscribed\" ? /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.user.user_unique_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, t(\"subscribe\"))) : /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleUnfollowUser(event, \"unsubscribed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, t(\"unsubscribe\"))) : props.user.show_follow ? /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.user.user_unique_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 31\n    }\n  }, t(\"subscribe\"))) : /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleUnfollowUser(event, \"unsubscribed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 31\n    }\n  }, t(\"unsubscribe\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-wrapper-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-profile-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-name-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: props.user.user_unique_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 27\n    }\n  }, props.user.name, \" \", badgeStatus == 1 ? /*#__PURE__*/React.createElement(VerifiedBadgeNoShadow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 31\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-name-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.user.user_unique_id,\n    className: \"g-user-realname__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"follower-user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }, \"@\", props.user.username)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group-follower-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: props.user.share_link,\n    onCopy: onCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"g-btn m-rounded m-border m-icon m-icon-only m-colored has-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/share.svg\",\n    className: \"svg-clone \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 27\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-to-lists-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, favStatus !== \"\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, favStatus === \"added\" ? /*#__PURE__*/React.createElement(Link, {\n    type: \"button\",\n    className: \"swiper-btn-fav\",\n    onClick: event => handleStar(event, \"removed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/star.svg\",\n    className: \"svg-clone my-p-icons\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }), t(\"remove_from_favorites\")) : null), /*#__PURE__*/React.createElement(React.Fragment, null, favStatus === \"removed\" ? /*#__PURE__*/React.createElement(Link, {\n    type: \"button\",\n    className: \"swiper-btn-fav\",\n    onClick: event => handleStar(event, \"added\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/star.svg\",\n    className: \"svg-clone my-p-icons\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }), t(\"add_to_favorites\")) : null)) : props.user.is_fav_user == 1 ? /*#__PURE__*/React.createElement(Link, {\n    type: \"button\",\n    className: \"swiper-btn-fav\",\n    onClick: event => handleStar(event, \"removed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/star.svg\",\n    className: \"svg-clone my-p-icons\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 23\n    }\n  }), t(\"remove_from_favorites\")) : /*#__PURE__*/React.createElement(Link, {\n    type: \"button\",\n    className: \"swiper-btn-fav\",\n    onClick: event => handleStar(event, \"added\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/star.svg\",\n    className: \"svg-clone my-p-icons\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  }), t(\"add_to_favorites\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lists-button-group post-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn gradient-btn gradientcolor flexAlignCenter\",\n    onClick: () => setSendTip(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/tip.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"b-btn-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 19\n    }\n  }, t(\"tip\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lists-button-group\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    type: \"button\",\n    className: \"btn gradient-btn gradientcolor flexAlignCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/subscribe.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"b-btn-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }, t(\"subscribed_for_free\")))))))), /*#__PURE__*/React.createElement(SendTipModal, {\n    sendTip: sendTip,\n    closeSendTipModal: closeSendTipModal,\n    username: props.user.username,\n    userPicture: props.user.picture,\n    name: props.user.usernamee,\n    post_id: null,\n    user_id: props.user.user_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(translate(UserCard));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/FansFollowing/UserCard.jsx"],"names":["React","useState","Link","Button","Col","Dropdown","Image","Media","AddFavModal","SendTipModal","deleteFavStart","saveFavStart","connect","getSuccessNotificationMessage","createNotification","CopyToClipboard","saveBlockUserStart","unFollowUserStart","VerifiedBadgeNoShadow","translate","t","UserCard","props","console","log","user","sendTip","setSendTip","closeSendTipModal","addFav","setAddFav","favStatus","setFavStatus","badgeStatus","setBadgeStatus","is_verified_badge","blockUserStatus","setBlockUserStatus","subscribeStatus","setSubscribeStatus","closeAddFavModal","removeFav","dispatch","user_id","handleStar","event","status","preventDefault","handleBlockUser","handleUnfollowUser","onCopy","notificationMessage","user_unique_id","cover","picture","display","updated","window","location","origin","share_link","is_block_user","show_follow","name","username","is_fav_user","usernamee","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Col, Dropdown, Image, Media } from \"react-bootstrap\";\nimport AddFavModal from \"../../helper/AddFavModal\";\nimport SendTipModal from \"../../helper/SendTipModal\";\nimport { deleteFavStart, saveFavStart } from \"../../../store/actions/FavAction\";\nimport { connect } from \"react-redux\";\nimport { getSuccessNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { saveBlockUserStart } from \"../../../store/actions/UserAction\";\nimport { unFollowUserStart } from \"../../../store/actions/FollowAction\";\nimport VerifiedBadgeNoShadow from \"../../Handlers/VerifiedBadgeNoShadow\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst UserCard = (props) => {\n  console.log(props.user);\n  const [sendTip, setSendTip] = useState(false);\n\n  const closeSendTipModal = () => {\n    setSendTip(false);\n  };\n\n  const [addFav, setAddFav] = useState(false);\n  const [favStatus, setFavStatus] = useState(\"\");\n\n  const [badgeStatus, setBadgeStatus] = useState(props.user.is_verified_badge);\n  const [blockUserStatus, setBlockUserStatus] = useState(\"\");\n  const [subscribeStatus, setSubscribeStatus] = useState(\"\");\n\n  const closeAddFavModal = () => {\n    setAddFav(false);\n  };\n\n  const removeFav = () => {\n    props.dispatch(deleteFavStart({ user_id: props.user.user_id }));\n  };\n\n  const handleStar = (event, status) => {\n    event.preventDefault();\n    setFavStatus(status);\n    props.dispatch(\n      saveFavStart({\n        user_id: props.user.user_id,\n      })\n    );\n  };\n  const handleBlockUser = (event, status) => {\n    event.preventDefault();\n    setBlockUserStatus(status);\n    props.dispatch(\n      saveBlockUserStart({\n        user_id: props.user.user_id,\n      })\n    );\n  };\n\n  const handleUnfollowUser = (event, status) => {\n    event.preventDefault();\n    setSubscribeStatus(status);\n    props.dispatch(\n      unFollowUserStart({\n        user_id: props.user.user_id,\n      })\n    );\n  };\n\n  const onCopy = (event) => {\n    const notificationMessage = getSuccessNotificationMessage(\n      t('profile_link_copied')\n    );\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  return (\n    <>\n      <Col sm={12} md={6} lg={4} xs={12}>\n        <div className=\"follower-lists\">\n          <div className=\"follower-subscription-lists\">\n            <div className=\"follower-subscription-inner\">\n              <Link to={`/` + props.user.user_unique_id}>\n                <div className=\"follower-wrapper\">\n                  <Image className=\"follower-cover\" src={props.user.cover} />\n                </div>\n              </Link>\n              <div className=\"follower-profile-header\">\n                <Link to={`/` + props.user.user_unique_id}>\n                  <span className=\"follower-profile-avatar\">\n                    <Image src={props.user.picture} className=\"\" />\n                  </span>\n                </Link>\n                <div className=\"follower-info\">\n                  <div className=\"follower-profile-status\">\n                    <div\n                      className=\"follower-status-text\"\n                      style={{ display: \"none\" }}\n                    >\n                      {t(\"last_seen\")}\n                      <span title=\"User Updated\">{props.user.updated}</span>\n                    </div>\n                    <div className=\"follower-profile-toggle-dropdown\">\n                      {/* <Link to=\"#\" className=\"btn dropdown-toggle btn-link\">\n                        <Image\n                          src=\"assets/images/icons/vertical-dots.svg\"\n                          className=\"svg-clone vertical-dots\"\n                        />\n                      </Link> */}\n\n                      <Dropdown className=\"btn dropdown-toggle btn-link\">\n                        <Dropdown.Toggle\n                          className=\"user-dropdown-dots dropdown-toggle\"\n                          type=\"button\"\n                          id=\"dropdown-basic\"\n                        >\n                          <Image\n                            src={\n                              window.location.origin +\n                              \"/assets/images/icons/vertical-dots-white.svg\"\n                            }\n                            className=\"svg-clone vertical-dots\"\n                          />\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                          <CopyToClipboard\n                            text={props.user.share_link}\n                            onCopy={onCopy}\n                          >\n                            <Media as=\"li\">\n                              <Link to=\"#\"> {t(\"copy_link_to_profile\")} </Link>\n                            </Media>\n                          </CopyToClipboard>\n\n                          {blockUserStatus != \"\" ? (\n                            blockUserStatus == \"unblocked\" ? (\n                              <Media as=\"li\">\n                                <Link\n                                  to=\"#\"\n                                  onClick={(event) =>\n                                    handleBlockUser(event, \"blocked\")\n                                  }\n                                >\n                                  {t(\"block_the_user\")}\n                                </Link>\n                              </Media>\n                            ) : (\n                              <Media as=\"li\">\n                                <Link\n                                  to=\"#\"\n                                  onClick={(event) =>\n                                    handleBlockUser(event, \"unblocked\")\n                                  }\n                                >\n                                  {t(\"unblock_the_user\")}\n                                </Link>\n                              </Media>\n                            )\n                          ) : props.user.is_block_user == 1 ? (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                onClick={(event) =>\n                                  handleBlockUser(event, \"unblocked\")\n                                }\n                              >\n                                {t(\"unblock_the_user\")}\n                              </Link>\n                            </Media>\n                          ) : (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                onClick={(event) =>\n                                  handleBlockUser(event, \"blocked\")\n                                }\n                              >\n                                {t(\"block_the_user\")}\n                              </Link>\n                            </Media>\n                          )}\n\n                          {subscribeStatus != \"\" ? (\n                            subscribeStatus == \"unsubscribed\" ? (\n                              <Media as=\"li\">\n                                <Link to={`/` + props.user.user_unique_id}>\n                                  {t(\"subscribe\")}\n                                </Link>\n                              </Media>\n                            ) : (\n                              <Media as=\"li\">\n                                <Link\n                                  to=\"#\"\n                                  onClick={(event) =>\n                                    handleUnfollowUser(event, \"unsubscribed\")\n                                  }\n                                >\n                                  {t(\"unsubscribe\")}\n                                </Link>\n                              </Media>\n                            )\n                          ) : props.user.show_follow ? (\n                            <Media as=\"li\">\n                              <Link to={`/` + props.user.user_unique_id}>\n                                {t(\"subscribe\")}\n                              </Link>\n                            </Media>\n                          ) : (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                onClick={(event) =>\n                                  handleUnfollowUser(event, \"unsubscribed\")\n                                }\n                              >\n                                {t(\"unsubscribe\")}\n                              </Link>\n                            </Media>\n                          )}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </div>\n                  </div>\n                  <div className=\"follower-wrapper-name\">\n                    <div className=\"follower-profile-names\">\n                      <div className=\"follower-name-row\">\n                        <Link to={props.user.user_unique_id}>\n                          <div className=\"follower-user-name\">\n                            {props.user.name}{\" \"}\n                            {badgeStatus == 1 ? (\n                              <VerifiedBadgeNoShadow />\n                            ) : null}\n                          </div>\n                        </Link>\n                      </div>\n                      <div className=\"follower-name-row\">\n                        <Link\n                          to={`/` + props.user.user_unique_id}\n                          className=\"g-user-realname__wrapper\"\n                        >\n                          <div className=\"follower-user-id\">\n                            @{props.user.username}\n                          </div>\n                        </Link>\n                      </div>\n                    </div>\n\n                    <div className=\"group-follower-btns\">\n                      <CopyToClipboard\n                        text={props.user.share_link}\n                        onCopy={onCopy}\n                      >\n                        <Button\n                          type=\"button\"\n                          className=\"g-btn m-rounded m-border m-icon m-icon-only m-colored has-tooltip\"\n                        >\n                          <Image\n                            src=\"assets/images/icons/share.svg\"\n                            className=\"svg-clone \"\n                          />\n                        </Button>\n                      </CopyToClipboard>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"add-to-lists-button\">\n                <div className=\"swiper-favorite\">\n                  {favStatus !== \"\" ? (\n                    <>\n                      <>\n                        {favStatus === \"added\" ? (\n                          <Link\n                            type=\"button\"\n                            className=\"swiper-btn-fav\"\n                            onClick={(event) => handleStar(event, \"removed\")}\n                          >\n                            <Image\n                              src=\"assets/images/icons/star.svg\"\n                              className=\"svg-clone my-p-icons\"\n                              width=\"12\"\n                            />\n                            {t(\"remove_from_favorites\")}\n                          </Link>\n                        ) : null}\n                      </>\n                      <>\n                        {favStatus === \"removed\" ? (\n                          <Link\n                            type=\"button\"\n                            className=\"swiper-btn-fav\"\n                            onClick={(event) => handleStar(event, \"added\")}\n                          >\n                            <Image\n                              src=\"assets/images/icons/star.svg\"\n                              className=\"svg-clone my-p-icons\"\n                              width=\"12\"\n                            />\n                            {t(\"add_to_favorites\")}\n                          </Link>\n                        ) : null}\n                      </>\n                    </>\n                  ) : props.user.is_fav_user == 1 ? (\n                    <Link\n                      type=\"button\"\n                      className=\"swiper-btn-fav\"\n                      onClick={(event) => handleStar(event, \"removed\")}\n                    >\n                      <Image\n                        src=\"assets/images/icons/star.svg\"\n                        className=\"svg-clone my-p-icons\"\n                        width=\"12\"\n                      />\n                      {t(\"remove_from_favorites\")}\n                    </Link>\n                  ) : (\n                    <Link\n                      type=\"button\"\n                      className=\"swiper-btn-fav\"\n                      onClick={(event) => handleStar(event, \"added\")}\n                    >\n                      <Image\n                        src=\"assets/images/icons/star.svg\"\n                        className=\"svg-clone my-p-icons\"\n                        width=\"12\"\n                      />\n                      {t(\"add_to_favorites\")}\n                    </Link>\n                  )}\n                </div>\n              </div>\n              <div className=\"lists-button-group post-icons\">\n                <Button\n                  type=\"button\"\n                  className=\"btn gradient-btn gradientcolor flexAlignCenter\"\n                  onClick={() => setSendTip(true)}\n                >\n                  <Image\n                    src=\"assets/images/icons/tip.svg\"\n                    className=\"svg-clone\"\n                  />\n                  <span className=\"b-btn-text\">{t(\"tip\")}</span>\n                </Button>\n              </div>\n              <div className=\"lists-button-group\" style={{ display: \"none\" }}>\n                <Link\n                  type=\"button\"\n                  className=\"btn gradient-btn gradientcolor flexAlignCenter\"\n                >\n                  <Image\n                    src=\"assets/images/icons/subscribe.svg\"\n                    className=\"svg-clone\"\n                  />\n                  <span className=\"b-btn-text\">{t(\"subscribed_for_free\")}</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Col>\n      <SendTipModal\n        sendTip={sendTip}\n        closeSendTipModal={closeSendTipModal}\n        username={props.user.username}\n        userPicture={props.user.picture}\n        name={props.user.usernamee}\n        post_id={null}\n        user_id={props.user.user_id}\n      />\n    </>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(null, mapDispatchToProps)(translate(UserCard));\n"]},"metadata":{},"sourceType":"module"}