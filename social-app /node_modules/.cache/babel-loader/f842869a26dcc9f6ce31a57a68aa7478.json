{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import{Button,Col,Dropdown,Image,Media}from\"react-bootstrap\";import AddFavModal from\"../../helper/AddFavModal\";import SendTipModal from\"../../helper/SendTipModal\";import{deleteFavStart,saveFavStart}from\"../../../store/actions/FavAction\";import{connect}from\"react-redux\";import{getSuccessNotificationMessage}from\"../../helper/NotificationMessage\";import{createNotification}from\"react-redux-notify/lib/modules/Notifications\";import{CopyToClipboard}from\"react-copy-to-clipboard\";import{saveBlockUserStart}from\"../../../store/actions/UserAction\";import{unFollowUserStart}from\"../../../store/actions/FollowAction\";import VerifiedBadgeNoShadow from\"../../Handlers/VerifiedBadgeNoShadow\";import{translate,t}from\"react-multi-lang\";var UserCard=function UserCard(props){console.log(props.user);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),sendTip=_useState2[0],setSendTip=_useState2[1];var closeSendTipModal=function closeSendTipModal(){setSendTip(false);};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),addFav=_useState4[0],setAddFav=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),favStatus=_useState6[0],setFavStatus=_useState6[1];var _useState7=useState(props.user.is_verified_badge),_useState8=_slicedToArray(_useState7,2),badgeStatus=_useState8[0],setBadgeStatus=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),blockUserStatus=_useState10[0],setBlockUserStatus=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),subscribeStatus=_useState12[0],setSubscribeStatus=_useState12[1];var closeAddFavModal=function closeAddFavModal(){setAddFav(false);};var removeFav=function removeFav(){props.dispatch(deleteFavStart({user_id:props.user.user_id}));};var handleStar=function handleStar(event,status){event.preventDefault();setFavStatus(status);props.dispatch(saveFavStart({user_id:props.user.user_id}));};var handleBlockUser=function handleBlockUser(event,status){event.preventDefault();setBlockUserStatus(status);props.dispatch(saveBlockUserStart({user_id:props.user.user_id}));};var handleUnfollowUser=function handleUnfollowUser(event,status){event.preventDefault();setSubscribeStatus(status);props.dispatch(unFollowUserStart({user_id:props.user.user_id}));};var onCopy=function onCopy(event){var notificationMessage=getSuccessNotificationMessage(t('profile_link_copied'));props.dispatch(createNotification(notificationMessage));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:6,lg:4,xs:12},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-lists\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-subscription-lists\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-subscription-inner\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+props.user.user_unique_id},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-wrapper\"},/*#__PURE__*/React.createElement(Image,{className:\"follower-cover\",src:props.user.cover}))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-header\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+props.user.user_unique_id},/*#__PURE__*/React.createElement(\"span\",{className:\"follower-profile-avatar\"},/*#__PURE__*/React.createElement(Image,{src:props.user.picture,className:\"\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-status\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-status-text\",style:{display:\"none\"}},t(\"last_seen\"),/*#__PURE__*/React.createElement(\"span\",{title:\"User Updated\"},props.user.updated)),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-toggle-dropdown\"},/*#__PURE__*/React.createElement(Dropdown,{className:\"btn dropdown-toggle btn-link\"},/*#__PURE__*/React.createElement(Dropdown.Toggle,{className:\"user-dropdown-dots dropdown-toggle\",type:\"button\",id:\"dropdown-basic\"},/*#__PURE__*/React.createElement(Image,{src:window.location.origin+\"/assets/images/icons/vertical-dots-white.svg\",className:\"svg-clone vertical-dots\"})),/*#__PURE__*/React.createElement(Dropdown.Menu,{className:\"dropdown-menu dropdown-menu-right\"},/*#__PURE__*/React.createElement(CopyToClipboard,{text:props.user.share_link,onCopy:onCopy},/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\"},\" \",t(\"copy_link_to_profile\"),\" \"))),blockUserStatus!=\"\"?blockUserStatus==\"unblocked\"?/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleBlockUser(event,\"blocked\");}},t(\"block_the_user\"))):/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleBlockUser(event,\"unblocked\");}},t(\"unblock_the_user\"))):props.user.is_block_user==1?/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleBlockUser(event,\"unblocked\");}},t(\"unblock_the_user\"))):/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleBlockUser(event,\"blocked\");}},t(\"block_the_user\"))),subscribeStatus!=\"\"?subscribeStatus==\"unsubscribed\"?/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+props.user.user_unique_id},t(\"subscribe\"))):/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleUnfollowUser(event,\"unsubscribed\");}},t(\"unsubscribe\"))):props.user.show_follow?/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+props.user.user_unique_id},t(\"subscribe\"))):/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleUnfollowUser(event,\"unsubscribed\");}},t(\"unsubscribe\"))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-wrapper-name\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-names\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-name-row\"},/*#__PURE__*/React.createElement(Link,{to:props.user.user_unique_id},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-user-name\"},props.user.name,\" \",badgeStatus==1?/*#__PURE__*/React.createElement(VerifiedBadgeNoShadow,null):null))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-name-row\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+props.user.user_unique_id,className:\"g-user-realname__wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-user-id\"},\"@\",props.user.username)))),/*#__PURE__*/React.createElement(\"div\",{className:\"group-follower-btns\"},/*#__PURE__*/React.createElement(CopyToClipboard,{text:props.user.share_link,onCopy:onCopy},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"g-btn m-rounded m-border m-icon m-icon-only m-colored has-tooltip\"},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/share.svg\",className:\"svg-clone \"}))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"add-to-lists-button\"},/*#__PURE__*/React.createElement(\"div\",{className:\"swiper-favorite\"},favStatus!==\"\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,favStatus===\"added\"?/*#__PURE__*/React.createElement(Link,{type:\"button\",className:\"swiper-btn-fav\",onClick:function onClick(event){return handleStar(event,\"removed\");}},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/star.svg\",className:\"svg-clone my-p-icons\",width:\"12\"}),t(\"remove_from_favorites\")):null),/*#__PURE__*/React.createElement(React.Fragment,null,favStatus===\"removed\"?/*#__PURE__*/React.createElement(Link,{type:\"button\",className:\"swiper-btn-fav\",onClick:function onClick(event){return handleStar(event,\"added\");}},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/star.svg\",className:\"svg-clone my-p-icons\",width:\"12\"}),t(\"add_to_favorites\")):null)):props.user.is_fav_user==1?/*#__PURE__*/React.createElement(Link,{type:\"button\",className:\"swiper-btn-fav\",onClick:function onClick(event){return handleStar(event,\"removed\");}},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/star.svg\",className:\"svg-clone my-p-icons\",width:\"12\"}),t(\"remove_from_favorites\")):/*#__PURE__*/React.createElement(Link,{type:\"button\",className:\"swiper-btn-fav\",onClick:function onClick(event){return handleStar(event,\"added\");}},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/star.svg\",className:\"svg-clone my-p-icons\",width:\"12\"}),t(\"add_to_favorites\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"lists-button-group post-icons\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn gradient-btn gradientcolor flexAlignCenter\",onClick:function onClick(){return setSendTip(true);}},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/tip.svg\",className:\"svg-clone\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"b-btn-text\"},t(\"tip\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"lists-button-group\",style:{display:\"none\"}},/*#__PURE__*/React.createElement(Link,{type:\"button\",className:\"btn gradient-btn gradientcolor flexAlignCenter\"},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/subscribe.svg\",className:\"svg-clone\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"b-btn-text\"},t(\"subscribed_for_free\")))))))),/*#__PURE__*/React.createElement(SendTipModal,{sendTip:sendTip,closeSendTipModal:closeSendTipModal,username:props.user.username,userPicture:props.user.picture,name:props.user.usernamee,post_id:null,user_id:props.user.user_id}));};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(null,mapDispatchToProps)(translate(UserCard));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Accounts/FansFollowing/UserCard.jsx"],"names":["React","useState","Link","Button","Col","Dropdown","Image","Media","AddFavModal","SendTipModal","deleteFavStart","saveFavStart","connect","getSuccessNotificationMessage","createNotification","CopyToClipboard","saveBlockUserStart","unFollowUserStart","VerifiedBadgeNoShadow","translate","t","UserCard","props","console","log","user","sendTip","setSendTip","closeSendTipModal","addFav","setAddFav","favStatus","setFavStatus","is_verified_badge","badgeStatus","setBadgeStatus","blockUserStatus","setBlockUserStatus","subscribeStatus","setSubscribeStatus","closeAddFavModal","removeFav","dispatch","user_id","handleStar","event","status","preventDefault","handleBlockUser","handleUnfollowUser","onCopy","notificationMessage","user_unique_id","cover","picture","display","updated","window","location","origin","share_link","is_block_user","show_follow","name","username","is_fav_user","usernamee","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Col, Dropdown, Image, Media } from \"react-bootstrap\";\nimport AddFavModal from \"../../helper/AddFavModal\";\nimport SendTipModal from \"../../helper/SendTipModal\";\nimport { deleteFavStart, saveFavStart } from \"../../../store/actions/FavAction\";\nimport { connect } from \"react-redux\";\nimport { getSuccessNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { saveBlockUserStart } from \"../../../store/actions/UserAction\";\nimport { unFollowUserStart } from \"../../../store/actions/FollowAction\";\nimport VerifiedBadgeNoShadow from \"../../Handlers/VerifiedBadgeNoShadow\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst UserCard = (props) => {\n  console.log(props.user);\n  const [sendTip, setSendTip] = useState(false);\n\n  const closeSendTipModal = () => {\n    setSendTip(false);\n  };\n\n  const [addFav, setAddFav] = useState(false);\n  const [favStatus, setFavStatus] = useState(\"\");\n\n  const [badgeStatus, setBadgeStatus] = useState(props.user.is_verified_badge);\n  const [blockUserStatus, setBlockUserStatus] = useState(\"\");\n  const [subscribeStatus, setSubscribeStatus] = useState(\"\");\n\n  const closeAddFavModal = () => {\n    setAddFav(false);\n  };\n\n  const removeFav = () => {\n    props.dispatch(deleteFavStart({ user_id: props.user.user_id }));\n  };\n\n  const handleStar = (event, status) => {\n    event.preventDefault();\n    setFavStatus(status);\n    props.dispatch(\n      saveFavStart({\n        user_id: props.user.user_id,\n      })\n    );\n  };\n  const handleBlockUser = (event, status) => {\n    event.preventDefault();\n    setBlockUserStatus(status);\n    props.dispatch(\n      saveBlockUserStart({\n        user_id: props.user.user_id,\n      })\n    );\n  };\n\n  const handleUnfollowUser = (event, status) => {\n    event.preventDefault();\n    setSubscribeStatus(status);\n    props.dispatch(\n      unFollowUserStart({\n        user_id: props.user.user_id,\n      })\n    );\n  };\n\n  const onCopy = (event) => {\n    const notificationMessage = getSuccessNotificationMessage(\n      t('profile_link_copied')\n    );\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  return (\n    <>\n      <Col sm={12} md={6} lg={4} xs={12}>\n        <div className=\"follower-lists\">\n          <div className=\"follower-subscription-lists\">\n            <div className=\"follower-subscription-inner\">\n              <Link to={`/` + props.user.user_unique_id}>\n                <div className=\"follower-wrapper\">\n                  <Image className=\"follower-cover\" src={props.user.cover} />\n                </div>\n              </Link>\n              <div className=\"follower-profile-header\">\n                <Link to={`/` + props.user.user_unique_id}>\n                  <span className=\"follower-profile-avatar\">\n                    <Image src={props.user.picture} className=\"\" />\n                  </span>\n                </Link>\n                <div className=\"follower-info\">\n                  <div className=\"follower-profile-status\">\n                    <div\n                      className=\"follower-status-text\"\n                      style={{ display: \"none\" }}\n                    >\n                      {t(\"last_seen\")}\n                      <span title=\"User Updated\">{props.user.updated}</span>\n                    </div>\n                    <div className=\"follower-profile-toggle-dropdown\">\n                      {/* <Link to=\"#\" className=\"btn dropdown-toggle btn-link\">\n                        <Image\n                          src=\"assets/images/icons/vertical-dots.svg\"\n                          className=\"svg-clone vertical-dots\"\n                        />\n                      </Link> */}\n\n                      <Dropdown className=\"btn dropdown-toggle btn-link\">\n                        <Dropdown.Toggle\n                          className=\"user-dropdown-dots dropdown-toggle\"\n                          type=\"button\"\n                          id=\"dropdown-basic\"\n                        >\n                          <Image\n                            src={\n                              window.location.origin +\n                              \"/assets/images/icons/vertical-dots-white.svg\"\n                            }\n                            className=\"svg-clone vertical-dots\"\n                          />\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                          <CopyToClipboard\n                            text={props.user.share_link}\n                            onCopy={onCopy}\n                          >\n                            <Media as=\"li\">\n                              <Link to=\"#\"> {t(\"copy_link_to_profile\")} </Link>\n                            </Media>\n                          </CopyToClipboard>\n\n                          {blockUserStatus != \"\" ? (\n                            blockUserStatus == \"unblocked\" ? (\n                              <Media as=\"li\">\n                                <Link\n                                  to=\"#\"\n                                  onClick={(event) =>\n                                    handleBlockUser(event, \"blocked\")\n                                  }\n                                >\n                                  {t(\"block_the_user\")}\n                                </Link>\n                              </Media>\n                            ) : (\n                              <Media as=\"li\">\n                                <Link\n                                  to=\"#\"\n                                  onClick={(event) =>\n                                    handleBlockUser(event, \"unblocked\")\n                                  }\n                                >\n                                  {t(\"unblock_the_user\")}\n                                </Link>\n                              </Media>\n                            )\n                          ) : props.user.is_block_user == 1 ? (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                onClick={(event) =>\n                                  handleBlockUser(event, \"unblocked\")\n                                }\n                              >\n                                {t(\"unblock_the_user\")}\n                              </Link>\n                            </Media>\n                          ) : (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                onClick={(event) =>\n                                  handleBlockUser(event, \"blocked\")\n                                }\n                              >\n                                {t(\"block_the_user\")}\n                              </Link>\n                            </Media>\n                          )}\n\n                          {subscribeStatus != \"\" ? (\n                            subscribeStatus == \"unsubscribed\" ? (\n                              <Media as=\"li\">\n                                <Link to={`/` + props.user.user_unique_id}>\n                                  {t(\"subscribe\")}\n                                </Link>\n                              </Media>\n                            ) : (\n                              <Media as=\"li\">\n                                <Link\n                                  to=\"#\"\n                                  onClick={(event) =>\n                                    handleUnfollowUser(event, \"unsubscribed\")\n                                  }\n                                >\n                                  {t(\"unsubscribe\")}\n                                </Link>\n                              </Media>\n                            )\n                          ) : props.user.show_follow ? (\n                            <Media as=\"li\">\n                              <Link to={`/` + props.user.user_unique_id}>\n                                {t(\"subscribe\")}\n                              </Link>\n                            </Media>\n                          ) : (\n                            <Media as=\"li\">\n                              <Link\n                                to=\"#\"\n                                onClick={(event) =>\n                                  handleUnfollowUser(event, \"unsubscribed\")\n                                }\n                              >\n                                {t(\"unsubscribe\")}\n                              </Link>\n                            </Media>\n                          )}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </div>\n                  </div>\n                  <div className=\"follower-wrapper-name\">\n                    <div className=\"follower-profile-names\">\n                      <div className=\"follower-name-row\">\n                        <Link to={props.user.user_unique_id}>\n                          <div className=\"follower-user-name\">\n                            {props.user.name}{\" \"}\n                            {badgeStatus == 1 ? (\n                              <VerifiedBadgeNoShadow />\n                            ) : null}\n                          </div>\n                        </Link>\n                      </div>\n                      <div className=\"follower-name-row\">\n                        <Link\n                          to={`/` + props.user.user_unique_id}\n                          className=\"g-user-realname__wrapper\"\n                        >\n                          <div className=\"follower-user-id\">\n                            @{props.user.username}\n                          </div>\n                        </Link>\n                      </div>\n                    </div>\n\n                    <div className=\"group-follower-btns\">\n                      <CopyToClipboard\n                        text={props.user.share_link}\n                        onCopy={onCopy}\n                      >\n                        <Button\n                          type=\"button\"\n                          className=\"g-btn m-rounded m-border m-icon m-icon-only m-colored has-tooltip\"\n                        >\n                          <Image\n                            src=\"assets/images/icons/share.svg\"\n                            className=\"svg-clone \"\n                          />\n                        </Button>\n                      </CopyToClipboard>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"add-to-lists-button\">\n                <div className=\"swiper-favorite\">\n                  {favStatus !== \"\" ? (\n                    <>\n                      <>\n                        {favStatus === \"added\" ? (\n                          <Link\n                            type=\"button\"\n                            className=\"swiper-btn-fav\"\n                            onClick={(event) => handleStar(event, \"removed\")}\n                          >\n                            <Image\n                              src=\"assets/images/icons/star.svg\"\n                              className=\"svg-clone my-p-icons\"\n                              width=\"12\"\n                            />\n                            {t(\"remove_from_favorites\")}\n                          </Link>\n                        ) : null}\n                      </>\n                      <>\n                        {favStatus === \"removed\" ? (\n                          <Link\n                            type=\"button\"\n                            className=\"swiper-btn-fav\"\n                            onClick={(event) => handleStar(event, \"added\")}\n                          >\n                            <Image\n                              src=\"assets/images/icons/star.svg\"\n                              className=\"svg-clone my-p-icons\"\n                              width=\"12\"\n                            />\n                            {t(\"add_to_favorites\")}\n                          </Link>\n                        ) : null}\n                      </>\n                    </>\n                  ) : props.user.is_fav_user == 1 ? (\n                    <Link\n                      type=\"button\"\n                      className=\"swiper-btn-fav\"\n                      onClick={(event) => handleStar(event, \"removed\")}\n                    >\n                      <Image\n                        src=\"assets/images/icons/star.svg\"\n                        className=\"svg-clone my-p-icons\"\n                        width=\"12\"\n                      />\n                      {t(\"remove_from_favorites\")}\n                    </Link>\n                  ) : (\n                    <Link\n                      type=\"button\"\n                      className=\"swiper-btn-fav\"\n                      onClick={(event) => handleStar(event, \"added\")}\n                    >\n                      <Image\n                        src=\"assets/images/icons/star.svg\"\n                        className=\"svg-clone my-p-icons\"\n                        width=\"12\"\n                      />\n                      {t(\"add_to_favorites\")}\n                    </Link>\n                  )}\n                </div>\n              </div>\n              <div className=\"lists-button-group post-icons\">\n                <Button\n                  type=\"button\"\n                  className=\"btn gradient-btn gradientcolor flexAlignCenter\"\n                  onClick={() => setSendTip(true)}\n                >\n                  <Image\n                    src=\"assets/images/icons/tip.svg\"\n                    className=\"svg-clone\"\n                  />\n                  <span className=\"b-btn-text\">{t(\"tip\")}</span>\n                </Button>\n              </div>\n              <div className=\"lists-button-group\" style={{ display: \"none\" }}>\n                <Link\n                  type=\"button\"\n                  className=\"btn gradient-btn gradientcolor flexAlignCenter\"\n                >\n                  <Image\n                    src=\"assets/images/icons/subscribe.svg\"\n                    className=\"svg-clone\"\n                  />\n                  <span className=\"b-btn-text\">{t(\"subscribed_for_free\")}</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Col>\n      <SendTipModal\n        sendTip={sendTip}\n        closeSendTipModal={closeSendTipModal}\n        username={props.user.username}\n        userPicture={props.user.picture}\n        name={props.user.usernamee}\n        post_id={null}\n        user_id={props.user.user_id}\n      />\n    </>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(null, mapDispatchToProps)(translate(UserCard));\n"]},"metadata":{},"sourceType":"module"}