{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Row,Col,Image,Container,Media}from\"react-bootstrap\";import\"./Explore.css\";import{Link}from\"react-router-dom\";import{connect}from\"react-redux\";import NoDataFound from\"../../NoDataFound/NoDataFound\";import{fetchExploreStart}from\"../../../store/actions/PostAction\";import ExplorePostCard from\"./ExplorePostCard\";import{translate,t}from\"react-multi-lang\";import Map,{GoogleApiWrapper,Marker}from\"google-maps-react\";import{apiConstants}from\"../../Constant/constants\";import ExploreLoader from\"../../Loader/ExploreLoader\";var Explore=function Explore(props){useEffect(function(){props.dispatch(fetchExploreStart());},[]);var autocomplete;var renderAutoComplete=function renderAutoComplete(){var google=props.google;if(!google){console.log(\"asdfsadfasdfno\");return;}autocomplete=new google.maps.places.Autocomplete(autocomplete,{types:[\"geocode\"]});autocomplete.setFields([\"address_component\",\"geometry\",\"name\"]);autocomplete.addListener(\"place_changed\",function(){var place=autocomplete.getPlace();console.log(\"Place\",place);if(!place.geometry)return;var full_address=\"\";place.address_components.map(function(address){return full_address=full_address==\"\"?address.long_name:full_address+\",\"+address.long_name;});props.dispatch(fetchExploreStart({latitude:place.geometry.location.lat(),longitude:place.geometry.location.lng()}));});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"live-streaming-post-sec\"},/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(\"div\",{className:\"profile-post-area\"},/*#__PURE__*/React.createElement(\"div\",{className:\"bookmarkes-list bookmarks-right-side resp-sapce-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pull-left\"},/*#__PURE__*/React.createElement(Link,{className:\"bookmarkes-list notify-title\",to:\"/home\"},/*#__PURE__*/React.createElement(Image,{src:window.location.origin+\"/assets/images/icons/back.svg\",className:\"svg-clone\"}),t(\"explore\"))))),/*#__PURE__*/React.createElement(Row,{className:\"width-full\"},/*#__PURE__*/React.createElement(Col,{md:9}),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group explore-location-dropdown\"},/*#__PURE__*/React.createElement(\"input\",{id:\"edit-address\",type:\"text\",placeholder:t(\"location\"),onFocus:renderAutoComplete,ref:function ref(_ref){return autocomplete=_ref;},name:\"address\",className:\"form-control edit-reset\"})))),/*#__PURE__*/React.createElement(Col,{sm:\"12\",md:\"12\"},props.explorePosts.loading?/*#__PURE__*/React.createElement(ExploreLoader,null):props.explorePosts.data.posts&&props.explorePosts.data.posts.length>0?/*#__PURE__*/React.createElement(\"div\",{className:\"live-streaming-post-box explore-box\"},props.explorePosts.data.posts.map(function(post){return post.postFiles.file_type==\"image\"?/*#__PURE__*/React.createElement(ExplorePostCard,{post:post,key:post.post_id}):null;})):/*#__PURE__*/React.createElement(NoDataFound,null)))));};var mapStateToPros=function mapStateToPros(state){return{explorePosts:state.post.explorePosts};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}var connector=connect(mapStateToPros,mapDispatchToProps)(translate(Explore));export default GoogleApiWrapper({apiKey:apiConstants.google_api_key})(connector);","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Post/Explore/Explore.jsx"],"names":["React","useState","useEffect","Row","Col","Image","Container","Media","Link","connect","NoDataFound","fetchExploreStart","ExplorePostCard","translate","t","Map","GoogleApiWrapper","Marker","apiConstants","ExploreLoader","Explore","props","dispatch","autocomplete","renderAutoComplete","google","console","log","maps","places","Autocomplete","types","setFields","addListener","place","getPlace","geometry","full_address","address_components","map","address","long_name","latitude","location","lat","longitude","lng","window","origin","ref","explorePosts","loading","data","posts","length","post","postFiles","file_type","post_id","mapStateToPros","state","mapDispatchToProps","connector","apiKey","google_api_key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Image, Container, Media } from \"react-bootstrap\";\nimport \"./Explore.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport { fetchExploreStart } from \"../../../store/actions/PostAction\";\nimport ExplorePostCard from \"./ExplorePostCard\";\nimport { translate, t } from \"react-multi-lang\";\nimport Map, { GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { apiConstants } from \"../../Constant/constants\";\nimport ExploreLoader from \"../../Loader/ExploreLoader\";\n\nconst Explore = (props) => {\n  useEffect(() => {\n    props.dispatch(fetchExploreStart());\n  }, []);\n\n  let autocomplete;\n\n  const renderAutoComplete = () => {\n    const { google } = props;\n    if (!google) {\n      console.log(\"asdfsadfasdfno\");\n      return;\n    }\n\n    autocomplete = new google.maps.places.Autocomplete(autocomplete, {\n      types: [\"geocode\"],\n    });\n\n    autocomplete.setFields([\"address_component\", \"geometry\", \"name\"]);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n      console.log(\"Place\", place);\n      if (!place.geometry) return;\n      let full_address = \"\";\n      place.address_components.map(\n        (address) =>\n          (full_address =\n            full_address == \"\"\n              ? address.long_name\n              : full_address + \",\" + address.long_name)\n      );\n\n      props.dispatch(\n        fetchExploreStart({\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng(),\n        })\n      );\n    });\n  };\n\n  return (\n    <>\n      <div className=\"live-streaming-post-sec\">\n        {/* <Container> */}\n        <Row className=\"no-gutters\">\n          <div className=\"profile-post-area\">\n            <div className=\"bookmarkes-list bookmarks-right-side resp-sapce-center\">\n              <div className=\"pull-left\">\n                <Link className=\"bookmarkes-list notify-title\" to={`/home`}>\n                  <Image\n                    src={\n                      window.location.origin + \"/assets/images/icons/back.svg\"\n                    }\n                    className=\"svg-clone\"\n                  />\n                  {t(\"explore\")}\n                </Link>\n              </div>\n            </div>\n          </div>\n          <Row className=\"width-full\">\n            <Col md={9}></Col>\n            <Col md={3}>\n              <div className=\"form-group explore-location-dropdown\">\n                <input\n                  id=\"edit-address\"\n                  type=\"text\"\n                  placeholder={t(\"location\")}\n                  onFocus={renderAutoComplete}\n                  ref={(ref) => (autocomplete = ref)}\n                  name=\"address\"\n                  className=\"form-control edit-reset\"\n                ></input>\n              </div>\n            </Col>\n          </Row>\n          <Col sm=\"12\" md=\"12\">\n            {props.explorePosts.loading ? (\n              <ExploreLoader />\n            ) : props.explorePosts.data.posts &&\n              props.explorePosts.data.posts.length > 0 ? (\n              <div className=\"live-streaming-post-box explore-box\">\n                {props.explorePosts.data.posts.map((post) =>\n                  post.postFiles.file_type == \"image\" ? (\n                    <ExplorePostCard post={post} key={post.post_id} />\n                  ) : null\n                )}\n              </div>\n            ) : (\n              <NoDataFound></NoDataFound>\n            )}\n          </Col>\n        </Row>\n        {/* </Container> */}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  explorePosts: state.post.explorePosts,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nconst connector = connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(Explore));\n\nexport default GoogleApiWrapper({\n  apiKey: apiConstants.google_api_key,\n})(connector);\n"]},"metadata":{},"sourceType":"module"}