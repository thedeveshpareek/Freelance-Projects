{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import{Link}from\"react-router-dom\";import{connect}from\"react-redux\";import{Dropdown,Image,Media,Form,Button}from\"react-bootstrap\";import{EditorState,convertToRaw,Modifier}from\"draft-js\";import{saveCommentStart}from\"../../store/actions/CommentsAction\";import{translate,t}from\"react-multi-lang\";import{Picker,EmojiData}from\"emoji-mart\";import\"emoji-mart/css/emoji-mart.css\";import PostEditor from\"../Post/postMentions/PostEditor\";var Comments=function Comments(props){var mentionsRef=useRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),editorContentState=_useState2[0],setEditorContentstate=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),editorHtmlContent=_useState4[0],setEditorHtmlContent=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),emojiPickerState=_useState6[0],SetEmojiPicker=_useState6[1];var _useState7=useState(function(){return EditorState.createEmpty();}),_useState8=_slicedToArray(_useState7,2),editorState=_useState8[0],setEditorState=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),commentActiveIndex=_useState10[0],setCommentActiveIndex=_useState10[1];var handleCommentSubmit=function handleCommentSubmit(event){event.preventDefault();props.dispatch(saveCommentStart({comment:editorHtmlContent,post_id:props.post.post_id}));// setCommentInputData({});\nsetEditorState(EditorState.createEmpty());};function triggerPicker(event){event.preventDefault();SetEmojiPicker(!emojiPickerState);}var handleEmojiSelect=function handleEmojiSelect(emoji){SetEmojiPicker(false);setEditorState(insertCharacter(emoji.native,editorState));};var handleCommentActiveIndex=function handleCommentActiveIndex(index){setCommentActiveIndex(index);};var insertCharacter=function insertCharacter(emoji,editorState){var currentContent=editorState.getCurrentContent();var currentSelection=editorState.getSelection();var newContent=Modifier.insertText(currentContent,currentSelection,emoji);var newEditorState=EditorState.push(editorState,newContent,\"insert-characters\");return EditorState.forceSelection(newEditorState,newContent.getSelectionAfter());};var focusEditor=function focusEditor(){console.log('one');setCommentActiveIndex(props.currentIndex);};return/*#__PURE__*/React.createElement(\"div\",{className:\"comment-box\",onFocus:function onFocus(){return focusEditor();}},/*#__PURE__*/React.createElement(\"div\",{className:\"comment-box-form\"},/*#__PURE__*/React.createElement(Form,{className:\"form-inline\",action:\"\",onSubmit:handleCommentSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"user-picture\"},/*#__PURE__*/React.createElement(Link,{className:\"title-container-1\",to:\"#\"},/*#__PURE__*/React.createElement(Image,{src:localStorage.getItem(\"user_picture\"),className:\"user-image img-responsive\"}))),commentActiveIndex==props.currentIndex?/*#__PURE__*/React.createElement(\"div\",{className:\"text-box\"},/*#__PURE__*/React.createElement(PostEditor,{className:\"PostEditor__input\",placeholder:t(\"new_comment_placeholder\"),ref:mentionsRef,getEditorRawContent:setEditorContentstate,getEditorHtmlContent:setEditorHtmlContent,dispatch:props.dispatch,editorState:editorState,setEditorState:setEditorState})):/*#__PURE__*/React.createElement(\"div\",{className:\"empty-comment\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Add comments here ...\"})),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled reply-action-icons position-relative\"},/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:handleCommentSubmit},/*#__PURE__*/React.createElement(Image,{className:\"comment-send-icon\",src:window.location.origin+\"/assets/images/icons/comment-send-icon.png\"}))),/*#__PURE__*/React.createElement(Media,{as:\"li\",className:\"m-0\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"g-btn m-rounded emojiButtoon p-0 pr-2\",onClick:triggerPicker},/*#__PURE__*/React.createElement(\"i\",{className:\"far fa-smile\"}))),emojiPickerState&&/*#__PURE__*/React.createElement(\"div\",{className:\"emojiWrapper\"},/*#__PURE__*/React.createElement(Picker,{title:\"\",emoji:\"point_up\",onSelect:function onSelect(emoji){return handleEmojiSelect(emoji);}}))))));};var mapStateToPros=function mapStateToPros(state){return{};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(Comments));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/Comments.jsx"],"names":["React","useRef","useState","Link","connect","Dropdown","Image","Media","Form","Button","EditorState","convertToRaw","Modifier","saveCommentStart","translate","t","Picker","EmojiData","PostEditor","Comments","props","mentionsRef","editorContentState","setEditorContentstate","editorHtmlContent","setEditorHtmlContent","emojiPickerState","SetEmojiPicker","createEmpty","editorState","setEditorState","commentActiveIndex","setCommentActiveIndex","handleCommentSubmit","event","preventDefault","dispatch","comment","post_id","post","triggerPicker","handleEmojiSelect","emoji","insertCharacter","native","handleCommentActiveIndex","index","currentContent","getCurrentContent","currentSelection","getSelection","newContent","insertText","newEditorState","push","forceSelection","getSelectionAfter","focusEditor","console","log","currentIndex","localStorage","getItem","window","location","origin","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n    Dropdown,Image,Media,Form,Button,\n} from \"react-bootstrap\";\nimport { EditorState, convertToRaw, Modifier } from \"draft-js\";\nimport {\n    saveCommentStart,\n} from \"../../store/actions/CommentsAction\";\nimport { translate, t } from \"react-multi-lang\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport PostEditor from \"../Post/postMentions/PostEditor\";\n\nconst Comments = (props) => {\n\n    const mentionsRef = useRef();\n\n    const [editorContentState, setEditorContentstate] = useState(\"\");\n\n    const [editorHtmlContent, setEditorHtmlContent] = useState(\"\");\n\n    const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n    const [editorState, setEditorState] = useState(() =>\n        EditorState.createEmpty()\n    );\n\n    const [commentActiveIndex, setCommentActiveIndex] = useState(null);\n\n    const handleCommentSubmit = (event) => {\n        event.preventDefault();\n        props.dispatch(\n          saveCommentStart({\n            comment: editorHtmlContent,\n            post_id: props.post.post_id,\n          })\n        );\n        // setCommentInputData({});\n        setEditorState(EditorState.createEmpty());\n    };\n\n      \n    function triggerPicker(event) {\n        event.preventDefault();\n        SetEmojiPicker(!emojiPickerState);\n    }\n    \n    const handleEmojiSelect = (emoji) => {\n        SetEmojiPicker(false);\n        setEditorState(insertCharacter(emoji.native, editorState));\n    };\n    \n    const handleCommentActiveIndex = (index) => {\n        setCommentActiveIndex(index);\n    };\n\n    const insertCharacter = (emoji, editorState) => {\n\n        const currentContent = editorState.getCurrentContent();\n        const currentSelection = editorState.getSelection();\n    \n        const newContent = Modifier.insertText(\n            currentContent,\n            currentSelection,\n            emoji\n        );\n    \n        const newEditorState = EditorState.push(\n            editorState,\n            newContent,\n            \"insert-characters\"\n        );\n    \n        return EditorState.forceSelection(\n            newEditorState,\n            newContent.getSelectionAfter()\n        );\n    };\n\n    const focusEditor = () => {\n        console.log('one');\n        setCommentActiveIndex(props.currentIndex);\n    };\n\n    return (\n        <div className=\"comment-box\" onFocus={() => focusEditor()}>\n            <div className=\"comment-box-form\">\n                <Form\n                    className=\"form-inline\"\n                    action=\"\"\n                    onSubmit={handleCommentSubmit}\n                >\n                    <div className=\"user-picture\">\n                        <Link className=\"title-container-1\" to=\"#\">\n                            <Image\n                            src={localStorage.getItem(\"user_picture\")}\n                            className=\"user-image img-responsive\"\n                            />\n                        </Link>\n                    </div>\n                    {commentActiveIndex == props.currentIndex ? \n                    <div className=\"text-box\">\n                        <PostEditor\n                            className=\"PostEditor__input\"\n                            placeholder={t(\"new_comment_placeholder\")}\n                            ref={mentionsRef}\n                            getEditorRawContent={setEditorContentstate}\n                            getEditorHtmlContent={setEditorHtmlContent}\n                            dispatch={props.dispatch}\n                            editorState={editorState}\n                            setEditorState={setEditorState}\n                        />\n                    </div>\n                    : \n                        <div className=\"empty-comment\">\n                            <input type='text' placeholder=\"Add comments here ...\" />\n                        </div>\n                    }\n                    <ul className=\"list-unstyled reply-action-icons position-relative\">\n                        <Media as=\"li\">\n                            <Link to=\"#\" onClick={handleCommentSubmit}>\n                                {/* <i className=\"fas fa-paper-plane\"></i> */}\n                                <Image\n                                    className=\"comment-send-icon\"\n                                    src={\n                                    window.location.origin +\n                                    \"/assets/images/icons/comment-send-icon.png\"\n                                    }\n                                />\n                            </Link>\n                        </Media>\n                        <Media as=\"li\" className=\"m-0\">\n                            <button\n                            type=\"button\"\n                            className=\"g-btn m-rounded emojiButtoon p-0 pr-2\"\n                            onClick={triggerPicker}\n                            >\n                                <i className=\"far fa-smile\"></i>\n                            </button>\n                        </Media>\n                        {emojiPickerState && (\n                            <div className=\"emojiWrapper\">\n                                <Picker\n                                    title=\"\"\n                                    emoji=\"point_up\"\n                                    onSelect={(emoji) => handleEmojiSelect(emoji)}\n                                />\n                            </div>\n                        )}\n                    </ul>\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToPros = (state) => ({\n  \n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(Comments));\n"]},"metadata":{},"sourceType":"module"}