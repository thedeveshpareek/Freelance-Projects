{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Post/Explore/ExplorePostCard.jsx\";\nimport React, { useState } from \"react\";\nimport { Dropdown, Image, Media, Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\nimport { savePostLikeStart } from \"../../../store/actions/PostLikesAction\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { getSuccessNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { saveReportPostStart } from \"../../../store/actions/PostAction\";\nimport ReportModeModal from \"../../helper/ReportModeModal\";\n\nconst ExplorePostCard = props => {\n  var _post$postFiles$post_;\n\n  const {\n    post\n  } = props;\n  let totalLikes = props.post.total_likes ? props.post.total_likes : 0;\n  const [likeStatus, setLikeStatus] = useState(\"\");\n  const [likeCount, setLikeCount] = useState(totalLikes);\n  const [postDisplayStatus, setPostDisplayStatus] = useState(true);\n  const [reportMode, setReportMode] = useState(false);\n\n  const closeReportModeModal = () => {\n    setReportMode(false);\n  };\n\n  const handleLike = (event, status) => {\n    event.preventDefault();\n    setLikeStatus(status);\n    props.dispatch(savePostLikeStart({\n      post_id: post.post_id\n    }));\n\n    if (status == \"added\") {\n      let currentLikeCount = likeCount + 1;\n      setLikeCount(currentLikeCount);\n    } else {\n      let currentLikeCount = likeCount - 1;\n      setLikeCount(currentLikeCount);\n    }\n  };\n\n  const onCopy = event => {\n    const notificationMessage = getSuccessNotificationMessage(t(\"profile_link_copied\"));\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  const handleReportPost = (event, post) => {\n    event.preventDefault();\n    setPostDisplayStatus(false);\n    props.dispatch(saveReportPostStart({\n      post_id: post.post_id\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${post.user_unique_id}`,\n    className: \"live-streaming-post-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: (_post$postFiles$post_ = post.postFiles.post_file) !== null && _post$postFiles$post_ !== void 0 ? _post$postFiles$post_ : window.location.origin + \"/assets/images/live-stream-post/live-stream-post-1.jpg\",\n    alt: \"\",\n    className: \"live-streaming-post-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: post.user_picture,\n    alt: \"\",\n    className: \"live-streaming-post-user-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-user-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${post.user_unique_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, post.user_displayname)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, post.created))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-action-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled live-streaming-post-action-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, likeCount, \" likes\"), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, likeStatus !== \"\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, likeStatus === \"added\" ? /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleLike(event, \"removed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/heart-active.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }\n  })) : null), /*#__PURE__*/React.createElement(React.Fragment, null, likeStatus === \"removed\" ? /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleLike(event, \"added\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/heart.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 27\n    }\n  })) : null)) : post.is_user_liked == 1 ? /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleLike(event, \"removed\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/heart-active.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleLike(event, \"added\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/heart.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"btn btn-default dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/vertical-dots.svg\",\n    className: \"svg-clone vertical-dots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dropdown-menu dropdown-menu-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: post.share_link,\n    onCopy: onCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"dropdown-a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \" \", t(\"copy_link_to_post\"), \" \"))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${post.user_unique_id}`,\n    className: \"dropdown-a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }, \" \", t(\"profile\"), \" \")), localStorage.getItem(\"userId\") != post.user_id ? /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => setReportMode(true) //   onClick={(event) => handleReportPost(event, post)}\n    ,\n    className: \"dropdown-a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, t(\"report\"))) : null))))))), /*#__PURE__*/React.createElement(ReportModeModal, {\n    reportMode: reportMode,\n    closeReportModeModal: closeReportModeModal,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapDispatchToProps)(translate(ExplorePostCard));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Post/Explore/ExplorePostCard.jsx"],"names":["React","useState","Dropdown","Image","Media","Form","Button","InputGroup","FormControl","connect","Link","translate","t","savePostLikeStart","CopyToClipboard","createNotification","getSuccessNotificationMessage","saveReportPostStart","ReportModeModal","ExplorePostCard","props","post","totalLikes","total_likes","likeStatus","setLikeStatus","likeCount","setLikeCount","postDisplayStatus","setPostDisplayStatus","reportMode","setReportMode","closeReportModeModal","handleLike","event","status","preventDefault","dispatch","post_id","currentLikeCount","onCopy","notificationMessage","handleReportPost","user_unique_id","postFiles","post_file","window","location","origin","user_picture","user_displayname","created","is_user_liked","share_link","localStorage","getItem","user_id","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Dropdown,\n  Image,\n  Media,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\nimport { savePostLikeStart } from \"../../../store/actions/PostLikesAction\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport { getSuccessNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { saveReportPostStart } from \"../../../store/actions/PostAction\";\nimport ReportModeModal from \"../../helper/ReportModeModal\";\n\nconst ExplorePostCard = (props) => {\n  const { post } = props;\n  let totalLikes = props.post.total_likes ? props.post.total_likes : 0;\n\n  const [likeStatus, setLikeStatus] = useState(\"\");\n  const [likeCount, setLikeCount] = useState(totalLikes);\n  const [postDisplayStatus, setPostDisplayStatus] = useState(true);\n  const [reportMode, setReportMode] = useState(false);\n\n  const closeReportModeModal = () => {\n    setReportMode(false);\n  };\n\n  const handleLike = (event, status) => {\n    event.preventDefault();\n    setLikeStatus(status);\n    props.dispatch(savePostLikeStart({ post_id: post.post_id }));\n    if (status == \"added\") {\n      let currentLikeCount = likeCount + 1;\n      setLikeCount(currentLikeCount);\n    } else {\n      let currentLikeCount = likeCount - 1;\n      setLikeCount(currentLikeCount);\n    }\n  };\n\n  const onCopy = (event) => {\n    const notificationMessage = getSuccessNotificationMessage(\n      t(\"profile_link_copied\")\n    );\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  const handleReportPost = (event, post) => {\n    event.preventDefault();\n    setPostDisplayStatus(false);\n    props.dispatch(saveReportPostStart({ post_id: post.post_id }));\n  };\n\n  return (\n    <>\n      <div className=\"live-streaming-post-card\">\n        <Link\n          to={`/${post.user_unique_id}`}\n          className=\"live-streaming-post-img-sec\"\n        >\n          <Image\n            src={\n              post.postFiles.post_file ??\n              window.location.origin +\n                \"/assets/images/live-stream-post/live-stream-post-1.jpg\"\n            }\n            alt=\"\"\n            className=\"live-streaming-post-img\"\n          />\n        </Link>\n        <div className=\"live-streaming-post-info\">\n          <div className=\"live-streaming-post-user-info\">\n            <div className=\"live-streaming-post-user-img-sec\">\n              <Image\n                src={post.user_picture}\n                alt=\"\"\n                className=\"live-streaming-post-user-img\"\n              />\n            </div>\n            <div className=\"live-streaming-post-user-details\">\n              <Link to={`/${post.user_unique_id}`}>\n                <h4>{post.user_displayname}</h4>\n              </Link>\n              <p>{post.created}</p>\n            </div>\n          </div>\n          <div className=\"live-streaming-post-action-sec\">\n            <ul className=\"list-unstyled live-streaming-post-action-icons\">\n              <Media as=\"li\">{likeCount} likes</Media>\n              <Media as=\"li\">\n                {likeStatus !== \"\" ? (\n                  <>\n                    <>\n                      {likeStatus === \"added\" ? (\n                        <Link\n                          to=\"#\"\n                          onClick={(event) => handleLike(event, \"removed\")}\n                        >\n                          <Image\n                            src={\n                              window.location.origin +\n                              \"/assets/images/icons/heart-active.svg\"\n                            }\n                            className=\"svg-clone\"\n                          />\n                        </Link>\n                      ) : null}\n                    </>\n                    <>\n                      {likeStatus === \"removed\" ? (\n                        <Link\n                          to=\"#\"\n                          onClick={(event) => handleLike(event, \"added\")}\n                        >\n                          <Image\n                            src={\n                              window.location.origin +\n                              \"/assets/images/icons/heart.svg\"\n                            }\n                            className=\"svg-clone\"\n                          />\n                        </Link>\n                      ) : null}\n                    </>\n                  </>\n                ) : post.is_user_liked == 1 ? (\n                  <Link\n                    to=\"#\"\n                    onClick={(event) => handleLike(event, \"removed\")}\n                  >\n                    <Image\n                      src={\n                        window.location.origin +\n                        \"/assets/images/icons/heart-active.svg\"\n                      }\n                      className=\"svg-clone\"\n                    />\n                  </Link>\n                ) : (\n                  <Link to=\"#\" onClick={(event) => handleLike(event, \"added\")}>\n                    <Image\n                      src={\n                        window.location.origin +\n                        \"/assets/images/icons/heart.svg\"\n                      }\n                      className=\"svg-clone\"\n                    />\n                  </Link>\n                )}\n              </Media>\n              <Media as=\"li\">\n                <Dropdown>\n                  <Dropdown.Toggle\n                    className=\"btn btn-default dropdown-toggle\"\n                    type=\"button\"\n                    id=\"dropdown-basic\"\n                  >\n                    <Image\n                      src={\n                        window.location.origin +\n                        \"/assets/images/icons/vertical-dots.svg\"\n                      }\n                      className=\"svg-clone vertical-dots\"\n                    />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                    <CopyToClipboard text={post.share_link} onCopy={onCopy}>\n                      <Media as=\"li\">\n                        <Link to=\"#\" className=\"dropdown-a\">\n                          {\" \"}\n                          {t(\"copy_link_to_post\")}{\" \"}\n                        </Link>\n                      </Media>\n                    </CopyToClipboard>\n\n                    <Media as=\"li\" className=\"divider\"></Media>\n\n                    <Media as=\"li\">\n                      <Link\n                        to={`/${post.user_unique_id}`}\n                        className=\"dropdown-a\"\n                      >\n                        {\" \"}\n                        {t(\"profile\")}{\" \"}\n                      </Link>\n                    </Media>\n\n                    {localStorage.getItem(\"userId\") != post.user_id ? (\n                      <Media as=\"li\">\n                        <Link\n                          to=\"#\"\n                          onClick={() => setReportMode(true)}\n                          //   onClick={(event) => handleReportPost(event, post)}\n                          className=\"dropdown-a\"\n                        >\n                          {t(\"report\")}\n                        </Link>\n                      </Media>\n                    ) : null}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Media>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <ReportModeModal\n        reportMode={reportMode}\n        closeReportModeModal={closeReportModeModal}\n        post={post}\n      ></ReportModeModal>\n    </>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapDispatchToProps)(translate(ExplorePostCard));\n"]},"metadata":{},"sourceType":"module"}