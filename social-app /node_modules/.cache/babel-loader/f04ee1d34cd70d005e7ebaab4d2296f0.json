{"ast":null,"code":"import _toConsumableArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from\"react\";var VerificationCodeInput=function VerificationCodeInput(_ref){var length=_ref.length,label=_ref.label,loading=_ref.loading,onComplete=_ref.onComplete,labelClassName=_ref.labelClassName;var _useState=useState(_toConsumableArray(Array(length)).map(function(){return\"\";})),_useState2=_slicedToArray(_useState,2),code=_useState2[0],setCode=_useState2[1];var inputs=useRef([]);var processInput=function processInput(e,slot){if(e.target.value.length>=length){var num=e.target.value;var myArr=num.split(\"\");var newCode=[];myArr.map(function(value,index){if(index<length){newCode[index]=value;}});setCode(newCode);inputs.current[length-1].focus();if(newCode.every(function(num){return num!==\"\";})){onComplete(newCode.join(\"\"));}}else{var _num=e.target.value;if(/[^0-9]/.test(_num))return;var _newCode=_toConsumableArray(code);_newCode[slot]=_num;setCode(_newCode);if(slot!==length-1){inputs.current[slot+1].focus();}if(_newCode.every(function(num){return num!==\"\";})){onComplete(_newCode.join(\"\"));}}};var _onKeyUp=function onKeyUp(e,slot){if(e.keyCode===8&&!code[slot]&&slot!==0){var newCode=_toConsumableArray(code);newCode[slot-1]=\"\";setCode(newCode);inputs.current[slot-1].focus();}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"code-input\"},/*#__PURE__*/React.createElement(\"lable\",{className:labelClassName},label),/*#__PURE__*/React.createElement(\"div\",{className:\"code-inputs\"},code.map(function(num,idx){return/*#__PURE__*/React.createElement(\"input\",{key:idx,maxlength:1,type:\"text\",inputMode:\"numeric\"// maxLength={1}\n,value:num,autoFocus:!code[0].length&&idx===0// readOnly={loading}\n,onChange:function onChange(e){return processInput(e,idx);},onKeyUp:function onKeyUp(e){return _onKeyUp(e,idx);},ref:function ref(_ref2){return inputs.current.push(_ref2);}});}))));};export default VerificationCodeInput;","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Verification/VerificationCodeInput.jsx"],"names":["React","useState","useRef","VerificationCodeInput","length","label","loading","onComplete","labelClassName","Array","map","code","setCode","inputs","processInput","e","slot","target","value","num","myArr","split","newCode","index","current","focus","every","join","test","onKeyUp","keyCode","idx","ref","push"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst VerificationCodeInput = ({\n  length,\n  label,\n  loading,\n  onComplete,\n  labelClassName,\n}) => {\n  const [code, setCode] = useState([...Array(length)].map(() => \"\"));\n  const inputs = useRef([]);\n\n  const processInput = (e, slot) => {\n    if (e.target.value.length >= length) {\n      const num = e.target.value;\n      const myArr = num.split(\"\");\n      const newCode = [];\n      myArr.map((value, index) => {\n        if (index < length) {\n          newCode[index] = value;\n        }\n      });\n      setCode(newCode);\n\n      inputs.current[length - 1].focus();\n\n      if (newCode.every((num) => num !== \"\")) {\n        onComplete(newCode.join(\"\"));\n      }\n    } else {\n      const num = e.target.value;\n      if (/[^0-9]/.test(num)) return;\n      const newCode = [...code];\n      newCode[slot] = num;\n      setCode(newCode);\n      if (slot !== length - 1) {\n        inputs.current[slot + 1].focus();\n      }\n      if (newCode.every((num) => num !== \"\")) {\n        onComplete(newCode.join(\"\"));\n      }\n    }\n  };\n\n  const onKeyUp = (e, slot) => {\n    if (e.keyCode === 8 && !code[slot] && slot !== 0) {\n      const newCode = [...code];\n      newCode[slot - 1] = \"\";\n      setCode(newCode);\n      inputs.current[slot - 1].focus();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"code-input\">\n        <lable className={labelClassName}>{label}</lable>\n        <div className=\"code-inputs\">\n          {code.map((num, idx) => {\n            return (\n              <input\n                key={idx}\n                maxlength={1}\n                type=\"text\"\n                inputMode=\"numeric\"\n                // maxLength={1}\n                value={num}\n                autoFocus={!code[0].length && idx === 0}\n                // readOnly={loading}\n                onChange={(e) => processInput(e, idx)}\n                onKeyUp={e => onKeyUp(e, idx)}\n                ref={(ref) => inputs.current.push(ref)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VerificationCodeInput;\n"]},"metadata":{},"sourceType":"module"}