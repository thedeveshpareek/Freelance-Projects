{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchAllTransactionAPI),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchSentPaymentTransAPI),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(fetchReceivedPayTransAPI),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(fetchDepositTransactionAPI),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import api from\"../../Environment\";import{FETCH_ALL_TRANSACTION_START,FETCH_SENT_PAYMENT_TRANSACTION_START,FETCH_RECEIVED_PAYMENT_TRANSACTION_START,FETCH_DEPOSIT_TRANSACTION_START}from\"../actions/ActionConstant\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{fetchAllTransactionSuccess,fetchAllTransactionFailure,fetchSentPaymentTransactionSuccess,fetchSentPaymentTransactionFailure,fetchReceivedPaymentTransactionSuccess,fetchReceivedPaymentTransactionFailure,fetchDepositTransactionSuccess,fetchDepositTransactionFailure}from\"../actions/TransactionAction\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function fetchAllTransactionAPI(){var response,notificationMessage,_notificationMessage;return _regeneratorRuntime.wrap(function fetchAllTransactionAPI$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.postMethod(\"wallets_history\");case 3:response=_context.sent;if(!response.data.success){_context.next=9;break;}_context.next=7;return put(fetchAllTransactionSuccess(response.data.data));case 7:_context.next=16;break;case 9:_context.next=11;return put(checkLogoutStatus(response.data));case 11:_context.next=13;return put(fetchAllTransactionFailure(response.data.error));case 13:notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=16;return put(createNotification(notificationMessage));case 16:_context.next=25;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);_context.next=22;return put(fetchAllTransactionFailure(_context.t0));case 22:_notificationMessage=getErrorNotificationMessage(_context.t0.message);_context.next=25;return put(createNotification(_notificationMessage));case 25:case\"end\":return _context.stop();}}},_marked,null,[[0,18]]);}function fetchSentPaymentTransAPI(){var response,notificationMessage,_notificationMessage2;return _regeneratorRuntime.wrap(function fetchSentPaymentTransAPI$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.postMethod(\"wallets_history_for_sent\");case 3:response=_context2.sent;if(!response.data.success){_context2.next=9;break;}_context2.next=7;return put(fetchSentPaymentTransactionSuccess(response.data.data));case 7:_context2.next=16;break;case 9:_context2.next=11;return put(checkLogoutStatus(response.data));case 11:_context2.next=13;return put(fetchSentPaymentTransactionFailure(response.data.error));case 13:notificationMessage=getErrorNotificationMessage(response.data.error);_context2.next=16;return put(createNotification(notificationMessage));case 16:_context2.next=25;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);_context2.next=22;return put(fetchSentPaymentTransactionFailure(_context2.t0));case 22:_notificationMessage2=getErrorNotificationMessage(_context2.t0.message);_context2.next=25;return put(createNotification(_notificationMessage2));case 25:case\"end\":return _context2.stop();}}},_marked2,null,[[0,18]]);}function fetchReceivedPayTransAPI(){var response,notificationMessage,_notificationMessage3;return _regeneratorRuntime.wrap(function fetchReceivedPayTransAPI$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.postMethod(\"wallets_history_for_received\");case 3:response=_context3.sent;if(!response.data.success){_context3.next=9;break;}_context3.next=7;return put(fetchReceivedPaymentTransactionSuccess(response.data.data));case 7:_context3.next=16;break;case 9:_context3.next=11;return put(checkLogoutStatus(response.data));case 11:_context3.next=13;return put(fetchReceivedPaymentTransactionFailure(response.data.error));case 13:notificationMessage=getErrorNotificationMessage(response.data.error);_context3.next=16;return put(createNotification(notificationMessage));case 16:_context3.next=25;break;case 18:_context3.prev=18;_context3.t0=_context3[\"catch\"](0);_context3.next=22;return put(fetchReceivedPaymentTransactionFailure(_context3.t0));case 22:_notificationMessage3=getErrorNotificationMessage(_context3.t0.message);_context3.next=25;return put(createNotification(_notificationMessage3));case 25:case\"end\":return _context3.stop();}}},_marked3,null,[[0,18]]);}function fetchDepositTransactionAPI(){var response,notificationMessage,_notificationMessage4;return _regeneratorRuntime.wrap(function fetchDepositTransactionAPI$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.postMethod(\"wallets_history_for_add\");case 3:response=_context4.sent;if(!response.data.success){_context4.next=9;break;}_context4.next=7;return put(fetchDepositTransactionSuccess(response.data.data));case 7:_context4.next=16;break;case 9:_context4.next=11;return put(checkLogoutStatus(response.data));case 11:_context4.next=13;return put(fetchDepositTransactionFailure(response.data.error));case 13:notificationMessage=getErrorNotificationMessage(response.data.error);_context4.next=16;return put(createNotification(notificationMessage));case 16:_context4.next=25;break;case 18:_context4.prev=18;_context4.t0=_context4[\"catch\"](0);_context4.next=22;return put(fetchDepositTransactionFailure(_context4.t0));case 22:_notificationMessage4=getErrorNotificationMessage(_context4.t0.message);_context4.next=25;return put(createNotification(_notificationMessage4));case 25:case\"end\":return _context4.stop();}}},_marked4,null,[[0,18]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.t0=all;_context5.next=3;return takeLatest(FETCH_ALL_TRANSACTION_START,fetchAllTransactionAPI);case 3:_context5.t1=_context5.sent;_context5.next=6;return takeLatest(FETCH_SENT_PAYMENT_TRANSACTION_START,fetchSentPaymentTransAPI);case 6:_context5.t2=_context5.sent;_context5.next=9;return takeLatest(FETCH_RECEIVED_PAYMENT_TRANSACTION_START,fetchReceivedPayTransAPI);case 9:_context5.t3=_context5.sent;_context5.next=12;return takeLatest(FETCH_DEPOSIT_TRANSACTION_START,fetchDepositTransactionAPI);case 12:_context5.t4=_context5.sent;_context5.t5=[_context5.t1,_context5.t2,_context5.t3,_context5.t4];_context5.next=16;return(0,_context5.t0)(_context5.t5);case 16:case\"end\":return _context5.stop();}}},_marked5);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/TransactionSaga.jsx"],"names":["fetchAllTransactionAPI","fetchSentPaymentTransAPI","fetchReceivedPayTransAPI","fetchDepositTransactionAPI","pageSaga","call","select","put","takeLatest","all","api","FETCH_ALL_TRANSACTION_START","FETCH_SENT_PAYMENT_TRANSACTION_START","FETCH_RECEIVED_PAYMENT_TRANSACTION_START","FETCH_DEPOSIT_TRANSACTION_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchAllTransactionSuccess","fetchAllTransactionFailure","fetchSentPaymentTransactionSuccess","fetchSentPaymentTransactionFailure","fetchReceivedPaymentTransactionSuccess","fetchReceivedPaymentTransactionFailure","fetchDepositTransactionSuccess","fetchDepositTransactionFailure","checkLogoutStatus","postMethod","response","data","success","error","notificationMessage","message"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\n\nimport api from \"../../Environment\";\nimport {\n  FETCH_ALL_TRANSACTION_START,\n  FETCH_SENT_PAYMENT_TRANSACTION_START,\n  FETCH_RECEIVED_PAYMENT_TRANSACTION_START,\n  FETCH_DEPOSIT_TRANSACTION_START,\n} from \"../actions/ActionConstant\";\n\nimport { createNotification } from \"react-redux-notify\";\n\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchAllTransactionSuccess,\n  fetchAllTransactionFailure,\n  fetchSentPaymentTransactionSuccess,\n  fetchSentPaymentTransactionFailure,\n  fetchReceivedPaymentTransactionSuccess,\n  fetchReceivedPaymentTransactionFailure,\n  fetchDepositTransactionSuccess,\n  fetchDepositTransactionFailure,\n} from \"../actions/TransactionAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* fetchAllTransactionAPI() {\n  try {\n    const response = yield api.postMethod(\"wallets_history\");\n    if (response.data.success) {\n      yield put(fetchAllTransactionSuccess(response.data.data));\n      // Do nothing\n    } else {\n      yield put(checkLogoutStatus(response.data));\n      yield put(fetchAllTransactionFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchAllTransactionFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSentPaymentTransAPI() {\n  try {\n    const response = yield api.postMethod(\"wallets_history_for_sent\");\n    if (response.data.success) {\n      yield put(fetchSentPaymentTransactionSuccess(response.data.data));\n      // Do nothing\n    } else {\n      yield put(checkLogoutStatus(response.data));\n      yield put(fetchSentPaymentTransactionFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSentPaymentTransactionFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchReceivedPayTransAPI() {\n  try {\n    const response = yield api.postMethod(\"wallets_history_for_received\");\n    if (response.data.success) {\n      yield put(fetchReceivedPaymentTransactionSuccess(response.data.data));\n      // Do nothing\n    } else {\n      yield put(checkLogoutStatus(response.data));\n      yield put(fetchReceivedPaymentTransactionFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchReceivedPaymentTransactionFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchDepositTransactionAPI() {\n  try {\n    const response = yield api.postMethod(\"wallets_history_for_add\");\n    if (response.data.success) {\n      yield put(fetchDepositTransactionSuccess(response.data.data));\n      // Do nothing\n    } else {\n      yield put(checkLogoutStatus(response.data));\n      yield put(fetchDepositTransactionFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchDepositTransactionFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([\n    yield takeLatest(FETCH_ALL_TRANSACTION_START, fetchAllTransactionAPI),\n    yield takeLatest(\n      FETCH_SENT_PAYMENT_TRANSACTION_START,\n      fetchSentPaymentTransAPI\n    ),\n    yield takeLatest(\n      FETCH_RECEIVED_PAYMENT_TRANSACTION_START,\n      fetchReceivedPayTransAPI\n    ),\n    yield takeLatest(\n      FETCH_DEPOSIT_TRANSACTION_START,\n      fetchDepositTransactionAPI\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}