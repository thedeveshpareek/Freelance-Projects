{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/Profile/ChangePasswordCard.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { changePasswordStart } from \"../../../store/actions/UserAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst ChangePasswordCard = props => {\n  const [inputData, setInputData] = useState({});\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.dispatch(changePasswordStart(inputData));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"tabpanel\",\n    className: props.activeSec === \"change-password-card\" ? \"tab-pane fade in active\" : \"tab-pane fade\",\n    id: \"Section3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"change-password-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, t(\"change_password\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"new-password\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"old_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, t(\"old_password\")), /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"form-control\",\n    id: \"old_password\",\n    type: \"password\",\n    placeholder: t(\"old_password_placeholder\"),\n    name: \"old_password\",\n    value: inputData.old_password,\n    onChange: event => setInputData({ ...inputData,\n      old_password: event.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, t(\"new_password\")), /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"form-control\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: t(\"new_password_placeholder\"),\n    name: \"password\",\n    value: inputData.password,\n    onChange: event => setInputData({ ...inputData,\n      password: event.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    for: \"password_confirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, t(\"confirm_password\")), /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"form-control\",\n    id: \"password_confirmation\",\n    type: \"password\",\n    placeholder: t(\"confirm_password\"),\n    name: \"password_confirmation\",\n    value: inputData.password_confirmation,\n    onChange: event => setInputData({ ...inputData,\n      password_confirmation: event.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    xs: 12,\n    md: 6,\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn gradient-btn gradientcolor\",\n    type: \"submit\",\n    disabled: props.changePassword.buttonDisable,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, props.changePassword.loadingButtonContent != null ? props.changePassword.loadingButtonContent : t(\"change_password\")))))))));\n};\n\nconst mapStateToPros = state => ({\n  changePassword: state.changePassword\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(ChangePasswordCard));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/Profile/ChangePasswordCard.jsx"],"names":["React","useState","connect","Form","Button","Row","Col","changePasswordStart","translate","t","ChangePasswordCard","props","inputData","setInputData","handleSubmit","event","preventDefault","dispatch","activeSec","old_password","currentTarget","value","password","password_confirmation","changePassword","buttonDisable","loadingButtonContent","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { changePasswordStart } from \"../../../store/actions/UserAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst ChangePasswordCard = (props) => {\n  const [inputData, setInputData] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(changePasswordStart(inputData));\n  };\n\n  return (\n    <>\n      <div\n        role=\"tabpanel\"\n        className={\n          props.activeSec === \"change-password-card\"\n            ? \"tab-pane fade in active\"\n            : \"tab-pane fade\"\n        }\n        id=\"Section3\"\n      >\n        <div className=\"change-password-sec\">\n          <div className=\"card-header bg-transparent\">\n            <h4>{t(\"change_password\")}</h4>\n          </div>\n          <div className=\"card-body\">\n            <Form autoComplete=\"new-password\" onSubmit={handleSubmit}>\n              <Form.Group>\n                <Form.Label htmlFor=\"old_password\">{t(\"old_password\")}</Form.Label>\n                <Form.Control\n                  className=\"form-control\"\n                  id=\"old_password\"\n                  type=\"password\"\n                  placeholder={t(\"old_password_placeholder\")}\n                  name=\"old_password\"\n                  value={inputData.old_password}\n                  onChange={(event) =>\n                    setInputData({\n                      ...inputData,\n                      old_password: event.currentTarget.value,\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label for=\"password\">{t(\"new_password\")}</Form.Label>\n                <Form.Control\n                  className=\"form-control\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder={t(\"new_password_placeholder\")}\n                  name=\"password\"\n                  value={inputData.password}\n                  onChange={(event) =>\n                    setInputData({\n                      ...inputData,\n                      password: event.currentTarget.value,\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label for=\"password_confirmation\">\n                  {t(\"confirm_password\")}\n                </Form.Label>\n                <Form.Control\n                  className=\"form-control\"\n                  id=\"password_confirmation\"\n                  type=\"password\"\n                  placeholder={t(\"confirm_password\")}\n                  name=\"password_confirmation\"\n                  value={inputData.password_confirmation}\n                  onChange={(event) =>\n                    setInputData({\n                      ...inputData,\n                      password_confirmation: event.currentTarget.value,\n                    })\n                  }\n                />\n              </Form.Group>\n              <Row className=\"mt-5\">\n                <Col sm={12} xs={12} md={6} className=\"mx-auto\">\n                  <Button\n                    className=\"btn gradient-btn gradientcolor\"\n                    type=\"submit\"\n                    disabled={props.changePassword.buttonDisable}\n                    onClick={handleSubmit}\n                  >\n                    {props.changePassword.loadingButtonContent != null\n                      ? props.changePassword.loadingButtonContent\n                      : t(\"change_password\")}\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  changePassword: state.changePassword,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(ChangePasswordCard));\n"]},"metadata":{},"sourceType":"module"}