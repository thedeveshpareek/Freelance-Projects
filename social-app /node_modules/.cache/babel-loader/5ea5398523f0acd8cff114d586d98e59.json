{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.set = set;\nexports.get = get;\nexports.serialize = serialize;\nexports.setEnvironment = setEnvironment;\n\nvar _objectAssign = _interopRequireDefault(require(\"object-assign\"));\n\nvar _deepFreeze = _interopRequireDefault(require(\"deep-freeze\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar configuration = null;\nvar setOptions = {};\nvar currentEnvironment = null;\nvar validOptions = ['freeze', 'assign', 'environment'];\nvar booleanOptions = ['freeze', 'assign'];\nvar stringOptions = ['environment'];\nvar persistentOptions = ['freeze'];\nvar debugEnv = ['development', 'test'];\n\nfunction set(newConfiguration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (configuration && setOptions.freeze !== false) {\n    throw new Error('react-global-configuration - Configuration is already set, the initial call should have \\'freeze\\' set to false to allow for this behaviour (e.g. in testing');\n  }\n\n  if (configuration == null) {\n    configuration = {};\n  }\n\n  if (options) {\n    for (var option in options) {\n      //Check if is a valid option\n      if (validOptions.indexOf(option) !== -1) {\n        //Check value of option\n        var value = options[option];\n\n        if (stringOptions.indexOf(option) !== -1 && typeof value !== 'string') {\n          throw new Error(\"react-global-configuration - Unexpected value type for \".concat(option, \" : \").concat(_typeof(value), \", string expected\"));\n        }\n\n        if (booleanOptions.indexOf(option) !== -1 && typeof value !== 'boolean') {\n          throw new Error(\"react-global-configuration - Unexpected value type for \".concat(option, \" : \").concat(_typeof(value), \", boolean expected\"));\n        }\n\n        if (persistentOptions.indexOf(option) !== -1) {\n          setOptions[option] = value;\n        }\n      } else {\n        throw new Error(\"react-global-configuration - Unrecognised option '\".concat(option, \"' passed to set\"));\n      }\n    }\n  }\n\n  var env = options.environment !== undefined ? options.environment : 'global';\n\n  if (options.assign) {\n    configuration[env] = (0, _objectAssign[\"default\"])(getEnvironmentConfiguration(env), newConfiguration);\n  } else {\n    configuration[env] = newConfiguration;\n  }\n\n  if (setOptions.freeze !== false && Object.freeze && Object.getOwnPropertyNames) {\n    configuration = (0, _deepFreeze[\"default\"])(configuration);\n  } else if (!Object.freeze || !Object.getOwnPropertyNames) {\n    sayWarning('react-global-configuration - Could not call freeze as native functions arent\\'t available');\n  }\n}\n\nfunction get(key) {\n  var fallbackValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!configuration) {\n    sayWarning('react-global-configuration - Configuration has not been set.');\n  }\n\n  var value = fetchFromObject(getEnvironmentConfiguration(), key);\n\n  if (currentEnvironment) {\n    var config = getEnvironmentConfiguration(currentEnvironment);\n    var envValue = fetchFromObject(config !== null ? config : {}, key);\n    value = envValue !== undefined ? envValue : value;\n  } //Fix to return null values\n\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  if (key !== undefined) {\n    value = fallbackValue;\n  } else {\n    sayWarning(\"react-global-configuration - There is no value with the key: \".concat(key));\n    value = getEnvironmentConfiguration();\n  }\n\n  return value;\n}\n\nfunction serialize(env) {\n  var configuration = getEnvironmentConfiguration(env);\n  return (0, _serializeJavascript[\"default\"])(configuration);\n}\n\nfunction setEnvironment(env) {\n  if (env === undefined) {\n    throw new Error('react-global-configuration - You have to define an environment');\n  }\n\n  if (env !== null && typeof env !== 'string') {\n    throw new Error('react-global-configuration - Unexpected environment value, null or string expected');\n  }\n\n  return currentEnvironment = env;\n}\n/* **************************** */\n\n/* Helpers\n/* **************************** */\n\n\nfunction getEnvironmentConfiguration(env) {\n  env = env !== undefined ? env : 'global';\n  return configuration && configuration[env] !== undefined ? configuration[env] : null;\n}\n\nfunction fetchFromObject(obj, key) {\n  key = key !== undefined ? key : '';\n\n  if (typeof obj === 'undefined') {\n    return undefined;\n  }\n\n  var index = key.indexOf('.');\n\n  if (index > -1) {\n    return fetchFromObject(obj[key.substring(0, index)], key.substr(index + 1));\n  }\n\n  return obj[key];\n}\n\nfunction sayWarning(text) {\n  if (debugEnv.indexOf(process.env.NODE_ENV)) {\n    void 0;\n  }\n}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/react-global-configuration/build/configuration.js"],"names":["Object","defineProperty","exports","value","set","get","serialize","setEnvironment","_objectAssign","_interopRequireDefault","require","_deepFreeze","_serializeJavascript","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","configuration","setOptions","currentEnvironment","validOptions","booleanOptions","stringOptions","persistentOptions","debugEnv","newConfiguration","options","arguments","length","undefined","freeze","Error","option","indexOf","concat","env","environment","assign","getEnvironmentConfiguration","getOwnPropertyNames","sayWarning","key","fallbackValue","fetchFromObject","config","envValue","index","substring","substr","text","process","NODE_ENV"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.set = set;\nexports.get = get;\nexports.serialize = serialize;\nexports.setEnvironment = setEnvironment;\n\nvar _objectAssign = _interopRequireDefault(require(\"object-assign\"));\n\nvar _deepFreeze = _interopRequireDefault(require(\"deep-freeze\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar configuration = null;\nvar setOptions = {};\nvar currentEnvironment = null;\nvar validOptions = ['freeze', 'assign', 'environment'];\nvar booleanOptions = ['freeze', 'assign'];\nvar stringOptions = ['environment'];\nvar persistentOptions = ['freeze'];\nvar debugEnv = ['development', 'test'];\n\nfunction set(newConfiguration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (configuration && setOptions.freeze !== false) {\n    throw new Error('react-global-configuration - Configuration is already set, the initial call should have \\'freeze\\' set to false to allow for this behaviour (e.g. in testing');\n  }\n\n  if (configuration == null) {\n    configuration = {};\n  }\n\n  if (options) {\n    for (var option in options) {\n      //Check if is a valid option\n      if (validOptions.indexOf(option) !== -1) {\n        //Check value of option\n        var value = options[option];\n\n        if (stringOptions.indexOf(option) !== -1 && typeof value !== 'string') {\n          throw new Error(\"react-global-configuration - Unexpected value type for \".concat(option, \" : \").concat(_typeof(value), \", string expected\"));\n        }\n\n        if (booleanOptions.indexOf(option) !== -1 && typeof value !== 'boolean') {\n          throw new Error(\"react-global-configuration - Unexpected value type for \".concat(option, \" : \").concat(_typeof(value), \", boolean expected\"));\n        }\n\n        if (persistentOptions.indexOf(option) !== -1) {\n          setOptions[option] = value;\n        }\n      } else {\n        throw new Error(\"react-global-configuration - Unrecognised option '\".concat(option, \"' passed to set\"));\n      }\n    }\n  }\n\n  var env = options.environment !== undefined ? options.environment : 'global';\n\n  if (options.assign) {\n    configuration[env] = (0, _objectAssign[\"default\"])(getEnvironmentConfiguration(env), newConfiguration);\n  } else {\n    configuration[env] = newConfiguration;\n  }\n\n  if (setOptions.freeze !== false && Object.freeze && Object.getOwnPropertyNames) {\n    configuration = (0, _deepFreeze[\"default\"])(configuration);\n  } else if (!Object.freeze || !Object.getOwnPropertyNames) {\n    sayWarning('react-global-configuration - Could not call freeze as native functions arent\\'t available');\n  }\n}\n\nfunction get(key) {\n  var fallbackValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!configuration) {\n    sayWarning('react-global-configuration - Configuration has not been set.');\n  }\n\n  var value = fetchFromObject(getEnvironmentConfiguration(), key);\n\n  if (currentEnvironment) {\n    var config = getEnvironmentConfiguration(currentEnvironment);\n    var envValue = fetchFromObject(config !== null ? config : {}, key);\n    value = envValue !== undefined ? envValue : value;\n  } //Fix to return null values\n\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  if (key !== undefined) {\n    value = fallbackValue;\n  } else {\n    sayWarning(\"react-global-configuration - There is no value with the key: \".concat(key));\n    value = getEnvironmentConfiguration();\n  }\n\n  return value;\n}\n\nfunction serialize(env) {\n  var configuration = getEnvironmentConfiguration(env);\n  return (0, _serializeJavascript[\"default\"])(configuration);\n}\n\nfunction setEnvironment(env) {\n  if (env === undefined) {\n    throw new Error('react-global-configuration - You have to define an environment');\n  }\n\n  if (env !== null && typeof env !== 'string') {\n    throw new Error('react-global-configuration - Unexpected environment value, null or string expected');\n  }\n\n  return currentEnvironment = env;\n}\n/* **************************** */\n\n/* Helpers\n/* **************************** */\n\n\nfunction getEnvironmentConfiguration(env) {\n  env = env !== undefined ? env : 'global';\n  return configuration && configuration[env] !== undefined ? configuration[env] : null;\n}\n\nfunction fetchFromObject(obj, key) {\n  key = key !== undefined ? key : '';\n\n  if (typeof obj === 'undefined') {\n    return undefined;\n  }\n\n  var index = key.indexOf('.');\n\n  if (index > -1) {\n    return fetchFromObject(obj[key.substring(0, index)], key.substr(index + 1));\n  }\n\n  return obj[key];\n}\n\nfunction sayWarning(text) {\n  if (debugEnv.indexOf(process.env.NODE_ENV)) {\n    void 0;\n  }\n}"]},"metadata":{},"sourceType":"script"}