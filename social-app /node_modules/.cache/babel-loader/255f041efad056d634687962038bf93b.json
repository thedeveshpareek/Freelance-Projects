{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Hashtag = require('./Hashtag');\n\nvar _Hashtag2 = _interopRequireDefault(_Hashtag);\n\nvar _hashtagStrategy = require('./hashtagStrategy');\n\nvar _hashtagStrategy2 = _interopRequireDefault(_hashtagStrategy);\n\nvar _styles = {\n  \"hashtag\": \"draftJsHashtagPlugin__hashtag__1wMVC\"\n};\n\nvar _styles2 = _interopRequireDefault(_styles);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaultTheme = {\n  hashtag: _styles2.default.hashtag\n};\n\nexports.default = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Styles are overwritten instead of merged as merging causes a lot of confusion.\n  //\n  // Why? Because when merging a developer needs to know all of the underlying\n  // styles which needs a deep dive into the code. Merging also makes it prone to\n  // errors when upgrading as basically every styling change would become a major\n  // breaking change. 1px of an increased padding can break a whole layout.\n\n  var theme = config.theme ? config.theme : defaultTheme;\n\n  var DecoratedHashtag = function DecoratedHashtag(props) {\n    return _react2.default.createElement(_Hashtag2.default, _extends({}, props, {\n      theme: theme\n    }));\n  };\n\n  return {\n    decorators: [{\n      strategy: _hashtagStrategy2.default,\n      component: DecoratedHashtag\n    }]\n  };\n};","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/draft-js-hashtag-plugin/lib/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_Hashtag","_Hashtag2","_hashtagStrategy","_hashtagStrategy2","_styles","_styles2","obj","__esModule","default","defaultTheme","hashtag","config","undefined","theme","DecoratedHashtag","props","createElement","decorators","strategy","component"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,IAAIS,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAII,SAAS,GAAGF,sBAAsB,CAACC,QAAD,CAAtC;;AAEA,IAAIE,gBAAgB,GAAGL,OAAO,CAAC,mBAAD,CAA9B;;AAEA,IAAIM,iBAAiB,GAAGJ,sBAAsB,CAACG,gBAAD,CAA9C;;AAEA,IAAIE,OAAO,GAAG;AACZ,aAAW;AADC,CAAd;;AAIA,IAAIC,QAAQ,GAAGN,sBAAsB,CAACK,OAAD,CAArC;;AAEA,SAASL,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAEL,QAAQ,CAACG,OAAT,CAAiBE;AADT,CAAnB;;AAIA3B,OAAO,CAACyB,OAAR,GAAkB,YAAY;AAC5B,MAAIG,MAAM,GAAGtB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBuB,SAAzC,GAAqDvB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF,CAD4B,CAG5B;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIwB,KAAK,GAAGF,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAtB,GAA8BJ,YAA1C;;AACA,MAAIK,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtD,WAAOjB,OAAO,CAACU,OAAR,CAAgBQ,aAAhB,CAA8Bf,SAAS,CAACO,OAAxC,EAAiDvB,QAAQ,CAAC,EAAD,EAAK8B,KAAL,EAAY;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAAZ,CAAzD,CAAP;AACD,GAFD;;AAGA,SAAO;AACLI,IAAAA,UAAU,EAAE,CAAC;AACXC,MAAAA,QAAQ,EAAEf,iBAAiB,CAACK,OADjB;AAEXW,MAAAA,SAAS,EAAEL;AAFA,KAAD;AADP,GAAP;AAMD,CAnBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Hashtag = require('./Hashtag');\n\nvar _Hashtag2 = _interopRequireDefault(_Hashtag);\n\nvar _hashtagStrategy = require('./hashtagStrategy');\n\nvar _hashtagStrategy2 = _interopRequireDefault(_hashtagStrategy);\n\nvar _styles = {\n  \"hashtag\": \"draftJsHashtagPlugin__hashtag__1wMVC\"\n};\n\nvar _styles2 = _interopRequireDefault(_styles);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultTheme = {\n  hashtag: _styles2.default.hashtag\n};\n\nexports.default = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Styles are overwritten instead of merged as merging causes a lot of confusion.\n  //\n  // Why? Because when merging a developer needs to know all of the underlying\n  // styles which needs a deep dive into the code. Merging also makes it prone to\n  // errors when upgrading as basically every styling change would become a major\n  // breaking change. 1px of an increased padding can break a whole layout.\n  var theme = config.theme ? config.theme : defaultTheme;\n  var DecoratedHashtag = function DecoratedHashtag(props) {\n    return _react2.default.createElement(_Hashtag2.default, _extends({}, props, { theme: theme }));\n  };\n  return {\n    decorators: [{\n      strategy: _hashtagStrategy2.default,\n      component: DecoratedHashtag\n    }]\n  };\n};"]},"metadata":{},"sourceType":"script"}