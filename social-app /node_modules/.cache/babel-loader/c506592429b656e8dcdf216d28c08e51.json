{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_USER_PRODUCTS_START, USER_PRODUCTS_SAVE_START, FETCH_USER_SINGLE_PRODUCT_START, DELETE_USER_PRODUCT_START, SET_USER_PRODUCT_VISIBILITY_START, UPDATE_USER_PRODUCT_AVAILABILITY_START, FETCH_PRODUCT_CATEGORIES_START, FETCH_PRODUCT_SUB_CATEGORIES_START, FETCH_CART_LIST_START, SAVE_CART_DETAILS_START, REMOVE_CART_DETAILS_START, USER_PRODUCTS_SEARCH_START, FETCH_USER_PRODUCT_PICTURES_START, USER_PRODUCT_PICTURES_SAVE_START, USER_PRODUCT_PICTURES_DELETE_START, FETCH_ECOMM_HOME_START, USER_PRODUCT_VIEW_FOR_OTHERS_START, ORDERS_LIST_FOR_OTHERS_START, ORDERS_VIEW_FOR_OTHERS_START, FETCH_USER_ORDER_PAYMENTS_START, FETCH_DELIVERY_ADDRESS_START, ORDERS_PAYMENT_BY_WALLET_START, ORDERS_PAYMENT_BY_CARD_START, ORDERS_PAYMENT_BY_PAYPAL_START, FETCH_SINGLE_PRODUCT_ORDERS_START, FETCH_OTHER_MODEL_PRODUCT_LIST_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchProductsProOwnerStart } from \"../actions/ProductOwnerAction\";\nimport { fetchUserProductsSuccess, fetchUserProductsFailure, userProductsSaveSuccess, userProductsSaveFailure, fetchUserSingleProductSuccess, fetchUserSingleProductFailure, deleteUserProductSuccess, deleteUserProductFailure, setUserProductVisibilitySuccess, setUserProductVisibilityFailure, updateUserProductAvailabilitySuccess, updateUserProductAvailabilityFailure, fetchProductCategoriesSuccess, fetchProductCategoriesFailure, fetchProductSubCategoriesSuccess, fetchProductSubCategoriesFailure, fetchCartListSuccess, fetchCartListFailure, saveCartDetailsSuccess, saveCartDetailsFailure, removeCartDetailsSuccess, removeCartDetailsFailure, userProductsSearchSuccess, userProductsSearchFailure, fetchUserProductPicturesSuccess, fetchUserProductPicturesFailure, userProductPicturesSaveSuccess, userProductPicturesSaveFailure, userProductPicturesDeleteSuccess, userProductPicturesDeleteFailure, fetchEcommHomeStart, fetchEcommHomeSuccess, fetchEcommHomeFailure, userProductViewForOthersSuccess, userProductViewForOthersFailure, ordersListForOthersSuccess, ordersListForOthersFailure, ordersViewForOthersSuccess, ordersViewForOthersFailure, fetchUserOrderPaymentsSuccess, fetchUserOrderPaymentsFailure, fetchDeliveryAddressSuccess, fetchDeliveryAddressFailure, fetchCartListStart, ordersPaymentByWalletSuccess, ordersPaymentByWalletFailure, ordersPaymentByCardSuccess, ordersPaymentByCardFailure, ordersPaymentByPaypalSuccess, ordersPaymentByPaypalFailure, fetchSingleProductOrdersSuccess, fetchSingleProductOrdersFailure, fetchOtherModelProductListStart, fetchOtherModelProductListSuccess, fetchOtherModelProductListFailure } from \"../actions/ProductsAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* fetchUserProductsAPI() {\n  try {\n    const response = yield api.postMethod(\"user_products\");\n\n    if (response.data.success) {\n      yield put(fetchUserProductsSuccess(response.data.data));\n    } else {\n      yield put(fetchUserProductsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchUserProductsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* userProductsSaveAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_save\", action.data);\n\n    if (response.data.success) {\n      yield put(userProductsSaveSuccess(response.data.data));\n      window.location.assign(\"/single-product/\" + response.data.data.unique_id);\n    } else {\n      yield put(userProductsSaveFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(userProductsSaveFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchUserSingleProductAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_view\", action.data);\n\n    if (response.data.success) {\n      yield put(fetchUserSingleProductSuccess(response.data.data));\n    } else {\n      yield put(fetchUserSingleProductFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchUserSingleProductFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteUserProductAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_delete\", action.data);\n\n    if (response.data.success) {\n      yield put(deleteUserProductSuccess(response.data.data));\n      yield put(fetchProductsProOwnerStart());\n    } else {\n      yield put(deleteUserProductFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteUserProductFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* setUserProductVisibilityAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_set_visibility\", action.data);\n\n    if (response.data.success) {\n      yield put(setUserProductVisibilitySuccess(response.data.data));\n    } else {\n      yield put(setUserProductVisibilityFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(setUserProductVisibilityFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* updateUserProductAvailabilityAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_update_availability\", action.data);\n\n    if (response.data.success) {\n      yield put(updateUserProductAvailabilitySuccess(response.data.data));\n    } else {\n      yield put(updateUserProductAvailabilityFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(updateUserProductAvailabilityFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProductCategoriesAPI() {\n  try {\n    const response = yield api.postMethod(\"product_categories\");\n\n    if (response.data.success) {\n      yield put(fetchProductCategoriesSuccess(response.data.data));\n    } else {\n      yield put(fetchProductCategoriesFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProductCategoriesFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProductSubCategoriesAPI(action) {\n  try {\n    const response = yield api.postMethod(\"product_sub_categories\", action.data);\n\n    if (response.data.success) {\n      yield put(fetchProductSubCategoriesSuccess(response.data.data));\n    } else {\n      yield put(fetchProductSubCategoriesFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProductSubCategoriesFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchCartListAPI() {\n  try {\n    const response = yield api.postMethod(\"carts_list\");\n\n    if (response.data.success) {\n      yield put(fetchCartListSuccess(response.data.data));\n    } else {\n      yield put(fetchCartListFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchCartListFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveCartDetailsAPI(action) {\n  try {\n    const response = yield api.postMethod(\"carts_save\", action.data);\n\n    if (response.data.success) {\n      yield put(saveCartDetailsSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      if (action.data.type == \"userProfile\") yield put(fetchOtherModelProductListStart({\n        user_unique_id: action.data.otherUserUniquId\n      }));else yield put(fetchEcommHomeStart());\n      yield put(fetchCartListStart());\n    } else {\n      yield put(saveCartDetailsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveCartDetailsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* removeCartDetailsAPI(action) {\n  try {\n    const response = yield api.postMethod(\"carts_remove\", action.data);\n\n    if (response.data.success) {\n      yield put(removeCartDetailsSuccess(response.data.data));\n      yield put(fetchCartListStart());\n    } else {\n      yield put(removeCartDetailsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(removeCartDetailsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* userProductsSearchAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_search\", action.data);\n\n    if (response.data.success) {\n      yield put(userProductsSearchSuccess(response.data.data));\n    } else {\n      yield put(userProductsSearchFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(userProductsSearchFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchUserProductPicturesAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_product_pictures\", action.data);\n\n    if (response.data.success) {\n      yield put(fetchUserProductPicturesSuccess(response.data.data));\n    } else {\n      yield put(fetchUserProductPicturesFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchUserProductPicturesFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* userProductPicturesSaveAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_product_pictures_save\", action.data);\n\n    if (response.data.success) {\n      yield put(userProductPicturesSaveSuccess(response.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(userProductPicturesSaveFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(userProductPicturesSaveFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* userProductPicturesDeleteAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_product_pictures_delete\", action.data);\n\n    if (response.data.success) {\n      yield put(userProductPicturesDeleteSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(userProductPicturesDeleteFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(userProductPicturesDeleteFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchEcommHomeAPI() {\n  try {\n    const response = yield api.postMethod(\"ecommerce_home\");\n\n    if (response.data.success) {\n      yield put(fetchEcommHomeSuccess(response.data.data));\n    } else {\n      yield put(fetchEcommHomeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchEcommHomeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* userProductViewForOthersAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_view_for_others\", action.data);\n\n    if (response.data.success) {\n      yield put(userProductViewForOthersSuccess(response.data.data));\n    } else {\n      yield put(userProductViewForOthersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(userProductViewForOthersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* ordersListForOthersAPI(action) {\n  try {\n    const response = yield api.postMethod(\"orders_list_for_others\", action.data);\n\n    if (response.data.success) {\n      yield put(ordersListForOthersSuccess(response.data.data));\n    } else {\n      yield put(ordersListForOthersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(ordersListForOthersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* ordersViewForOthersAPI(action) {\n  try {\n    const response = yield api.postMethod(\"orders_view_for_others\", action.data);\n\n    if (response.data.success) {\n      yield put(ordersViewForOthersSuccess(response.data.data));\n    } else {\n      yield put(ordersViewForOthersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(ordersViewForOthersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchUserOrderPaymentsAPI() {\n  try {\n    const response = yield api.postMethod(\"order_payments_list\");\n\n    if (response.data.success) {\n      yield put(fetchUserOrderPaymentsSuccess(response.data.data));\n    } else {\n      yield put(fetchUserOrderPaymentsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchUserOrderPaymentsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchDeliveryAddressAPI() {\n  try {\n    const response = yield api.postMethod(\"delivery_addresses_list\");\n\n    if (response.data.success) {\n      yield put(fetchDeliveryAddressSuccess(response.data.data));\n    } else {\n      yield put(fetchDeliveryAddressFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchDeliveryAddressFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* orderWalletPaymentAPI(action) {\n  try {\n    const response = yield api.postMethod(\"orders_payment_by_wallet\", action.data);\n\n    if (response.data.success) {\n      yield put(ordersPaymentByWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(`/order-view/${response.data.data.unique_id}`);\n    } else {\n      yield put(ordersPaymentByWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(ordersPaymentByWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* ordercardPaymentAPI(action) {\n  try {\n    const response = yield api.postMethod(\"orders_payment_by_stripe\", action.data);\n\n    if (response.data.success) {\n      yield put(ordersPaymentByCardSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(`/order-view/${response.data.data.unique_id}`);\n    } else {\n      yield put(ordersPaymentByPaypalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(ordersPaymentByPaypalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* orderPaypalPaymentAPI(action) {\n  try {\n    const response = yield api.postMethod(\"orders_payment_by_paypal\", action.data);\n\n    if (response.data.success) {\n      yield put(ordersPaymentByPaypalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(`/order-view/${response.data.data.unique_id}`);\n    } else {\n      yield put(ordersPaymentByCardFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(ordersPaymentByCardFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleProductOrdersAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products_orders_list\", action.data);\n\n    if (response.data.success) {\n      yield put(fetchSingleProductOrdersSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleProductOrdersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleProductOrdersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchOtherModelProductListAPI(action) {\n  try {\n    const response = yield api.postMethod(\"other_model_product_list\", action.data);\n\n    if (response.data.success) {\n      yield put(fetchOtherModelProductListSuccess(response.data.data));\n    } else {\n      yield put(fetchOtherModelProductListFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchOtherModelProductListFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_USER_PRODUCTS_START, fetchUserProductsAPI)]);\n  yield all([yield takeLatest(USER_PRODUCTS_SAVE_START, userProductsSaveAPI)]);\n  yield all([yield takeLatest(FETCH_USER_SINGLE_PRODUCT_START, fetchUserSingleProductAPI)]);\n  yield all([yield takeLatest(DELETE_USER_PRODUCT_START, deleteUserProductAPI)]);\n  yield all([yield takeLatest(SET_USER_PRODUCT_VISIBILITY_START, setUserProductVisibilityAPI)]);\n  yield all([yield takeLatest(UPDATE_USER_PRODUCT_AVAILABILITY_START, updateUserProductAvailabilityAPI)]);\n  yield all([yield takeLatest(FETCH_PRODUCT_CATEGORIES_START, fetchProductCategoriesAPI)]);\n  yield all([yield takeLatest(FETCH_PRODUCT_SUB_CATEGORIES_START, fetchProductSubCategoriesAPI)]);\n  yield all([yield takeLatest(FETCH_CART_LIST_START, fetchCartListAPI)]);\n  yield all([yield takeLatest(SAVE_CART_DETAILS_START, saveCartDetailsAPI)]);\n  yield all([yield takeLatest(REMOVE_CART_DETAILS_START, removeCartDetailsAPI)]);\n  yield all([yield takeLatest(USER_PRODUCTS_SEARCH_START, userProductsSearchAPI)]);\n  yield all([yield takeLatest(FETCH_USER_PRODUCT_PICTURES_START, fetchUserProductPicturesAPI)]);\n  yield all([yield takeLatest(USER_PRODUCT_PICTURES_SAVE_START, userProductPicturesSaveAPI)]);\n  yield all([yield takeLatest(USER_PRODUCT_PICTURES_DELETE_START, userProductPicturesDeleteAPI)]);\n  yield all([yield takeLatest(FETCH_ECOMM_HOME_START, fetchEcommHomeAPI)]);\n  yield all([yield takeLatest(USER_PRODUCT_VIEW_FOR_OTHERS_START, userProductViewForOthersAPI)]);\n  yield all([yield takeLatest(ORDERS_LIST_FOR_OTHERS_START, ordersListForOthersAPI)]);\n  yield all([yield takeLatest(ORDERS_VIEW_FOR_OTHERS_START, ordersViewForOthersAPI)]);\n  yield all([yield takeLatest(FETCH_USER_ORDER_PAYMENTS_START, fetchUserOrderPaymentsAPI)]);\n  yield all([yield takeLatest(FETCH_DELIVERY_ADDRESS_START, fetchDeliveryAddressAPI)]);\n  yield all([yield takeLatest(ORDERS_PAYMENT_BY_WALLET_START, orderWalletPaymentAPI)]);\n  yield all([yield takeLatest(ORDERS_PAYMENT_BY_CARD_START, ordercardPaymentAPI)]);\n  yield all([yield takeLatest(ORDERS_PAYMENT_BY_PAYPAL_START, orderPaypalPaymentAPI)]);\n  yield all([yield takeLatest(FETCH_SINGLE_PRODUCT_ORDERS_START, fetchSingleProductOrdersAPI)]);\n  yield all([yield takeLatest(FETCH_OTHER_MODEL_PRODUCT_LIST_START, fetchOtherModelProductListAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/ProductsSaga.jsx"],"names":["call","select","put","takeLatest","all","api","FETCH_USER_PRODUCTS_START","USER_PRODUCTS_SAVE_START","FETCH_USER_SINGLE_PRODUCT_START","DELETE_USER_PRODUCT_START","SET_USER_PRODUCT_VISIBILITY_START","UPDATE_USER_PRODUCT_AVAILABILITY_START","FETCH_PRODUCT_CATEGORIES_START","FETCH_PRODUCT_SUB_CATEGORIES_START","FETCH_CART_LIST_START","SAVE_CART_DETAILS_START","REMOVE_CART_DETAILS_START","USER_PRODUCTS_SEARCH_START","FETCH_USER_PRODUCT_PICTURES_START","USER_PRODUCT_PICTURES_SAVE_START","USER_PRODUCT_PICTURES_DELETE_START","FETCH_ECOMM_HOME_START","USER_PRODUCT_VIEW_FOR_OTHERS_START","ORDERS_LIST_FOR_OTHERS_START","ORDERS_VIEW_FOR_OTHERS_START","FETCH_USER_ORDER_PAYMENTS_START","FETCH_DELIVERY_ADDRESS_START","ORDERS_PAYMENT_BY_WALLET_START","ORDERS_PAYMENT_BY_CARD_START","ORDERS_PAYMENT_BY_PAYPAL_START","FETCH_SINGLE_PRODUCT_ORDERS_START","FETCH_OTHER_MODEL_PRODUCT_LIST_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchProductsProOwnerStart","fetchUserProductsSuccess","fetchUserProductsFailure","userProductsSaveSuccess","userProductsSaveFailure","fetchUserSingleProductSuccess","fetchUserSingleProductFailure","deleteUserProductSuccess","deleteUserProductFailure","setUserProductVisibilitySuccess","setUserProductVisibilityFailure","updateUserProductAvailabilitySuccess","updateUserProductAvailabilityFailure","fetchProductCategoriesSuccess","fetchProductCategoriesFailure","fetchProductSubCategoriesSuccess","fetchProductSubCategoriesFailure","fetchCartListSuccess","fetchCartListFailure","saveCartDetailsSuccess","saveCartDetailsFailure","removeCartDetailsSuccess","removeCartDetailsFailure","userProductsSearchSuccess","userProductsSearchFailure","fetchUserProductPicturesSuccess","fetchUserProductPicturesFailure","userProductPicturesSaveSuccess","userProductPicturesSaveFailure","userProductPicturesDeleteSuccess","userProductPicturesDeleteFailure","fetchEcommHomeStart","fetchEcommHomeSuccess","fetchEcommHomeFailure","userProductViewForOthersSuccess","userProductViewForOthersFailure","ordersListForOthersSuccess","ordersListForOthersFailure","ordersViewForOthersSuccess","ordersViewForOthersFailure","fetchUserOrderPaymentsSuccess","fetchUserOrderPaymentsFailure","fetchDeliveryAddressSuccess","fetchDeliveryAddressFailure","fetchCartListStart","ordersPaymentByWalletSuccess","ordersPaymentByWalletFailure","ordersPaymentByCardSuccess","ordersPaymentByCardFailure","ordersPaymentByPaypalSuccess","ordersPaymentByPaypalFailure","fetchSingleProductOrdersSuccess","fetchSingleProductOrdersFailure","fetchOtherModelProductListStart","fetchOtherModelProductListSuccess","fetchOtherModelProductListFailure","checkLogoutStatus","fetchUserProductsAPI","response","postMethod","data","success","error","notificationMessage","message","userProductsSaveAPI","action","window","location","assign","unique_id","fetchUserSingleProductAPI","deleteUserProductAPI","setUserProductVisibilityAPI","updateUserProductAvailabilityAPI","fetchProductCategoriesAPI","fetchProductSubCategoriesAPI","fetchCartListAPI","saveCartDetailsAPI","type","user_unique_id","otherUserUniquId","removeCartDetailsAPI","userProductsSearchAPI","fetchUserProductPicturesAPI","userProductPicturesSaveAPI","userProductPicturesDeleteAPI","fetchEcommHomeAPI","userProductViewForOthersAPI","ordersListForOthersAPI","ordersViewForOthersAPI","fetchUserOrderPaymentsAPI","fetchDeliveryAddressAPI","orderWalletPaymentAPI","ordercardPaymentAPI","orderPaypalPaymentAPI","fetchSingleProductOrdersAPI","fetchOtherModelProductListAPI","pageSaga"],"mappings":"AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SACEC,yBADF,EAEEC,wBAFF,EAGEC,+BAHF,EAIEC,yBAJF,EAKEC,iCALF,EAMEC,sCANF,EAOEC,8BAPF,EAQEC,kCARF,EASEC,qBATF,EAUEC,uBAVF,EAWEC,yBAXF,EAYEC,0BAZF,EAaEC,iCAbF,EAcEC,gCAdF,EAeEC,kCAfF,EAgBEC,sBAhBF,EAiBEC,kCAjBF,EAkBEC,4BAlBF,EAmBEC,4BAnBF,EAoBEC,+BApBF,EAqBEC,4BArBF,EAsBEC,8BAtBF,EAuBEC,4BAvBF,EAwBEC,8BAxBF,EAyBEC,iCAzBF,EA0BEC,oCA1BF,QA2BO,2BA3BP;AA4BA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SACEC,6BADF,EAEEC,2BAFF,QAGO,6CAHP;AAKA,SACEC,0BADF,QAEO,+BAFP;AAIA,SACEC,wBADF,EAEEC,wBAFF,EAGEC,uBAHF,EAIEC,uBAJF,EAKEC,6BALF,EAMEC,6BANF,EAOEC,wBAPF,EAQEC,wBARF,EASEC,+BATF,EAUEC,+BAVF,EAWEC,oCAXF,EAYEC,oCAZF,EAaEC,6BAbF,EAcEC,6BAdF,EAeEC,gCAfF,EAgBEC,gCAhBF,EAiBEC,oBAjBF,EAkBEC,oBAlBF,EAmBEC,sBAnBF,EAoBEC,sBApBF,EAqBEC,wBArBF,EAsBEC,wBAtBF,EAuBEC,yBAvBF,EAwBEC,yBAxBF,EAyBEC,+BAzBF,EA0BEC,+BA1BF,EA2BEC,8BA3BF,EA4BEC,8BA5BF,EA6BEC,gCA7BF,EA8BEC,gCA9BF,EA+BEC,mBA/BF,EAgCEC,qBAhCF,EAiCEC,qBAjCF,EAkCEC,+BAlCF,EAmCEC,+BAnCF,EAoCEC,0BApCF,EAqCEC,0BArCF,EAsCEC,0BAtCF,EAuCEC,0BAvCF,EAwCEC,6BAxCF,EAyCEC,6BAzCF,EA0CEC,2BA1CF,EA2CEC,2BA3CF,EA4CEC,kBA5CF,EA6CEC,4BA7CF,EA8CEC,4BA9CF,EA+CEC,0BA/CF,EAgDEC,0BAhDF,EAiDEC,4BAjDF,EAkDEC,4BAlDF,EAmDEC,+BAnDF,EAoDEC,+BApDF,EAqDEC,+BArDF,EAsDEC,iCAtDF,EAuDEC,iCAvDF,QAwDO,2BAxDP;AA0DA,SACEC,iBADF,QAEO,wBAFP;;AAIA,UAAUC,oBAAV,GAAiC;AAC/B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,eAAf,CAAvB;;AAEA,QAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACkC,wBAAwB,CAACyD,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAzB,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACmC,wBAAwB,CAACwD,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAzB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACmC,wBAAwB,CAAC4D,KAAD,CAAzB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUE,mBAAV,CAA8BC,MAA9B,EAAsC;AAClC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,oBAAf,EAAsCO,MAAM,CAACN,IAA7C,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACoC,uBAAuB,CAACuD,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAxB,CAAT;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,qBAAqBX,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBU,SAA/D;AACD,KAHD,MAGO;AACL,YAAMvG,GAAG,CAACqC,uBAAuB,CAACsD,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAxB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAdD,CAcE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACqC,uBAAuB,CAAC0D,KAAD,CAAxB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUQ,yBAAV,CAAoCL,MAApC,EAA4C;AAC1C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,oBAAf,EAAsCO,MAAM,CAACN,IAA7C,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACsC,6BAA6B,CAACqD,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA9B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACuC,6BAA6B,CAACoD,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA9B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACuC,6BAA6B,CAACwD,KAAD,CAA9B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUS,oBAAV,CAA+BN,MAA/B,EAAuC;AACrC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,sBAAf,EAAwCO,MAAM,CAACN,IAA/C,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACwC,wBAAwB,CAACmD,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAzB,CAAT;AACA,YAAM7F,GAAG,CAACiC,0BAA0B,EAA3B,CAAT;AACD,KAHD,MAGO;AACL,YAAMjC,GAAG,CAACyC,wBAAwB,CAACkD,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAzB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAdD,CAcE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACyC,wBAAwB,CAACsD,KAAD,CAAzB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUU,2BAAV,CAAsCP,MAAtC,EAA8C;AAC5C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,8BAAf,EAAgDO,MAAM,CAACN,IAAvD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC0C,+BAA+B,CAACiD,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAhC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAAC2C,+BAA+B,CAACgD,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAhC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC2C,+BAA+B,CAACoD,KAAD,CAAhC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUW,gCAAV,CAA2CR,MAA3C,EAAmD;AACjD,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,mCAAf,EAAqDO,MAAM,CAACN,IAA5D,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC4C,oCAAoC,CAAC+C,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAArC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAAC6C,oCAAoC,CAAC8C,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAArC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC6C,oCAAoC,CAACkD,KAAD,CAArC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUY,yBAAV,GAAsC;AACpC,MAAI;AACF,UAAMjB,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,oBAAf,CAAvB;;AAEA,QAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC8C,6BAA6B,CAAC6C,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA9B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAAC+C,6BAA6B,CAAC4C,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA9B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC+C,6BAA6B,CAACgD,KAAD,CAA9B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUa,4BAAV,CAAuCV,MAAvC,EAA+C;AAC7C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,wBAAf,EAAyCO,MAAM,CAACN,IAAhD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACgD,gCAAgC,CAAC2C,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAjC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACiD,gCAAgC,CAAC0C,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAjC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACiD,gCAAgC,CAAC8C,KAAD,CAAjC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUc,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAMnB,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,YAAf,CAAvB;;AAEA,QAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACkD,oBAAoB,CAACyC,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAArB,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACmD,oBAAoB,CAACwC,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAArB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACmD,oBAAoB,CAAC4C,KAAD,CAArB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUe,kBAAV,CAA6BZ,MAA7B,EAAqC;AACnC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,YAAf,EAA8BO,MAAM,CAACN,IAArC,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACoD,sBAAsB,CAACuC,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAvB,CAAT;AACA,YAAMG,mBAAmB,GAAGjE,6BAA6B,CACvD4D,QAAQ,CAACE,IAAT,CAAcI,OADyC,CAAzD;AAGA,YAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACA,UAAGG,MAAM,CAACN,IAAP,CAAYmB,IAAZ,IAAoB,aAAvB,EACE,MAAMhH,GAAG,CAACsF,+BAA+B,CAAC;AAAC2B,QAAAA,cAAc,EAAEd,MAAM,CAACN,IAAP,CAAYqB;AAA7B,OAAD,CAAhC,CAAT,CADF,KAGE,MAAMlH,GAAG,CAACgE,mBAAmB,EAApB,CAAT;AACF,YAAMhE,GAAG,CAAC6E,kBAAkB,EAAnB,CAAT;AACD,KAXD,MAWO;AACL,YAAM7E,GAAG,CAACqD,sBAAsB,CAACsC,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAvB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GArBD,CAqBE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACqD,sBAAsB,CAAC0C,KAAD,CAAvB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUmB,oBAAV,CAA+BhB,MAA/B,EAAuC;AACrC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,cAAf,EAAgCO,MAAM,CAACN,IAAvC,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACsD,wBAAwB,CAACqC,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAzB,CAAT;AACA,YAAM7F,GAAG,CAAC6E,kBAAkB,EAAnB,CAAT;AACD,KAHD,MAGO;AACL,YAAM7E,GAAG,CAACuD,wBAAwB,CAACoC,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAzB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAdD,CAcE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACuD,wBAAwB,CAACwC,KAAD,CAAzB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUoB,qBAAV,CAAgCjB,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,sBAAf,EAAwCO,MAAM,CAACN,IAA/C,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACwD,yBAAyB,CAACmC,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA1B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACyD,yBAAyB,CAACkC,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA1B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACyD,yBAAyB,CAACsC,KAAD,CAA1B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUqB,2BAAV,CAAsClB,MAAtC,EAA8C;AAC5C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,uBAAf,EAAyCO,MAAM,CAACN,IAAhD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC0D,+BAA+B,CAACiC,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAhC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAAC2D,+BAA+B,CAACgC,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAhC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC2D,+BAA+B,CAACoC,KAAD,CAAhC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUsB,0BAAV,CAAqCnB,MAArC,EAA6C;AAC3C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,4BAAf,EAA8CO,MAAM,CAACN,IAArD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC4D,8BAA8B,CAAC+B,QAAQ,CAACE,IAAV,CAA/B,CAAT;AACA,YAAMG,mBAAmB,GAAGjE,6BAA6B,CACvD4D,QAAQ,CAACE,IAAT,CAAcI,OADyC,CAAzD;AAGA,YAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD,KAND,MAMO;AACL,YAAMhG,GAAG,CAAC6D,8BAA8B,CAAC8B,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA/B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAjBD,CAiBE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC6D,8BAA8B,CAACkC,KAAD,CAA/B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUuB,4BAAV,CAAuCpB,MAAvC,EAA+C;AAC7C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,8BAAf,EAAgDO,MAAM,CAACN,IAAvD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC8D,gCAAgC,CAAC6B,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAjC,CAAT;AACA,YAAMG,mBAAmB,GAAGjE,6BAA6B,CACvD4D,QAAQ,CAACE,IAAT,CAAcI,OADyC,CAAzD;AAGA,YAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD,KAND,MAMO;AACL,YAAMhG,GAAG,CAAC+D,gCAAgC,CAAC4B,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAjC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAjBD,CAiBE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC+D,gCAAgC,CAACgC,KAAD,CAAjC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUwB,iBAAV,GAA8B;AAC5B,MAAI;AACF,UAAM7B,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,gBAAf,CAAvB;;AAEA,QAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACiE,qBAAqB,CAAC0B,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAtB,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACkE,qBAAqB,CAACyB,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAtB,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACkE,qBAAqB,CAAC6B,KAAD,CAAtB,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUyB,2BAAV,CAAsCtB,MAAtC,EAA8C;AAC5C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,+BAAf,EAAiDO,MAAM,CAACN,IAAxD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACmE,+BAA+B,CAACwB,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAhC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACoE,+BAA+B,CAACuB,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAhC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACoE,+BAA+B,CAAC2B,KAAD,CAAhC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAU0B,sBAAV,CAAiCvB,MAAjC,EAAyC;AACvC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,wBAAf,EAA0CO,MAAM,CAACN,IAAjD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACqE,0BAA0B,CAACsB,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA3B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACsE,0BAA0B,CAACqB,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA3B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACsE,0BAA0B,CAACyB,KAAD,CAA3B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAU2B,sBAAV,CAAiCxB,MAAjC,EAAyC;AACvC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,wBAAf,EAA0CO,MAAM,CAACN,IAAjD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACuE,0BAA0B,CAACoB,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA3B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACwE,0BAA0B,CAACmB,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA3B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACwE,0BAA0B,CAACuB,KAAD,CAA3B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAU4B,yBAAV,GAAsC;AACpC,MAAI;AACF,UAAMjC,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,qBAAf,CAAvB;;AAEA,QAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACyE,6BAA6B,CAACkB,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA9B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAAC0E,6BAA6B,CAACiB,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA9B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC0E,6BAA6B,CAACqB,KAAD,CAA9B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAU6B,uBAAV,GAAoC;AAClC,MAAI;AACF,UAAMlC,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,yBAAf,CAAvB;;AAEA,QAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC2E,2BAA2B,CAACgB,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA5B,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAAC4E,2BAA2B,CAACe,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA5B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC4E,2BAA2B,CAACmB,KAAD,CAA5B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAU8B,qBAAV,CAAgC3B,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,0BAAf,EAA4CO,MAAM,CAACN,IAAnD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAAC8E,4BAA4B,CAACa,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA7B,CAAT;AACA,YAAMG,mBAAmB,GAAGjE,6BAA6B,CACvD4D,QAAQ,CAACE,IAAT,CAAcI,OADyC,CAAzD;AAGA,YAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAwB,eAAcX,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBU,SAAU,EAAnE;AACD,KAPD,MAOO;AACL,YAAMvG,GAAG,CAAC+E,4BAA4B,CAACY,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA7B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAlBD,CAkBE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAAC+E,4BAA4B,CAACgB,KAAD,CAA7B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAU+B,mBAAV,CAA8B5B,MAA9B,EAAsC;AACpC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,0BAAf,EAA4CO,MAAM,CAACN,IAAnD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACgF,0BAA0B,CAACW,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA3B,CAAT;AACA,YAAMG,mBAAmB,GAAGjE,6BAA6B,CACvD4D,QAAQ,CAACE,IAAT,CAAcI,OADyC,CAAzD;AAGA,YAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAwB,eAAcX,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBU,SAAU,EAAnE;AACD,KAPD,MAOO;AACL,YAAMvG,GAAG,CAACmF,4BAA4B,CAACQ,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA7B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAlBD,CAkBE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACmF,4BAA4B,CAACY,KAAD,CAA7B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUgC,qBAAV,CAAgC7B,MAAhC,EAAwC;AACtC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,0BAAf,EAA4CO,MAAM,CAACN,IAAnD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACkF,4BAA4B,CAACS,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA7B,CAAT;AACA,YAAMG,mBAAmB,GAAGjE,6BAA6B,CACvD4D,QAAQ,CAACE,IAAT,CAAcI,OADyC,CAAzD;AAGA,YAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAwB,eAAcX,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBU,SAAU,EAAnE;AACD,KAPD,MAOO;AACL,YAAMvG,GAAG,CAACiF,0BAA0B,CAACU,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA3B,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAjBD,CAiBE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACiF,0BAA0B,CAACc,KAAD,CAA3B,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUiC,2BAAV,CAAsC9B,MAAtC,EAA8C;AAC5C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,2BAAf,EAA6CO,MAAM,CAACN,IAApD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACoF,+BAA+B,CAACO,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAhC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACqF,+BAA+B,CAACM,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAhC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACqF,+BAA+B,CAACU,KAAD,CAAhC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUkC,6BAAV,CAAwC/B,MAAxC,EAAgD;AAC9C,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMxF,GAAG,CAACyF,UAAJ,CAAe,0BAAf,EAA4CO,MAAM,CAACN,IAAnD,CAAvB;;AAEA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAM9F,GAAG,CAACuF,iCAAiC,CAACI,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAlC,CAAT;AACD,KAFD,MAEO;AACL,YAAM7F,GAAG,CAACwF,iCAAiC,CAACG,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAlC,CAAT;AACA,YAAMC,mBAAmB,GAAGhE,2BAA2B,CACrD2D,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAM/F,GAAG,CAACyF,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAM7F,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF,GAbD,CAaE,OAAOD,KAAP,EAAc;AACd,UAAM/F,GAAG,CAACwF,iCAAiC,CAACO,KAAD,CAAlC,CAAT;AACA,UAAMC,mBAAmB,GAAGhE,2BAA2B,CAAC+D,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMjG,GAAG,CAAC8B,kBAAkB,CAACkE,mBAAD,CAAnB,CAAT;AACD;AACF;;AAEH,eAAe,UAAUmC,QAAV,GAAqB;AAClC,QAAMjI,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACG,yBAAD,EAA4BsF,oBAA5B,CAAjB,CAAD,CAAT;AACA,QAAMxF,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACI,wBAAD,EAA2B6F,mBAA3B,CAAjB,CAAD,CAAT;AACA,QAAMhG,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACK,+BAAD,EAAkCkG,yBAAlC,CAAjB,CAAD,CAAT;AACA,QAAMtG,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACM,yBAAD,EAA4BkG,oBAA5B,CAAjB,CAAD,CAAT;AACA,QAAMvG,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACO,iCAAD,EAAoCkG,2BAApC,CAAjB,CAAD,CAAT;AACA,QAAMxG,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACQ,sCAAD,EAAyCkG,gCAAzC,CAAjB,CAAD,CAAT;AACA,QAAMzG,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACS,8BAAD,EAAiCkG,yBAAjC,CAAjB,CAAD,CAAT;AACA,QAAM1G,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACU,kCAAD,EAAqCkG,4BAArC,CAAjB,CAAD,CAAT;AACA,QAAM3G,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACW,qBAAD,EAAwBkG,gBAAxB,CAAjB,CAAD,CAAT;AACA,QAAM5G,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACY,uBAAD,EAA0BkG,kBAA1B,CAAjB,CAAD,CAAT;AACA,QAAM7G,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACa,yBAAD,EAA4BqG,oBAA5B,CAAjB,CAAD,CAAT;AACA,QAAMjH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACc,0BAAD,EAA6BqG,qBAA7B,CAAjB,CAAD,CAAT;AACA,QAAMlH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACe,iCAAD,EAAoCqG,2BAApC,CAAjB,CAAD,CAAT;AACA,QAAMnH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACgB,gCAAD,EAAmCqG,0BAAnC,CAAjB,CAAD,CAAT;AACA,QAAMpH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACiB,kCAAD,EAAqCqG,4BAArC,CAAjB,CAAD,CAAT;AACA,QAAMrH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACkB,sBAAD,EAAyBqG,iBAAzB,CAAjB,CAAD,CAAT;AACA,QAAMtH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACmB,kCAAD,EAAqCqG,2BAArC,CAAjB,CAAD,CAAT;AACA,QAAMvH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACoB,4BAAD,EAA+BqG,sBAA/B,CAAjB,CAAD,CAAT;AACA,QAAMxH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACqB,4BAAD,EAA+BqG,sBAA/B,CAAjB,CAAD,CAAT;AACA,QAAMzH,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACsB,+BAAD,EAAkCqG,yBAAlC,CAAjB,CAAD,CAAT;AACA,QAAM1H,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACuB,4BAAD,EAA+BqG,uBAA/B,CAAjB,CAAD,CAAT;AACA,QAAM3H,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACwB,8BAAD,EAAiCqG,qBAAjC,CAAjB,CAAD,CAAT;AACA,QAAM5H,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACyB,4BAAD,EAA+BqG,mBAA/B,CAAjB,CAAD,CAAT;AACA,QAAM7H,GAAG,CAAC,CAAC,MAAMD,UAAU,CAAC0B,8BAAD,EAAiCqG,qBAAjC,CAAjB,CAAD,CAAT;AACA,QAAM9H,GAAG,CAAC,CAAC,MAAMD,UAAU,CAAC2B,iCAAD,EAAoCqG,2BAApC,CAAjB,CAAD,CAAT;AACA,QAAM/H,GAAG,CAAC,CAAC,MAAMD,UAAU,CAAC4B,oCAAD,EAAuCqG,6BAAvC,CAAjB,CAAD,CAAT;AACD","sourcesContent":["\nimport { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  FETCH_USER_PRODUCTS_START,\n  USER_PRODUCTS_SAVE_START,\n  FETCH_USER_SINGLE_PRODUCT_START,\n  DELETE_USER_PRODUCT_START,\n  SET_USER_PRODUCT_VISIBILITY_START,\n  UPDATE_USER_PRODUCT_AVAILABILITY_START,\n  FETCH_PRODUCT_CATEGORIES_START,\n  FETCH_PRODUCT_SUB_CATEGORIES_START,\n  FETCH_CART_LIST_START,\n  SAVE_CART_DETAILS_START,\n  REMOVE_CART_DETAILS_START,\n  USER_PRODUCTS_SEARCH_START,\n  FETCH_USER_PRODUCT_PICTURES_START,\n  USER_PRODUCT_PICTURES_SAVE_START,\n  USER_PRODUCT_PICTURES_DELETE_START,\n  FETCH_ECOMM_HOME_START,\n  USER_PRODUCT_VIEW_FOR_OTHERS_START,\n  ORDERS_LIST_FOR_OTHERS_START,\n  ORDERS_VIEW_FOR_OTHERS_START,\n  FETCH_USER_ORDER_PAYMENTS_START,\n  FETCH_DELIVERY_ADDRESS_START,\n  ORDERS_PAYMENT_BY_WALLET_START,\n  ORDERS_PAYMENT_BY_CARD_START,\n  ORDERS_PAYMENT_BY_PAYPAL_START,\n  FETCH_SINGLE_PRODUCT_ORDERS_START,\n  FETCH_OTHER_MODEL_PRODUCT_LIST_START\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nimport {\n  fetchProductsProOwnerStart,\n} from \"../actions/ProductOwnerAction\";\n\nimport {\n  fetchUserProductsSuccess,\n  fetchUserProductsFailure,\n  userProductsSaveSuccess,\n  userProductsSaveFailure,\n  fetchUserSingleProductSuccess,\n  fetchUserSingleProductFailure,\n  deleteUserProductSuccess,\n  deleteUserProductFailure,\n  setUserProductVisibilitySuccess,\n  setUserProductVisibilityFailure,\n  updateUserProductAvailabilitySuccess,\n  updateUserProductAvailabilityFailure,\n  fetchProductCategoriesSuccess,\n  fetchProductCategoriesFailure,\n  fetchProductSubCategoriesSuccess,\n  fetchProductSubCategoriesFailure,\n  fetchCartListSuccess,\n  fetchCartListFailure,\n  saveCartDetailsSuccess,\n  saveCartDetailsFailure,\n  removeCartDetailsSuccess,\n  removeCartDetailsFailure,\n  userProductsSearchSuccess,\n  userProductsSearchFailure,\n  fetchUserProductPicturesSuccess,\n  fetchUserProductPicturesFailure,\n  userProductPicturesSaveSuccess,\n  userProductPicturesSaveFailure,\n  userProductPicturesDeleteSuccess,\n  userProductPicturesDeleteFailure,\n  fetchEcommHomeStart,\n  fetchEcommHomeSuccess,\n  fetchEcommHomeFailure,\n  userProductViewForOthersSuccess,\n  userProductViewForOthersFailure,\n  ordersListForOthersSuccess,\n  ordersListForOthersFailure,\n  ordersViewForOthersSuccess,\n  ordersViewForOthersFailure,\n  fetchUserOrderPaymentsSuccess,\n  fetchUserOrderPaymentsFailure,\n  fetchDeliveryAddressSuccess,\n  fetchDeliveryAddressFailure,\n  fetchCartListStart,\n  ordersPaymentByWalletSuccess,\n  ordersPaymentByWalletFailure,\n  ordersPaymentByCardSuccess,\n  ordersPaymentByCardFailure,\n  ordersPaymentByPaypalSuccess,\n  ordersPaymentByPaypalFailure,\n  fetchSingleProductOrdersSuccess,\n  fetchSingleProductOrdersFailure,\n  fetchOtherModelProductListStart,\n  fetchOtherModelProductListSuccess,\n  fetchOtherModelProductListFailure\n} from \"../actions/ProductsAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* fetchUserProductsAPI() {\n  try {\n    const response = yield api.postMethod(\"user_products\");\n\n    if (response.data.success) {\n      yield put(fetchUserProductsSuccess(response.data.data));\n    } else {\n      yield put(fetchUserProductsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchUserProductsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* userProductsSaveAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_save\" , action.data);\n  \n      if (response.data.success) {\n        yield put(userProductsSaveSuccess(response.data.data));\n        window.location.assign(\"/single-product/\" + response.data.data.unique_id);\n      } else {\n        yield put(userProductsSaveFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(userProductsSaveFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchUserSingleProductAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_view\" , action.data);\n  \n      if (response.data.success) {\n        yield put(fetchUserSingleProductSuccess(response.data.data));\n      } else {\n        yield put(fetchUserSingleProductFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchUserSingleProductFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* deleteUserProductAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_delete\" , action.data);\n  \n      if (response.data.success) {\n        yield put(deleteUserProductSuccess(response.data.data));\n        yield put(fetchProductsProOwnerStart());\n      } else {\n        yield put(deleteUserProductFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(deleteUserProductFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* setUserProductVisibilityAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_set_visibility\" , action.data);\n  \n      if (response.data.success) {\n        yield put(setUserProductVisibilitySuccess(response.data.data));\n      } else {\n        yield put(setUserProductVisibilityFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(setUserProductVisibilityFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* updateUserProductAvailabilityAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_update_availability\" , action.data);\n  \n      if (response.data.success) {\n        yield put(updateUserProductAvailabilitySuccess(response.data.data));\n      } else {\n        yield put(updateUserProductAvailabilityFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(updateUserProductAvailabilityFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchProductCategoriesAPI() {\n    try {\n      const response = yield api.postMethod(\"product_categories\");\n  \n      if (response.data.success) {\n        yield put(fetchProductCategoriesSuccess(response.data.data));\n      } else {\n        yield put(fetchProductCategoriesFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchProductCategoriesFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchProductSubCategoriesAPI(action) {\n    try {\n      const response = yield api.postMethod(\"product_sub_categories\", action.data);\n  \n      if (response.data.success) {\n        yield put(fetchProductSubCategoriesSuccess(response.data.data));\n      } else {\n        yield put(fetchProductSubCategoriesFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchProductSubCategoriesFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchCartListAPI() {\n    try {\n      const response = yield api.postMethod(\"carts_list\");\n  \n      if (response.data.success) {\n        yield put(fetchCartListSuccess(response.data.data));\n      } else {\n        yield put(fetchCartListFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchCartListFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* saveCartDetailsAPI(action) {\n    try {\n      const response = yield api.postMethod(\"carts_save\" , action.data);\n  \n      if (response.data.success) {\n        yield put(saveCartDetailsSuccess(response.data.data));\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n        if(action.data.type == \"userProfile\")\n          yield put(fetchOtherModelProductListStart({user_unique_id: action.data.otherUserUniquId}));\n        else\n          yield put(fetchEcommHomeStart());\n        yield put(fetchCartListStart());\n      } else {\n        yield put(saveCartDetailsFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(saveCartDetailsFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* removeCartDetailsAPI(action) {\n    try {\n      const response = yield api.postMethod(\"carts_remove\" , action.data);\n  \n      if (response.data.success) {\n        yield put(removeCartDetailsSuccess(response.data.data));\n        yield put(fetchCartListStart());\n      } else {\n        yield put(removeCartDetailsFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(removeCartDetailsFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* userProductsSearchAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_search\" , action.data);\n  \n      if (response.data.success) {\n        yield put(userProductsSearchSuccess(response.data.data));\n      } else {\n        yield put(userProductsSearchFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(userProductsSearchFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchUserProductPicturesAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_product_pictures\" , action.data);\n  \n      if (response.data.success) {\n        yield put(fetchUserProductPicturesSuccess(response.data.data));\n      } else {\n        yield put(fetchUserProductPicturesFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchUserProductPicturesFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* userProductPicturesSaveAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_product_pictures_save\" , action.data);\n  \n      if (response.data.success) {\n        yield put(userProductPicturesSaveSuccess(response.data));\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n      } else {\n        yield put(userProductPicturesSaveFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(userProductPicturesSaveFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* userProductPicturesDeleteAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_product_pictures_delete\" , action.data);\n  \n      if (response.data.success) {\n        yield put(userProductPicturesDeleteSuccess(response.data.data));\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n      } else {\n        yield put(userProductPicturesDeleteFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(userProductPicturesDeleteFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchEcommHomeAPI() {\n    try {\n      const response = yield api.postMethod(\"ecommerce_home\");\n  \n      if (response.data.success) {\n        yield put(fetchEcommHomeSuccess(response.data.data));\n      } else {\n        yield put(fetchEcommHomeFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchEcommHomeFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* userProductViewForOthersAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_view_for_others\" , action.data);\n  \n      if (response.data.success) {\n        yield put(userProductViewForOthersSuccess(response.data.data));\n      } else {\n        yield put(userProductViewForOthersFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(userProductViewForOthersFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* ordersListForOthersAPI(action) {\n    try {\n      const response = yield api.postMethod(\"orders_list_for_others\" , action.data);\n  \n      if (response.data.success) {\n        yield put(ordersListForOthersSuccess(response.data.data));\n      } else {\n        yield put(ordersListForOthersFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(ordersListForOthersFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* ordersViewForOthersAPI(action) {\n    try {\n      const response = yield api.postMethod(\"orders_view_for_others\" , action.data);\n  \n      if (response.data.success) {\n        yield put(ordersViewForOthersSuccess(response.data.data));\n      } else {\n        yield put(ordersViewForOthersFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(ordersViewForOthersFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchUserOrderPaymentsAPI() {\n    try {\n      const response = yield api.postMethod(\"order_payments_list\");\n  \n      if (response.data.success) {\n        yield put(fetchUserOrderPaymentsSuccess(response.data.data));\n      } else {\n        yield put(fetchUserOrderPaymentsFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchUserOrderPaymentsFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchDeliveryAddressAPI() {\n    try {\n      const response = yield api.postMethod(\"delivery_addresses_list\");\n  \n      if (response.data.success) {\n        yield put(fetchDeliveryAddressSuccess(response.data.data));\n      } else {\n        yield put(fetchDeliveryAddressFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchDeliveryAddressFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* orderWalletPaymentAPI(action) {\n    try {\n      const response = yield api.postMethod(\"orders_payment_by_wallet\" , action.data);\n  \n      if (response.data.success) {\n        yield put(ordersPaymentByWalletSuccess(response.data.data));\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n        window.location.assign(`/order-view/${response.data.data.unique_id}`)\n      } else {\n        yield put(ordersPaymentByWalletFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(ordersPaymentByWalletFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* ordercardPaymentAPI(action) {\n    try {\n      const response = yield api.postMethod(\"orders_payment_by_stripe\" , action.data);\n  \n      if (response.data.success) {\n        yield put(ordersPaymentByCardSuccess(response.data.data));\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n        window.location.assign(`/order-view/${response.data.data.unique_id}`)\n      } else {\n        yield put(ordersPaymentByPaypalFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(ordersPaymentByPaypalFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* orderPaypalPaymentAPI(action) {\n    try {\n      const response = yield api.postMethod(\"orders_payment_by_paypal\" , action.data);\n  \n      if (response.data.success) {\n        yield put(ordersPaymentByPaypalSuccess(response.data.data));\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n        window.location.assign(`/order-view/${response.data.data.unique_id}`)\n      } else {\n        yield put(ordersPaymentByCardFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(ordersPaymentByCardFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchSingleProductOrdersAPI(action) {\n    try {\n      const response = yield api.postMethod(\"user_products_orders_list\" , action.data);\n  \n      if (response.data.success) {\n        yield put(fetchSingleProductOrdersSuccess(response.data.data));\n      } else {\n        yield put(fetchSingleProductOrdersFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchSingleProductOrdersFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\n  function* fetchOtherModelProductListAPI(action) {\n    try {\n      const response = yield api.postMethod(\"other_model_product_list\" , action.data);\n  \n      if (response.data.success) {\n        yield put(fetchOtherModelProductListSuccess(response.data.data));\n      } else {\n        yield put(fetchOtherModelProductListFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } catch (error) {\n      yield put(fetchOtherModelProductListFailure(error));\n      const notificationMessage = getErrorNotificationMessage(error.message);\n      yield put(createNotification(notificationMessage));\n    }\n  }\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_USER_PRODUCTS_START, fetchUserProductsAPI)]);\n  yield all([yield takeLatest(USER_PRODUCTS_SAVE_START, userProductsSaveAPI)]);\n  yield all([yield takeLatest(FETCH_USER_SINGLE_PRODUCT_START, fetchUserSingleProductAPI)]);\n  yield all([yield takeLatest(DELETE_USER_PRODUCT_START, deleteUserProductAPI)]);\n  yield all([yield takeLatest(SET_USER_PRODUCT_VISIBILITY_START, setUserProductVisibilityAPI)]);\n  yield all([yield takeLatest(UPDATE_USER_PRODUCT_AVAILABILITY_START, updateUserProductAvailabilityAPI)]);\n  yield all([yield takeLatest(FETCH_PRODUCT_CATEGORIES_START, fetchProductCategoriesAPI)]);\n  yield all([yield takeLatest(FETCH_PRODUCT_SUB_CATEGORIES_START, fetchProductSubCategoriesAPI)]);\n  yield all([yield takeLatest(FETCH_CART_LIST_START, fetchCartListAPI)]);\n  yield all([yield takeLatest(SAVE_CART_DETAILS_START, saveCartDetailsAPI)]);\n  yield all([yield takeLatest(REMOVE_CART_DETAILS_START, removeCartDetailsAPI)]);\n  yield all([yield takeLatest(USER_PRODUCTS_SEARCH_START, userProductsSearchAPI)]);\n  yield all([yield takeLatest(FETCH_USER_PRODUCT_PICTURES_START, fetchUserProductPicturesAPI)]);\n  yield all([yield takeLatest(USER_PRODUCT_PICTURES_SAVE_START, userProductPicturesSaveAPI)]);\n  yield all([yield takeLatest(USER_PRODUCT_PICTURES_DELETE_START, userProductPicturesDeleteAPI)]);\n  yield all([yield takeLatest(FETCH_ECOMM_HOME_START, fetchEcommHomeAPI)]);\n  yield all([yield takeLatest(USER_PRODUCT_VIEW_FOR_OTHERS_START, userProductViewForOthersAPI)]);\n  yield all([yield takeLatest(ORDERS_LIST_FOR_OTHERS_START, ordersListForOthersAPI)]);\n  yield all([yield takeLatest(ORDERS_VIEW_FOR_OTHERS_START, ordersViewForOthersAPI)]);\n  yield all([yield takeLatest(FETCH_USER_ORDER_PAYMENTS_START, fetchUserOrderPaymentsAPI)]);\n  yield all([yield takeLatest(FETCH_DELIVERY_ADDRESS_START, fetchDeliveryAddressAPI)]);\n  yield all([yield takeLatest(ORDERS_PAYMENT_BY_WALLET_START, orderWalletPaymentAPI)]);\n  yield all([yield takeLatest(ORDERS_PAYMENT_BY_CARD_START, ordercardPaymentAPI)]);\n  yield all([yield takeLatest(ORDERS_PAYMENT_BY_PAYPAL_START, orderPaypalPaymentAPI)]);\n  yield all([yield takeLatest(FETCH_SINGLE_PRODUCT_ORDERS_START, fetchSingleProductOrdersAPI)]);\n  yield all([yield takeLatest(FETCH_OTHER_MODEL_PRODUCT_LIST_START, fetchOtherModelProductListAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}