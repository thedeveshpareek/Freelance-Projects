{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/PaymentAddCardModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Modal, InputGroup, FormControl, Col, Row, Button } from \"react-bootstrap\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport api from \"../../Environment\";\nimport { connect } from \"react-redux\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getErrorNotificationMessage, getSuccessNotificationMessage } from \"./NotificationMessage\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PaymentAddCardModal = props => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [addCardButtonDisable, setAddCardButtonDisable] = useState(false);\n  const [addCardLoadingContent, setAddCardLoadingContent] = useState(null);\n\n  const addCard = async ev => {\n    ev.preventDefault();\n    setAddCardButtonDisable(true);\n    setAddCardLoadingContent(\"Loading... Please wait\");\n\n    if (stripe) {\n      await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n      }).then(payload => {\n        // console.log(\"Payload\", payload);\n        const inputData = {\n          card_token: payload.paymentMethod.id\n        };\n        api.postMethod(\"cards_add\", inputData).then(response => {\n          if (response.data.success) {\n            const notificationMessage = getSuccessNotificationMessage(response.data.message);\n            props.dispatch(createNotification(notificationMessage));\n            props.dispatch(fetchCardDetailsStart());\n            setAddCardButtonDisable(false);\n            setAddCardLoadingContent(null);\n          } else {\n            const notificationMessage = getErrorNotificationMessage(response.data.error);\n            props.dispatch(createNotification(notificationMessage));\n          }\n\n          props.closePaymentAddCardModal();\n        }).catch(error => {\n          console.log(\"Error\", error);\n          setAddCardButtonDisable(false);\n          setAddCardLoadingContent(null);\n          const notificationMessage = getErrorNotificationMessage(\"Error Please try again\");\n          props.dispatch(createNotification(notificationMessage));\n        });\n      }).catch(error => {\n        console.log(\"Eroor\", error);\n        setAddCardButtonDisable(false);\n        setAddCardLoadingContent(null);\n        const notificationMessage = getErrorNotificationMessage(\"Please check your card details and try again..\");\n        props.dispatch(createNotification(notificationMessage));\n      });\n    } else {\n      setAddCardButtonDisable(false);\n      setAddCardLoadingContent(null);\n      const notificationMessage = getErrorNotificationMessage(\"Stripe is not configured\");\n      props.dispatch(createNotification(notificationMessage));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal-dialog-center payment-add-card-modal\",\n    size: \"md\",\n    centered: true,\n    show: props.paymentAddCard,\n    onHide: props.closePaymentAddCardModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, props.paymentAddCard === true ? /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, t(\"add_card\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger width-btn\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closePaymentAddCardModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, t(\"cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn btn-success width-btn\",\n    \"data-dismiss\": \"modal\",\n    onClick: addCard,\n    disabled: addCardButtonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, addCardLoadingContent != null ? addCardLoadingContent : t(\"add\")))) : null));\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(translate(PaymentAddCardModal));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/PaymentAddCardModal.jsx"],"names":["React","useState","useEffect","Link","Form","Modal","InputGroup","FormControl","Col","Row","Button","CardElement","useStripe","useElements","api","connect","createNotification","getErrorNotificationMessage","getSuccessNotificationMessage","fetchCardDetailsStart","translate","t","PaymentAddCardModal","props","stripe","elements","addCardButtonDisable","setAddCardButtonDisable","addCardLoadingContent","setAddCardLoadingContent","addCard","ev","preventDefault","createPaymentMethod","type","card","getElement","then","payload","inputData","card_token","paymentMethod","id","postMethod","response","data","success","notificationMessage","message","dispatch","error","closePaymentAddCardModal","catch","console","log","paymentAddCard","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Modal,\n  InputGroup,\n  FormControl,\n  Col,\n  Row,\n  Button,\n} from \"react-bootstrap\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport api from \"../../Environment\";\nimport { connect } from \"react-redux\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getErrorNotificationMessage,\n  getSuccessNotificationMessage,\n} from \"./NotificationMessage\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PaymentAddCardModal = (props) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [addCardButtonDisable, setAddCardButtonDisable] = useState(false);\n  const [addCardLoadingContent, setAddCardLoadingContent] = useState(null);\n\n  const addCard = async (ev) => {\n    ev.preventDefault();\n    setAddCardButtonDisable(true);\n    setAddCardLoadingContent(\"Loading... Please wait\");\n    if (stripe) {\n      await stripe\n        .createPaymentMethod({\n          type: \"card\",\n          card: elements.getElement(CardElement),\n        })\n        .then((payload) => {\n          // console.log(\"Payload\", payload);\n          const inputData = {\n            card_token: payload.paymentMethod.id,\n          };\n          api\n            .postMethod(\"cards_add\", inputData)\n            .then((response) => {\n              if (response.data.success) {\n                const notificationMessage = getSuccessNotificationMessage(\n                  response.data.message\n                );\n                props.dispatch(createNotification(notificationMessage));\n                props.dispatch(fetchCardDetailsStart());\n\n                setAddCardButtonDisable(false);\n                setAddCardLoadingContent(null);\n              } else {\n                const notificationMessage = getErrorNotificationMessage(\n                  response.data.error\n                );\n                props.dispatch(createNotification(notificationMessage));\n              }\n              props.closePaymentAddCardModal();\n            })\n            .catch((error) => {\n              console.log(\"Error\", error);\n              setAddCardButtonDisable(false);\n              setAddCardLoadingContent(null);\n              const notificationMessage = getErrorNotificationMessage(\n                \"Error Please try again\"\n              );\n              props.dispatch(createNotification(notificationMessage));\n            });\n        })\n        .catch((error) => {\n          console.log(\"Eroor\", error);\n          setAddCardButtonDisable(false);\n          setAddCardLoadingContent(null);\n          const notificationMessage = getErrorNotificationMessage(\n            \"Please check your card details and try again..\"\n          );\n          props.dispatch(createNotification(notificationMessage));\n        });\n    } else {\n      setAddCardButtonDisable(false);\n      setAddCardLoadingContent(null);\n      const notificationMessage = getErrorNotificationMessage(\n        \"Stripe is not configured\"\n      );\n      props.dispatch(createNotification(notificationMessage));\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"modal-dialog-center payment-add-card-modal\"\n        size=\"md\"\n        centered\n        show={props.paymentAddCard}\n        onHide={props.closePaymentAddCardModal}\n      >\n        {props.paymentAddCard === true ? \n        <Form>\n          <Modal.Header closeButton>\n            <Modal.Title>{t(\"add_card\")}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={12} md={7}>\n                <CardElement />\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger width-btn\"\n              data-dismiss=\"modal\"\n              onClick={props.closePaymentAddCardModal}\n            >\n              {t(\"cancel\")}\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"btn btn-success width-btn\"\n              data-dismiss=\"modal\"\n              onClick={addCard}\n              disabled={addCardButtonDisable}\n            >\n              {addCardLoadingContent != null ? addCardLoadingContent : t(\"add\")}\n            </Button>\n          </Modal.Footer>\n        </Form>\n        : null}\n      </Modal>\n    </>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(null, mapDispatchToProps)(translate(PaymentAddCardModal));\n"]},"metadata":{},"sourceType":"module"}