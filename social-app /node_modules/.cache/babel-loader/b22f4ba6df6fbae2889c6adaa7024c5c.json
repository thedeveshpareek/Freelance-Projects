{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import React,{useState,useEffect}from\"react\";import{Form,Button,Image,Modal,Tab,Nav,Row,Col}from\"react-bootstrap\";import{connect}from\"react-redux\";import{subscriptionPaymentStripeStart,subscriptionPaymentPaypalStart,subscriptionPaymentCCBillStart,subscriptionPaymentWalletStart,subscriptionPaymentCoinPaymentStart}from\"../../store/actions/SubscriptionAction\";import{fetchCardDetailsStart}from\"../../store/actions/CardsAction\";import{fetchWalletDetailsStart}from\"../../store/actions/WalletAction\";import PaypalExpressBtn from\"react-paypal-express-checkout\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import configuration from\"react-global-configuration\";import{Link}from\"react-router-dom\";import{translate,t}from\"react-multi-lang\";var PaymentModal=function PaymentModal(props){var _useState=useState(localStorage.getItem(\"default_payment_method\")),_useState2=_slicedToArray(_useState,2),paymentType=_useState2[0],setPaymentType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showPayPal=_useState4[0],payPal=_useState4[1];useEffect(function(){props.dispatch(fetchCardDetailsStart());props.dispatch(fetchWalletDetailsStart());},[]);var env=configuration.get(\"configData.PAYPAL_MODE\");// you can set here to 'production' for production\nvar currency=\"USD\";// or you can set this value from your props or state\nvar client={sandbox:configuration.get(\"configData.PAYPAL_ID\"),production:configuration.get(\"configData.PAYPAL_ID\")};var choosePaymentOption=function choosePaymentOption(event){setPaymentType(event);};var handleSubmit=function handleSubmit(event){event.preventDefault();if(paymentType===\"CARD\")props.dispatch(subscriptionPaymentStripeStart({user_unique_id:props.user_unique_id,plan_type:props.subscriptionData.plan_type,is_free:props.subscriptionData.is_free}));if(paymentType===\"PAYPAL\")showPayPal(true);if(paymentType===\"WALLET\")props.dispatch(subscriptionPaymentWalletStart({user_unique_id:props.user_unique_id,plan_type:props.subscriptionData.plan_type,is_free:props.subscriptionData.is_free}));if(paymentType===\"CCBILL\")props.dispatch(subscriptionPaymentCCBillStart({user_unique_id:props.user_unique_id,plan_type:props.subscriptionData.plan_type}));if(paymentType===\"coinpayment\")props.dispatch(subscriptionPaymentCoinPaymentStart({user_unique_id:props.user_unique_id,plan_type:props.subscriptionData.plan_type}));// props.closePaymentModal();\n};var paypalOnSuccess=function paypalOnSuccess(payment){console.log(payment);setTimeout(function(){props.dispatch(subscriptionPaymentPaypalStart({payment_id:payment.paymentID,user_unique_id:props.user_unique_id,plan_type:props.subscriptionData.plan_type,is_free:props.subscriptionData.is_free}));},1000);};var paypalOnError=function paypalOnError(err){var notificationMessage=getErrorNotificationMessage(err);_this.props.dispatch(createNotification(notificationMessage));};var paypalOnCancel=function paypalOnCancel(data){var notificationMessage=getErrorNotificationMessage(\"Payment cancelled please try again..\");_this.props.dispatch(createNotification(notificationMessage));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{show:props.subscrptionPayment,onHide:props.closePaymentModal,centered:true,size:\"lg\"},props.subscrptionPayment===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"subscribe\"))),/*#__PURE__*/React.createElement(Modal.Body,{className:\"subscription-tip-ppv-tab\"},/*#__PURE__*/React.createElement(Tab.Container,{id:\"left-tabs-example\",defaultActiveKey:paymentType},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:3},/*#__PURE__*/React.createElement(Nav,{variant:\"pills\",className:\"flex-column\"},configuration.get(\"configData.is_stripe_enabled\")==1&&configuration.get(\"configData.stripe_publishable_key\")!==\"\"&&configuration.get(\"configData.stripe_secret_key\")!==\"\"?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"CARD\");},eventKey:\"CARD\"},t(\"card_stripe\"))):null,configuration.get(\"configData.is_paypal_enabled\")==1&&configuration.get(\"configData.PAYPAL_ID\")!==\"\"?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"PAYPAL\");},eventKey:\"PAYPAL\"},t(\"paypal\"))):null,configuration.get(\"configData.is_ccbill_enabled\")==1&&configuration.get(\"configData.flex_form_id\")!==\"\"&&configuration.get(\"configData.salt_key\")!==\"\"?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"CCBILL\");},eventKey:\"CCBILL\"},t(\"ccbill\"))):null,configuration.get(\"configData.is_wallet_payment_enabled\")==1?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"WALLET\");},eventKey:\"WALLET\"},t(\"wallet\"))):null)),/*#__PURE__*/React.createElement(Col,{sm:9},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-box\"},/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"amount\"),value:props.subscriptionData.amount_formatted,disabled:true})),/*#__PURE__*/React.createElement(Tab.Content,null,configuration.get(\"configData.is_stripe_enabled\")==1&&configuration.get(\"configData.stripe_publishable_key\")!==\"\"&&configuration.get(\"configData.stripe_secret_key\")!==\"\"?/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"CARD\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-sec\"},props.cards.loading?\"\":props.cards.data.cards.length>0?props.cards.data.cards.map(function(card){return card.is_default==1&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-list-box\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-3\"},\"XXXX XXXX XXXX \",card.last_four),/*#__PURE__*/React.createElement(\"h5\",{className:\"text-muted\"},card.card_type),/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-bottom\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-action-btn\"},/*#__PURE__*/React.createElement(\"p\",{className:\"card-link-text text-success\"},t(\"default_card\")))));}):/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-item\"},/*#__PURE__*/React.createElement(Link,{to:\"cards\"},/*#__PURE__*/React.createElement(\"div\",{className:\"add-account-item\"},/*#__PURE__*/React.createElement(Image,{className:\"add-account-icon\",src:window.location.origin+\"/assets/images/icons/new/add-card.svg\"}),/*#__PURE__*/React.createElement(\"h5\",{className:\"text-muted\"},\"Add Card\")))))):null,configuration.get(\"configData.is_wallet_payment_enabled\")==1?/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"WALLET\"},props.wallet.loading?\"\":/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wallet-balence-amount\"},/*#__PURE__*/React.createElement(\"h4\",null,t(\"available\")),/*#__PURE__*/React.createElement(\"p\",null,props.wallet.data.user_wallet.remaining_formatted)),props.subscriptionData.amount>props.wallet.data.user_wallet.remaining?/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"p\",{className:\"conv-desc desc\"},t(\"low_wallet_balance_tips_payment_para\")),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},/*#__PURE__*/React.createElement(Link,{to:\"/wallet\",className:\"withdraw-money-btn\"},t(\"add_wallet_amount\")))):null)):null))))))),/*#__PURE__*/React.createElement(Modal.Footer,null,paymentType===\"PAYPAL\"&&props.subscriptionData.amount!=0?/*#__PURE__*/React.createElement(PaypalExpressBtn,{env:env,client:client,currency:currency,total:props.subscriptionData.amount,onError:paypalOnError,onSuccess:paypalOnSuccess,onCancel:paypalOnCancel}):null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-danger\",\"data-dismiss\":\"modal\",onClick:props.closePaymentModal},\"Cancel\"),paymentType!==\"PAYPAL\"?/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-success\",\"data-dismiss\":\"modal\",onClick:handleSubmit,disabled:props.subPayStripe.buttonDisable},props.subPayStripe.loadingButtonContent!==null?props.subPayStripe.loadingButtonContent:t(\"pay_now\")):null)):null));};var mapStateToPros=function mapStateToPros(state){return{subPayStripe:state.subscriptions.subPayStripe,wallet:state.wallet.walletData,cards:state.cards.cardDetails};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(PaymentModal));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/PaymentModal.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","Tab","Nav","Row","Col","connect","subscriptionPaymentStripeStart","subscriptionPaymentPaypalStart","subscriptionPaymentCCBillStart","subscriptionPaymentWalletStart","subscriptionPaymentCoinPaymentStart","fetchCardDetailsStart","fetchWalletDetailsStart","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","configuration","Link","translate","t","PaymentModal","props","localStorage","getItem","paymentType","setPaymentType","showPayPal","payPal","dispatch","env","get","currency","client","sandbox","production","choosePaymentOption","event","handleSubmit","preventDefault","user_unique_id","plan_type","subscriptionData","is_free","paypalOnSuccess","payment","console","log","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","subscrptionPayment","closePaymentModal","amount_formatted","cards","loading","length","map","card","is_default","last_four","card_type","window","location","origin","wallet","user_wallet","remaining_formatted","amount","remaining","subPayStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","subscriptions","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Button,\n  Image,\n  Modal,\n  Tab,\n  Nav,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  subscriptionPaymentStripeStart,\n  subscriptionPaymentPaypalStart,\n  subscriptionPaymentCCBillStart,\n  subscriptionPaymentWalletStart,\n  subscriptionPaymentCoinPaymentStart,\n} from \"../../store/actions/SubscriptionAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport configuration from \"react-global-configuration\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PaymentModal = (props) => {\n  const [paymentType, setPaymentType] = useState(\n    localStorage.getItem(\"default_payment_method\")\n  );\n\n  const [showPayPal, payPal] = useState(false);\n\n  useEffect(() => {\n    props.dispatch(fetchCardDetailsStart());\n    props.dispatch(fetchWalletDetailsStart());\n  }, []);\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  const choosePaymentOption = (event) => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        subscriptionPaymentStripeStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n          is_free: props.subscriptionData.is_free,\n        })\n      );\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        subscriptionPaymentWalletStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n          is_free: props.subscriptionData.is_free,\n        })\n      );\n\n    if (paymentType === \"CCBILL\")\n      props.dispatch(\n        subscriptionPaymentCCBillStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n        })\n      );\n    if (paymentType === \"coinpayment\")\n      props.dispatch(\n        subscriptionPaymentCoinPaymentStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n        })\n      );\n    // props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(\n        subscriptionPaymentPaypalStart({\n          payment_id: payment.paymentID,\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n          is_free: props.subscriptionData.is_free,\n        })\n      );\n    }, 1000);\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  return (\n    <>\n      <Modal\n        show={props.subscrptionPayment}\n        onHide={props.closePaymentModal}\n        centered\n        size=\"lg\"\n      >\n        {props.subscrptionPayment === true ? (\n          <>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"subscribe\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"subscription-tip-ppv-tab\">\n              <Tab.Container\n                id=\"left-tabs-example\"\n                defaultActiveKey={paymentType}\n              >\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      {configuration.get(\"configData.is_stripe_enabled\") == 1 &&\n                      configuration.get(\"configData.stripe_publishable_key\") !==\n                        \"\" &&\n                      configuration.get(\"configData.stripe_secret_key\") !==\n                        \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"CARD\")}\n                            eventKey=\"CARD\"\n                          >\n                            {t(\"card_stripe\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\"configData.is_paypal_enabled\") == 1 &&\n                      configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"PAYPAL\")}\n                            eventKey=\"PAYPAL\"\n                          >\n                            {t(\"paypal\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\"configData.is_ccbill_enabled\") == 1 &&\n                      configuration.get(\"configData.flex_form_id\") !== \"\" &&\n                      configuration.get(\"configData.salt_key\") !== \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"CCBILL\")}\n                            eventKey=\"CCBILL\"\n                          >\n                            {t(\"ccbill\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\n                        \"configData.is_wallet_payment_enabled\"\n                      ) == 1 ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"WALLET\")}\n                            eventKey=\"WALLET\"\n                          >\n                            {t(\"wallet\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <div className=\"card-stripe-box\">\n                      <Form onSubmit={handleSubmit}>\n                        <Form.Group\n                          className=\"mb-3\"\n                          controlId=\"exampleForm.ControlInput1\"\n                        >\n                          <Form.Control\n                            type=\"text\"\n                            placeholder={t(\"amount\")}\n                            value={props.subscriptionData.amount_formatted}\n                            disabled\n                          />\n                        </Form.Group>\n                        <Tab.Content>\n                          {configuration.get(\"configData.is_stripe_enabled\") ==\n                            1 &&\n                          configuration.get(\n                            \"configData.stripe_publishable_key\"\n                          ) !== \"\" &&\n                          configuration.get(\"configData.stripe_secret_key\") !==\n                            \"\" ? (\n                            <Tab.Pane eventKey=\"CARD\">\n                              <div className=\"card-stripe-sec\">\n                                {props.cards.loading ? (\n                                  \"\"\n                                ) : props.cards.data.cards.length > 0 ? (\n                                  props.cards.data.cards.map(\n                                    (card) =>\n                                      card.is_default == 1 && (\n                                        <div className=\"card-stripe-list-box\">\n                                          <h5 className=\"mb-3\">\n                                            XXXX XXXX XXXX {card.last_four}\n                                          </h5>\n                                          <h5 className=\"text-muted\">\n                                            {card.card_type}\n                                          </h5>\n                                          <div className=\"card-stripe-bottom\">\n                                            <div className=\"card-stripe-action-btn\">\n                                              <p className=\"card-link-text text-success\">\n                                                {t(\"default_card\")}\n                                              </p>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )\n                                  )\n                                ) : (\n                                  <div className=\"card-stripe-item\">\n                                    <Link to=\"cards\">\n                                      <div className=\"add-account-item\">\n                                        <Image\n                                          className=\"add-account-icon\"\n                                          src={\n                                            window.location.origin +\n                                            \"/assets/images/icons/new/add-card.svg\"\n                                          }\n                                        />\n                                        <h5 className=\"text-muted\">Add Card</h5>\n                                      </div>\n                                    </Link>\n                                  </div>\n                                )}\n                              </div>\n                            </Tab.Pane>\n                          ) : null}\n\n                          {configuration.get(\n                            \"configData.is_wallet_payment_enabled\"\n                          ) == 1 ? (\n                            <Tab.Pane eventKey=\"WALLET\">\n                              {props.wallet.loading ? (\n                                \"\"\n                              ) : (\n                                <div className=\"card-stripe-box\">\n                                  <div className=\"wallet-balence-amount\">\n                                    <h4>{t(\"available\")}</h4>\n                                    <p>\n                                      {\n                                        props.wallet.data.user_wallet\n                                          .remaining_formatted\n                                      }\n                                    </p>\n                                  </div>\n                                  {props.subscriptionData.amount >\n                                  props.wallet.data.user_wallet.remaining ? (\n                                    <div className=\"\">\n                                      <p className=\"conv-desc desc\">\n                                        {t(\n                                          \"low_wallet_balance_tips_payment_para\"\n                                        )}\n                                      </p>\n                                      <div className=\"d-flex\">\n                                        <Link\n                                          to=\"/wallet\"\n                                          className=\"withdraw-money-btn\"\n                                        >\n                                          {t(\"add_wallet_amount\")}\n                                        </Link>\n                                      </div>\n                                    </div>\n                                  ) : null}\n                                </div>\n                              )}\n                            </Tab.Pane>\n                          ) : null}\n                        </Tab.Content>\n                      </Form>\n                    </div>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Modal.Body>\n            <Modal.Footer>\n              {paymentType === \"PAYPAL\" &&\n              props.subscriptionData.amount != 0 ? (\n                <PaypalExpressBtn\n                  env={env}\n                  client={client}\n                  currency={currency}\n                  total={props.subscriptionData.amount}\n                  onError={paypalOnError}\n                  onSuccess={paypalOnSuccess}\n                  onCancel={paypalOnCancel}\n                />\n              ) : null}\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closePaymentModal}\n              >\n                Cancel\n              </Button>\n              {paymentType !== \"PAYPAL\" ? (\n                <Button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  data-dismiss=\"modal\"\n                  onClick={handleSubmit}\n                  disabled={props.subPayStripe.buttonDisable}\n                >\n                  {props.subPayStripe.loadingButtonContent !== null\n                    ? props.subPayStripe.loadingButtonContent\n                    : t(\"pay_now\")}\n                </Button>\n              ) : null}\n            </Modal.Footer>\n          </>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  subPayStripe: state.subscriptions.subPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(PaymentModal));\n"]},"metadata":{},"sourceType":"module"}