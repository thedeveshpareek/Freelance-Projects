{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/Profile/SessionManagement.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Row, Col, Media } from \"react-bootstrap\";\nimport { translate, t } from \"react-multi-lang\";\nimport { fetchSesssionManagementStart, deleteSingleLoginSessionStart, deleteAllLoginSessionStart } from \"../../../store/actions/SessionManagementAction\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\n\nconst SessionManagement = props => {\n  const [activeDeletId, setActiveDeletId] = useState(null);\n  const [deletedSessions, setDeletedSessions] = useState([]);\n  const [deleteAllSessions, setDeleteAllSessions] = useState({\n    loading: false,\n    status: false\n  });\n  useEffect(() => {\n    props.dispatch(fetchSesssionManagementStart());\n  }, []);\n\n  const handleSingleSessionDelete = id => {\n    setActiveDeletId(id);\n    props.dispatch(deleteSingleLoginSessionStart({\n      user_login_session_id: id\n    }));\n  };\n\n  useEffect(() => {\n    if (Object.keys(props.sessionDelete.data).length > 0) {\n      setDeletedSessions([...deletedSessions, activeDeletId]);\n      setActiveDeletId(null);\n\n      if (deleteAllSessions.loading) {\n        setDeleteAllSessions({\n          loading: false,\n          status: true\n        });\n      }\n    }\n  }, [props.sessionDelete.data]);\n\n  const handleSessionDeleteAll = () => {\n    setDeleteAllSessions({ ...deleteAllSessions,\n      loading: true\n    });\n    props.dispatch(deleteAllLoginSessionStart());\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.sessionsList.loading ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"session-management\",\n    className: props.activeSec === \"session-management\" ? \"tab-pane fade in active\" : \"tab-pane fade\",\n    id: \"session-management\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"change-password-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, t(\"session_management\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, props.sessionsList.data.total > 0 && !deleteAllSessions.status ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-all-session-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-all-session-btn\",\n    disabled: deleteAllSessions.loading,\n    onClick: () => handleSessionDeleteAll(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 31\n    }\n  }, props.sessionDelete.loadingButtonContent != null && deleteAllSessions.loading ? props.sessionDelete.loadingButtonContent : `${t(\"close_all_sessions\")}`)))), props.sessionsList.data.session.filter(sessions => !deletedSessions.includes(sessions.user_login_session_id)).map(sessions => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-left-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 35\n    }\n  }, sessions.device_model, \",\", \" \", sessions.device_type), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"session-list-info list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, sessions.ip_address)), sessions.is_current_session == 1 && /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"active-session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-right-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 35\n    }\n  }, sessions.last_session), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"logout-btn\",\n    disabled: activeDeletId === sessions.user_login_session_id,\n    onClick: () => handleSingleSessionDelete(sessions.user_login_session_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 35\n    }\n  }, props.sessionDelete.loadingButtonContent != null && activeDeletId === sessions.user_login_session_id ? props.sessionDelete.loadingButtonContent : `${t(\"logout\")}`)))))) : /*#__PURE__*/React.createElement(NoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }))))))));\n};\n\nconst mapStateToPros = state => ({\n  sessionsList: state.sessions.sessionList,\n  sessionDelete: state.sessions.sessionDelete\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(SessionManagement));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/Profile/SessionManagement.jsx"],"names":["React","useState","useEffect","Link","connect","Form","Button","Row","Col","Media","translate","t","fetchSesssionManagementStart","deleteSingleLoginSessionStart","deleteAllLoginSessionStart","NoDataFound","SessionManagement","props","activeDeletId","setActiveDeletId","deletedSessions","setDeletedSessions","deleteAllSessions","setDeleteAllSessions","loading","status","dispatch","handleSingleSessionDelete","id","user_login_session_id","Object","keys","sessionDelete","data","length","handleSessionDeleteAll","sessionsList","activeSec","total","loadingButtonContent","session","filter","sessions","includes","map","device_model","device_type","ip_address","is_current_session","last_session","mapStateToPros","state","sessionList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Row, Col, Media } from \"react-bootstrap\";\nimport { translate, t } from \"react-multi-lang\";\nimport {\n  fetchSesssionManagementStart,\n  deleteSingleLoginSessionStart,\n  deleteAllLoginSessionStart,\n} from \"../../../store/actions/SessionManagementAction\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\n\nconst SessionManagement = (props) => {\n  const [activeDeletId, setActiveDeletId] = useState(null);\n\n  const [deletedSessions, setDeletedSessions] = useState([]);\n\n  const [deleteAllSessions, setDeleteAllSessions] = useState({\n    loading: false,\n    status: false,\n  });\n\n  useEffect(() => {\n    props.dispatch(fetchSesssionManagementStart());\n  }, []);\n\n  const handleSingleSessionDelete = (id) => {\n    setActiveDeletId(id);\n    props.dispatch(\n      deleteSingleLoginSessionStart({ user_login_session_id: id })\n    );\n  };\n\n  useEffect(() => {\n    if (Object.keys(props.sessionDelete.data).length > 0) {\n      setDeletedSessions([...deletedSessions, activeDeletId]);\n      setActiveDeletId(null);\n      if (deleteAllSessions.loading) {\n        setDeleteAllSessions({\n          loading: false,\n          status: true,\n        });\n      }\n    }\n  }, [props.sessionDelete.data]);\n\n  const handleSessionDeleteAll = () => {\n    setDeleteAllSessions({\n      ...deleteAllSessions,\n      loading: true,\n    });\n    props.dispatch(deleteAllLoginSessionStart());\n  };\n\n  return (\n    <>\n      {props.sessionsList.loading ? null : (\n        <>\n          <div\n            role=\"session-management\"\n            className={\n              props.activeSec === \"session-management\"\n                ? \"tab-pane fade in active\"\n                : \"tab-pane fade\"\n            }\n            id=\"session-management\"\n          >\n            <div className=\"change-password-sec\">\n              <div className=\"card-header bg-transparent\">\n                <h4>{t(\"session_management\")}</h4>\n              </div>\n              <div className=\"card-body\">\n                <Row>\n                  <Col sm={12} md={12}>\n                    {props.sessionsList.data.total > 0 &&\n                    !deleteAllSessions.status ? (\n                      <>\n                        <Row>\n                          <Col md={12}>\n                            <div className=\"close-all-session-sec\">\n                              <button\n                                className=\"close-all-session-btn\"\n                                disabled={deleteAllSessions.loading}\n                                onClick={() => handleSessionDeleteAll()}\n                              >\n                                {props.sessionDelete.loadingButtonContent != null && deleteAllSessions.loading\n                                  ? props.sessionDelete.loadingButtonContent\n                                  : `${t(\"close_all_sessions\")}`}\n                              </button>\n                            </div>\n                          </Col>\n                        </Row>\n                        {props.sessionsList.data.session\n                          .filter(\n                            (sessions) =>\n                              !deletedSessions.includes(\n                                sessions.user_login_session_id\n                              )\n                          )\n                          .map((sessions) => (\n                            <>\n                              <div className=\"session-card\">\n                                <div className=\"session-left-sec\">\n                                  <h4>\n                                    {sessions.device_model},{\" \"}\n                                    {sessions.device_type}\n                                  </h4>\n                                  <ul className=\"session-list-info list-unstyled\">\n                                    <Media as=\"li\">{sessions.ip_address}</Media>\n                                    {/* <Media as=\"li\">India</Media> */}\n                                  </ul>\n                                  {sessions.is_current_session == 1 && (\n                                    <h6 className=\"active-session\">Active</h6>\n                                  )}\n                                </div>\n                                <div className=\"session-right-sec\">\n                                  <p>{sessions.last_session}</p>\n                                  <button\n                                    className=\"logout-btn\"\n                                    disabled={\n                                      activeDeletId ===\n                                      sessions.user_login_session_id\n                                    }\n                                    onClick={() =>\n                                      handleSingleSessionDelete(\n                                        sessions.user_login_session_id\n                                      )\n                                    }\n                                  >\n                                    {props.sessionDelete.loadingButtonContent != null && activeDeletId ===\n                                    sessions.user_login_session_id\n                                      ? props.sessionDelete.loadingButtonContent\n                                      : `${t(\"logout\")}`}\n                                  </button>\n                                </div>\n                              </div>\n                            </>\n                          ))}\n                      </>\n                    ) : (\n                      <NoDataFound></NoDataFound>\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  sessionsList: state.sessions.sessionList,\n  sessionDelete: state.sessions.sessionDelete,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(SessionManagement));\n"]},"metadata":{},"sourceType":"module"}