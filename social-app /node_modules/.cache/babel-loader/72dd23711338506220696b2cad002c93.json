{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/VideoCallMakePaymentModel.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport { payByPayPalStart, payByStripeStart, videoCallPayByWalletStart } from \"../../store/actions/PrivateCallAction\";\nimport { Link } from \"react-router-dom\";\n\nconst VideoCallMakePaymentModel = props => {\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  const [showPayPal, payPal] = useState(false);\n  useEffect(() => {\n    if (props.videoCallPayment === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.videoCallPayment]);\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n\n  const choosePaymentOption = event => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (paymentType === \"CARD\") props.dispatch(payByStripeStart({\n      video_call_request_id: props.video_call_request_id\n    }));\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n    if (paymentType === \"WALLET\") props.dispatch(videoCallPayByWalletStart({\n      video_call_request_id: props.video_call_request_id\n    })); // props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = payment => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(payByPayPalStart({\n        payment_id: payment.paymentID,\n        video_call_request_id: props.video_call_request_id\n      }));\n    }, 1000);\n  };\n\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(\"Payment cancelled please try again..\");\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  console.log(props.callDetails);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: props.videoCallPayment,\n    onHide: props.closePaymentModal,\n    centered: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, props.videoCallPayment === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, t(\"video_call_payment\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"subscription-tip-ppv-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: paymentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CARD\"),\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, t('card_stripe'))) : null, configuration.get(\"configData.is_paypal_enabled\") == 1 && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"PAYPAL\"),\n    eventKey: \"PAYPAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, t('paypal'))) : null, configuration.get(\"configData.is_ccbill_enabled\") == 1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CCBILL\"),\n    eventKey: \"CCBILL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, t('ccbill'))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"WALLET\"),\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, t('wallet'))) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"amount\"),\n    value: props.callDetails.amount_formatted,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 31\n    }\n  }, props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ? props.cards.data.cards.map(card => card.is_default == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-list-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 39\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 39\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-action-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-link-text text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 47\n    }\n  }, t(\"default_card\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"add-account-icon\",\n    src: window.location.origin + \"/assets/images/icons/new/add-card.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 43\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 43\n    }\n  }, \"Add Card\")))))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, props.wallet.loading ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-balence-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 39\n    }\n  }, t('available')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 39\n    }\n  }, props.wallet.data.user_wallet.remaining_formatted)), props.callDetails.amount > props.wallet.data.user_wallet.remaining ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conv-desc desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 41\n    }\n  }, t('low_wallet_balance_tips_payment_para')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wallet\",\n    className: \"withdraw-money-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 43\n    }\n  }, t('add_wallet_amount')))) : null)) : null))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, paymentType === \"PAYPAL\" && props.callDetails.amount != 0 ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: props.callDetails.amount,\n    onError: paypalOnError,\n    onSuccess: paypalOnSuccess,\n    onCancel: paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closePaymentModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, t(\"cancel\")), paymentType !== \"PAYPAL\" ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    onClick: handleSubmit,\n    disabled: props.subPayStripe.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, props.subPayStripe.loadingButtonContent !== null ? props.subPayStripe.loadingButtonContent : props.callDetails.amount > 0 ? t(\"pay_now\") : t(\"confirm_now\")) : null)) : null));\n};\n\nconst mapStateToPros = state => ({\n  subPayStripe: state.subscriptions.subPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(VideoCallMakePaymentModel));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/VideoCallMakePaymentModel.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","Tab","Nav","Row","Col","connect","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchCardDetailsStart","fetchWalletDetailsStart","configuration","translate","t","payByPayPalStart","payByStripeStart","videoCallPayByWalletStart","Link","VideoCallMakePaymentModel","props","paymentType","setPaymentType","localStorage","getItem","showPayPal","payPal","videoCallPayment","dispatch","env","get","currency","client","sandbox","production","choosePaymentOption","event","handleSubmit","preventDefault","video_call_request_id","paypalOnSuccess","payment","console","log","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","callDetails","closePaymentModal","amount_formatted","cards","loading","length","map","card","is_default","last_four","card_type","window","location","origin","wallet","user_wallet","remaining_formatted","amount","remaining","subPayStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","subscriptions","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchCardDetailsStart,\n} from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport {\n  payByPayPalStart,\n  payByStripeStart,\n  videoCallPayByWalletStart,\n} from \"../../store/actions/PrivateCallAction\";\nimport { Link } from \"react-router-dom\";\n\nconst VideoCallMakePaymentModel = (props) => {\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n\n  const [showPayPal, payPal] = useState(false);\n\n  useEffect(() => {\n    if (props.videoCallPayment === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.videoCallPayment]);\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  const choosePaymentOption = (event) => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        payByStripeStart({\n          video_call_request_id: props.video_call_request_id,\n        })\n      );\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        videoCallPayByWalletStart({\n          video_call_request_id: props.video_call_request_id,\n        })\n      );\n\n    // props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(\n        payByPayPalStart({\n          payment_id: payment.paymentID,\n          video_call_request_id: props.video_call_request_id,\n        })\n      );\n    }, 1000);\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n  console.log(props.callDetails);\n  return (\n    <>\n      <Modal show={props.videoCallPayment}\n        onHide={props.closePaymentModal}\n        centered\n        size=\"lg\"\n      >\n        {props.videoCallPayment === true ? (\n        <>\n          <Modal.Header closeButton>\n              <Modal.Title>{t(\"video_call_payment\")}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"subscription-tip-ppv-tab\">\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={paymentType}>\n              <Row>\n                <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      {configuration.get(\"configData.is_stripe_enabled\") ==\n                        1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                        <Nav.Item>\n                            <Nav.Link onClick={() => setPaymentType(\"CARD\")} eventKey=\"CARD\">{t('card_stripe')}</Nav.Link>\n                        </Nav.Item>\n                        ) : null}\n                        {configuration.get(\"configData.is_paypal_enabled\") ==\n                          1  && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                          <Nav.Item>\n                              <Nav.Link onClick={() => setPaymentType(\"PAYPAL\")} eventKey=\"PAYPAL\">{t('paypal')}</Nav.Link>\n                          </Nav.Item>\n                        ) : null}\n                        {configuration.get(\"configData.is_ccbill_enabled\") ==\n                          1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? (\n                        <Nav.Item>\n                            <Nav.Link onClick={() => setPaymentType(\"CCBILL\")} eventKey=\"CCBILL\">{t('ccbill')}</Nav.Link>\n                        </Nav.Item>\n                        ) : null}\n                        {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                          1 ? (\n                        <Nav.Item>\n                            <Nav.Link onClick={() => setPaymentType(\"WALLET\")} eventKey=\"WALLET\">{t('wallet')}</Nav.Link>\n                        </Nav.Item>\n                        ) : null}\n                    </Nav>\n                </Col>\n                <Col sm={9}>\n                  <div className=\"card-stripe-box\">\n                    <Form onSubmit={handleSubmit}>\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control type=\"text\" \n                          placeholder={t(\"amount\")} \n                          value={props.callDetails.amount_formatted}\n                          disabled/>\n                      </Form.Group>\n                      <Tab.Content>\n                      \n                        {configuration.get(\"configData.is_stripe_enabled\") ==\n                          1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                            <Tab.Pane eventKey=\"CARD\">\n                              <div className=\"card-stripe-sec\">\n                                {props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ?\n                                props.cards.data.cards.map((card) => ( (\n                                  card.is_default == 1 && (\n                                  <div className=\"card-stripe-list-box\">\n                                      <h5 className=\"mb-3\">XXXX XXXX XXXX {card.last_four}</h5>\n                                      <h5 className=\"text-muted\">{card.card_type}</h5>\n                                      <div className=\"card-stripe-bottom\">\n                                          <div className=\"card-stripe-action-btn\">\n                                              <p className=\"card-link-text text-success\">{t(\"default_card\")}</p>\n                                          </div>\n                                      </div>\n                                    </div> )\n                                ))): (\n                                  <div className=\"card-stripe-item\">\n                                    <Link to=\"cards\">\n                                      <div className=\"add-account-item\">\n                                          <Image\n                                              className=\"add-account-icon\"\n                                              src={\n                                                  window.location.origin + \"/assets/images/icons/new/add-card.svg\"\n                                              }\n                                          />\n                                          <h5 className=\"text-muted\">Add Card</h5>\n                                      </div>\n                                    </Link>\n                                  </div>\n                                )}\n                              </div>\n                            </Tab.Pane>\n                          ) : null}\n\n                          {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                            1 ? (\n                            <Tab.Pane eventKey=\"WALLET\">\n                              {props.wallet.loading ? \"\" : (\n                                <div className=\"card-stripe-box\">\n                                  <div className=\"wallet-balence-amount\">\n                                      <h4>{t('available')}</h4>\n                                      <p>{props.wallet.data.user_wallet.remaining_formatted}</p>\n                                  </div>\n                                  {props.callDetails.amount > props.wallet.data.user_wallet.remaining ? (\n                                    <div className=\"\">\n                                        <p className=\"conv-desc desc\">{t('low_wallet_balance_tips_payment_para')}</p>\n                                        <div className=\"d-flex\">\n                                          <Link to=\"/wallet\" className=\"withdraw-money-btn\">{t('add_wallet_amount')}</Link>\n                                        </div>\n                                    </div>\n                                  ) : null}\n                                </div>\n                              )}\n                            </Tab.Pane>\n                          ) : null}\n\n                      </Tab.Content>\n                    </Form>\n                  </div>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </Modal.Body>\n          <Modal.Footer>\n            {paymentType === \"PAYPAL\" && props.callDetails.amount != 0 ? (\n              <PaypalExpressBtn\n                env={env}\n                client={client}\n                currency={currency}\n                total={props.callDetails.amount}\n                onError={paypalOnError}\n                onSuccess={paypalOnSuccess}\n                onCancel={paypalOnCancel}\n              />\n            ) : null}\n            <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closePaymentModal}\n            >\n                {t(\"cancel\")}\n            </Button>\n            {paymentType !== \"PAYPAL\" ? (\n              <Button\n                type=\"button\"\n                className=\"btn btn-success\"\n                data-dismiss=\"modal\"\n                onClick={handleSubmit}\n                disabled={props.subPayStripe.buttonDisable}\n              >\n                {props.subPayStripe.loadingButtonContent !== null\n                    ? props.subPayStripe.loadingButtonContent\n                    : props.callDetails.amount > 0 ? t(\"pay_now\") : t(\"confirm_now\")}\n              </Button>\n            ) : null}\n          </Modal.Footer>\n        </>\n        ) : null}\n    </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  subPayStripe: state.subscriptions.subPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(VideoCallMakePaymentModel));\n"]},"metadata":{},"sourceType":"module"}