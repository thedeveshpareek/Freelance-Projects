{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Post/Explore/Explore.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Image, Container, Media } from \"react-bootstrap\";\nimport \"./Explore.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport { fetchExploreStart } from \"../../../store/actions/PostAction\";\nimport ExplorePostCard from \"./ExplorePostCard\";\nimport { translate, t } from \"react-multi-lang\";\nimport Map, { GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { apiConstants } from \"../../Constant/constants\";\nimport ExploreLoader from \"../../Loader/ExploreLoader\";\n\nconst Explore = props => {\n  useEffect(() => {\n    props.dispatch(fetchExploreStart());\n  }, []);\n  let autocomplete;\n\n  const renderAutoComplete = () => {\n    const {\n      google\n    } = props;\n\n    if (!google) {\n      console.log(\"asdfsadfasdfno\");\n      return;\n    }\n\n    autocomplete = new google.maps.places.Autocomplete(autocomplete, {\n      types: [\"geocode\"]\n    });\n    autocomplete.setFields([\"address_component\", \"geometry\", \"name\"]);\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n      console.log(\"Place\", place);\n      if (!place.geometry) return;\n      let full_address = \"\";\n      place.address_components.map(address => full_address = full_address == \"\" ? address.long_name : full_address + \",\" + address.long_name);\n      props.dispatch(fetchExploreStart({\n        latitude: place.geometry.location.lat(),\n        longitude: place.geometry.location.lng()\n      }));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-post-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmarkes-list bookmarks-right-side resp-sapce-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pull-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"bookmarkes-list notify-title\",\n    to: `/home`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/back.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }), t(\"explore\"))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"width-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group explore-location-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"edit-address\",\n    type: \"text\",\n    placeholder: t(\"location\"),\n    onFocus: renderAutoComplete,\n    ref: ref => autocomplete = ref,\n    name: \"address\",\n    className: \"form-control edit-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, props.explorePosts.loading ? /*#__PURE__*/React.createElement(ExploreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }) : props.explorePosts.data.posts && props.explorePosts.data.posts.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-streaming-post-box explore-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, props.explorePosts.data.posts.map(post => post.postFiles.file_type == \"image\" ? /*#__PURE__*/React.createElement(ExplorePostCard, {\n    post: post,\n    key: post.post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }) : null)) : /*#__PURE__*/React.createElement(NoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst mapStateToPros = state => ({\n  explorePosts: state.post.explorePosts\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nconst connector = connect(mapStateToPros, mapDispatchToProps)(translate(Explore));\nexport default GoogleApiWrapper({\n  apiKey: apiConstants.google_api_key\n})(connector);","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Post/Explore/Explore.jsx"],"names":["React","useState","useEffect","Row","Col","Image","Container","Media","Link","connect","NoDataFound","fetchExploreStart","ExplorePostCard","translate","t","Map","GoogleApiWrapper","Marker","apiConstants","ExploreLoader","Explore","props","dispatch","autocomplete","renderAutoComplete","google","console","log","maps","places","Autocomplete","types","setFields","addListener","place","getPlace","geometry","full_address","address_components","map","address","long_name","latitude","location","lat","longitude","lng","window","origin","ref","explorePosts","loading","data","posts","length","post","postFiles","file_type","post_id","mapStateToPros","state","mapDispatchToProps","connector","apiKey","google_api_key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Image, Container, Media } from \"react-bootstrap\";\nimport \"./Explore.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport { fetchExploreStart } from \"../../../store/actions/PostAction\";\nimport ExplorePostCard from \"./ExplorePostCard\";\nimport { translate, t } from \"react-multi-lang\";\nimport Map, { GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { apiConstants } from \"../../Constant/constants\";\nimport ExploreLoader from \"../../Loader/ExploreLoader\";\n\nconst Explore = (props) => {\n  useEffect(() => {\n    props.dispatch(fetchExploreStart());\n  }, []);\n\n  let autocomplete;\n\n  const renderAutoComplete = () => {\n    const { google } = props;\n    if (!google) {\n      console.log(\"asdfsadfasdfno\");\n      return;\n    }\n\n    autocomplete = new google.maps.places.Autocomplete(autocomplete, {\n      types: [\"geocode\"],\n    });\n\n    autocomplete.setFields([\"address_component\", \"geometry\", \"name\"]);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      const place = autocomplete.getPlace();\n      console.log(\"Place\", place);\n      if (!place.geometry) return;\n      let full_address = \"\";\n      place.address_components.map(\n        (address) =>\n          (full_address =\n            full_address == \"\"\n              ? address.long_name\n              : full_address + \",\" + address.long_name)\n      );\n\n      props.dispatch(\n        fetchExploreStart({\n          latitude: place.geometry.location.lat(),\n          longitude: place.geometry.location.lng(),\n        })\n      );\n    });\n  };\n\n  return (\n    <>\n      <div className=\"live-streaming-post-sec\">\n        {/* <Container> */}\n        <Row className=\"no-gutters\">\n          <div className=\"profile-post-area\">\n            <div className=\"bookmarkes-list bookmarks-right-side resp-sapce-center\">\n              <div className=\"pull-left\">\n                <Link className=\"bookmarkes-list notify-title\" to={`/home`}>\n                  <Image\n                    src={\n                      window.location.origin + \"/assets/images/icons/back.svg\"\n                    }\n                    className=\"svg-clone\"\n                  />\n                  {t(\"explore\")}\n                </Link>\n              </div>\n            </div>\n          </div>\n          <Row className=\"width-full\">\n            <Col md={9}></Col>\n            <Col md={3}>\n              <div className=\"form-group explore-location-dropdown\">\n                <input\n                  id=\"edit-address\"\n                  type=\"text\"\n                  placeholder={t(\"location\")}\n                  onFocus={renderAutoComplete}\n                  ref={(ref) => (autocomplete = ref)}\n                  name=\"address\"\n                  className=\"form-control edit-reset\"\n                ></input>\n              </div>\n            </Col>\n          </Row>\n          <Col sm=\"12\" md=\"12\">\n            {props.explorePosts.loading ? (\n              <ExploreLoader />\n            ) : props.explorePosts.data.posts &&\n              props.explorePosts.data.posts.length > 0 ? (\n              <div className=\"live-streaming-post-box explore-box\">\n                {props.explorePosts.data.posts.map((post) =>\n                  post.postFiles.file_type == \"image\" ? (\n                    <ExplorePostCard post={post} key={post.post_id} />\n                  ) : null\n                )}\n              </div>\n            ) : (\n              <NoDataFound></NoDataFound>\n            )}\n          </Col>\n        </Row>\n        {/* </Container> */}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  explorePosts: state.post.explorePosts,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nconst connector = connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(Explore));\n\nexport default GoogleApiWrapper({\n  apiKey: apiConstants.google_api_key,\n})(connector);\n"]},"metadata":{},"sourceType":"module"}