{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Form,Modal,InputGroup,FormControl,Col,Row,Button}from\"react-bootstrap\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import api from\"../../Environment\";import{connect}from\"react-redux\";import{createNotification}from\"react-redux-notify\";import{getErrorNotificationMessage,getSuccessNotificationMessage}from\"./NotificationMessage\";import{fetchCardDetailsStart}from\"../../store/actions/CardsAction\";import{translate,t}from\"react-multi-lang\";var PaymentAddCardModal=function PaymentAddCardModal(props){var stripe=useStripe();var elements=useElements();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),addCardButtonDisable=_useState2[0],setAddCardButtonDisable=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),addCardLoadingContent=_useState4[0],setAddCardLoadingContent=_useState4[1];var addCard=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev){var notificationMessage;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ev.preventDefault();setAddCardButtonDisable(true);setAddCardLoadingContent(\"Loading... Please wait\");if(!stripe){_context.next=8;break;}_context.next=6;return stripe.createPaymentMethod({type:\"card\",card:elements.getElement(CardElement)}).then(function(payload){// console.log(\"Payload\", payload);\nvar inputData={card_token:payload.paymentMethod.id};api.postMethod(\"cards_add\",inputData).then(function(response){if(response.data.success){var notificationMessage=getSuccessNotificationMessage(response.data.message);props.dispatch(createNotification(notificationMessage));props.dispatch(fetchCardDetailsStart());setAddCardButtonDisable(false);setAddCardLoadingContent(null);}else{var _notificationMessage=getErrorNotificationMessage(response.data.error);props.dispatch(createNotification(_notificationMessage));}props.closePaymentAddCardModal();}).catch(function(error){console.log(\"Error\",error);setAddCardButtonDisable(false);setAddCardLoadingContent(null);var notificationMessage=getErrorNotificationMessage(\"Error Please try again\");props.dispatch(createNotification(notificationMessage));});}).catch(function(error){console.log(\"Eroor\",error);setAddCardButtonDisable(false);setAddCardLoadingContent(null);var notificationMessage=getErrorNotificationMessage(\"Please check your card details and try again..\");props.dispatch(createNotification(notificationMessage));});case 6:_context.next=12;break;case 8:setAddCardButtonDisable(false);setAddCardLoadingContent(null);notificationMessage=getErrorNotificationMessage(\"Stripe is not configured\");props.dispatch(createNotification(notificationMessage));case 12:case\"end\":return _context.stop();}}},_callee);}));return function addCard(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-center payment-add-card-modal\",size:\"md\",centered:true,show:props.paymentAddCard,onHide:props.closePaymentAddCardModal},props.paymentAddCard===true?/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"add_card\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:7},/*#__PURE__*/React.createElement(CardElement,null)))),/*#__PURE__*/React.createElement(Modal.Footer,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-danger width-btn\",\"data-dismiss\":\"modal\",onClick:props.closePaymentAddCardModal},t(\"cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",className:\"btn btn-success width-btn\",\"data-dismiss\":\"modal\",onClick:addCard,disabled:addCardButtonDisable},addCardLoadingContent!=null?addCardLoadingContent:t(\"add\")))):null));};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(null,mapDispatchToProps)(translate(PaymentAddCardModal));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/PaymentAddCardModal.jsx"],"names":["React","useState","useEffect","Link","Form","Modal","InputGroup","FormControl","Col","Row","Button","CardElement","useStripe","useElements","api","connect","createNotification","getErrorNotificationMessage","getSuccessNotificationMessage","fetchCardDetailsStart","translate","t","PaymentAddCardModal","props","stripe","elements","addCardButtonDisable","setAddCardButtonDisable","addCardLoadingContent","setAddCardLoadingContent","addCard","ev","preventDefault","createPaymentMethod","type","card","getElement","then","payload","inputData","card_token","paymentMethod","id","postMethod","response","data","success","notificationMessage","message","dispatch","error","closePaymentAddCardModal","catch","console","log","paymentAddCard","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Modal,\n  InputGroup,\n  FormControl,\n  Col,\n  Row,\n  Button,\n} from \"react-bootstrap\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport api from \"../../Environment\";\nimport { connect } from \"react-redux\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getErrorNotificationMessage,\n  getSuccessNotificationMessage,\n} from \"./NotificationMessage\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PaymentAddCardModal = (props) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [addCardButtonDisable, setAddCardButtonDisable] = useState(false);\n  const [addCardLoadingContent, setAddCardLoadingContent] = useState(null);\n\n  const addCard = async (ev) => {\n    ev.preventDefault();\n    setAddCardButtonDisable(true);\n    setAddCardLoadingContent(\"Loading... Please wait\");\n    if (stripe) {\n      await stripe\n        .createPaymentMethod({\n          type: \"card\",\n          card: elements.getElement(CardElement),\n        })\n        .then((payload) => {\n          // console.log(\"Payload\", payload);\n          const inputData = {\n            card_token: payload.paymentMethod.id,\n          };\n          api\n            .postMethod(\"cards_add\", inputData)\n            .then((response) => {\n              if (response.data.success) {\n                const notificationMessage = getSuccessNotificationMessage(\n                  response.data.message\n                );\n                props.dispatch(createNotification(notificationMessage));\n                props.dispatch(fetchCardDetailsStart());\n\n                setAddCardButtonDisable(false);\n                setAddCardLoadingContent(null);\n              } else {\n                const notificationMessage = getErrorNotificationMessage(\n                  response.data.error\n                );\n                props.dispatch(createNotification(notificationMessage));\n              }\n              props.closePaymentAddCardModal();\n            })\n            .catch((error) => {\n              console.log(\"Error\", error);\n              setAddCardButtonDisable(false);\n              setAddCardLoadingContent(null);\n              const notificationMessage = getErrorNotificationMessage(\n                \"Error Please try again\"\n              );\n              props.dispatch(createNotification(notificationMessage));\n            });\n        })\n        .catch((error) => {\n          console.log(\"Eroor\", error);\n          setAddCardButtonDisable(false);\n          setAddCardLoadingContent(null);\n          const notificationMessage = getErrorNotificationMessage(\n            \"Please check your card details and try again..\"\n          );\n          props.dispatch(createNotification(notificationMessage));\n        });\n    } else {\n      setAddCardButtonDisable(false);\n      setAddCardLoadingContent(null);\n      const notificationMessage = getErrorNotificationMessage(\n        \"Stripe is not configured\"\n      );\n      props.dispatch(createNotification(notificationMessage));\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"modal-dialog-center payment-add-card-modal\"\n        size=\"md\"\n        centered\n        show={props.paymentAddCard}\n        onHide={props.closePaymentAddCardModal}\n      >\n        {props.paymentAddCard === true ? \n        <Form>\n          <Modal.Header closeButton>\n            <Modal.Title>{t(\"add_card\")}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={12} md={7}>\n                <CardElement />\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger width-btn\"\n              data-dismiss=\"modal\"\n              onClick={props.closePaymentAddCardModal}\n            >\n              {t(\"cancel\")}\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"btn btn-success width-btn\"\n              data-dismiss=\"modal\"\n              onClick={addCard}\n              disabled={addCardButtonDisable}\n            >\n              {addCardLoadingContent != null ? addCardLoadingContent : t(\"add\")}\n            </Button>\n          </Modal.Footer>\n        </Form>\n        : null}\n      </Modal>\n    </>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(null, mapDispatchToProps)(translate(PaymentAddCardModal));\n"]},"metadata":{},"sourceType":"module"}