{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/Payments/CardsIndex.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport AddCardModal from \"../../helper/AddCardModal\";\nimport \"./CardsIndex.css\";\nimport { fetchCardDetailsStart, selectDefaultCardStart, deleteCardStart } from \"../../../store/actions/CardsAction\";\nimport { Link } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PaymentAddCardModal from \"../../helper/PaymentAddCardModal\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport CardListLoader from \"../../Loader/CardListLoader\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst CardsIndex = props => {\n  useEffect(() => {\n    props.dispatch(fetchCardDetailsStart());\n  }, []);\n  const stripePromise = loadStripe(configuration.get(\"configData.stripe_publishable_key\"));\n  const [addCard, setAddCard] = useState(false);\n\n  const closeAddCardModal = () => {\n    setAddCard(false);\n  };\n\n  const [paymentAddCard, setPaymentAddCard] = useState(false);\n\n  const closePaymentAddCardModal = () => {\n    setPaymentAddCard(false);\n  };\n\n  const {\n    cards\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"head-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, t(\"your_cards\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, cards.loading ? /*#__PURE__*/React.createElement(CardListLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }) : cards.data.cards.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, cards.data.cards.map(card => /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 6,\n    xl: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, card.is_default == 1 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-link-text text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }, t(\"default_card\")) : /*#__PURE__*/React.createElement(Link, {\n    className: \"card-link-text text-info\",\n    onClick: () => props.dispatch(selectDefaultCardStart({\n      user_card_id: card.id\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }\n  }, t(\"mark_as_default\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"card-link-text text-info\",\n    onClick: () => {\n      if (window.confirm(t(\"delete_cards_confirmation\"))) {\n        props.dispatch(deleteCardStart({\n          user_card_id: card.id\n        }));\n      }\n\n      ;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/delete.png\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Image, {\n    src: \"/assets/images/icons/credit-card.svg\",\n    className: \"credit-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  })))))) : null, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 6,\n    xl: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-list-box cursor-pointer-link\",\n    onClick: () => setPaymentAddCard(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"/assets/images/icons/add-card.svg\",\n    className: \"add-card-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, t(\"add_card\")))))))), /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaymentAddCardModal, {\n    paymentAddCard: paymentAddCard,\n    closePaymentAddCardModal: closePaymentAddCardModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToPros = state => ({\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(CardsIndex));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Accounts/Payments/CardsIndex.jsx"],"names":["React","useState","useEffect","connect","Container","Row","Col","Image","AddCardModal","fetchCardDetailsStart","selectDefaultCardStart","deleteCardStart","Link","loadStripe","Elements","PaymentAddCardModal","NoDataFound","CardListLoader","configuration","translate","t","CardsIndex","props","dispatch","stripePromise","get","addCard","setAddCard","closeAddCardModal","paymentAddCard","setPaymentAddCard","closePaymentAddCardModal","cards","loading","data","length","map","card","last_four","card_type","is_default","user_card_id","id","window","confirm","mapStateToPros","state","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport AddCardModal from \"../../helper/AddCardModal\";\nimport \"./CardsIndex.css\";\nimport {\n  fetchCardDetailsStart,\n  selectDefaultCardStart,\n  deleteCardStart,\n} from \"../../../store/actions/CardsAction\";\nimport { Link } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PaymentAddCardModal from \"../../helper/PaymentAddCardModal\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport CardListLoader from \"../../Loader/CardListLoader\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst CardsIndex = (props) => {\n  useEffect(() => {\n    props.dispatch(fetchCardDetailsStart());\n  }, []);\n\n  const stripePromise = loadStripe(\n    configuration.get(\"configData.stripe_publishable_key\")\n  );\n\n  const [addCard, setAddCard] = useState(false);\n\n  const closeAddCardModal = () => {\n    setAddCard(false);\n  };\n\n  const [paymentAddCard, setPaymentAddCard] = useState(false);\n\n  const closePaymentAddCardModal = () => {\n    setPaymentAddCard(false);\n  };\n\n  const { cards } = props;\n\n  return (\n    <>\n      <div className=\"card-list-sec\">\n        <Container>\n          <h3 className=\"head-title\">{t(\"your_cards\")}</h3>\n          {/* <Row>\n            <Col sm={12} md={6} xl={4}>\n              <div\n                className=\"card-list-box cursor-pointer-link\"\n                onClick={() => setPaymentAddCard(true)}\n              >\n                <div className=\"add-account-sec\">\n                  <Image\n                    src=\"/assets/images/icons/add-card.svg\"\n                    className=\"add-card-img\"\n                  />\n                  <h5 className=\"text-muted\">{t(\"add_card\")}</h5>\n                </div>\n              </div>\n            </Col>\n          </Row> */}\n          <Row>\n            {cards.loading ? (\n              <CardListLoader />\n            ) : cards.data.cards.length > 0 ? (\n              <>\n              {cards.data.cards.map((card) => (\n                <Col sm={12} md={6} xl={4}>\n                  <div className=\"card-list-box\">\n                    <h5 className=\"mb-4\">XXXX XXXX XXXX {card.last_four}</h5>\n                    <h5 className=\"text-muted\">{card.card_type}</h5>\n                    <div className=\"payment-bottom\">\n                      <div className=\"action-btn\">\n                        {card.is_default == 1 ? (\n                          <p className=\"card-link-text text-success\">\n                            {t(\"default_card\")}\n                          </p>\n                        ) : (\n                          <Link\n                            className=\"card-link-text text-info\"\n                            onClick={() =>\n                              props.dispatch(\n                                selectDefaultCardStart({\n                                  user_card_id: card.id,\n                                })\n                              )\n                            }\n                          >\n                            {t(\"mark_as_default\")}\n                          </Link>\n                        )}\n                        <Link\n                            className=\"card-link-text text-info\"\n                            onClick={() =>\n                              {if(window.confirm(t(\"delete_cards_confirmation\"))){ \n                                props.dispatch(\n                                  deleteCardStart({\n                                    user_card_id: card.id,\n                                  })\n                                )};}\n                            }\n                          >\n                            <Image src=\"assets/images/icons/delete.png\" className=\"svg-clone\" />\n                          </Link>\n                      </div>\n                      <Image\n                        src=\"/assets/images/icons/credit-card.svg\"\n                        className=\"credit-img\"\n                      />\n                    </div>\n                  </div>\n                </Col>\n              ))}\n              </>\n            ) : null}\n            <Col sm={12} md={6} xl={4}>\n              <div\n                className=\"card-list-box cursor-pointer-link\"\n                onClick={() => setPaymentAddCard(true)}\n              >\n                <div className=\"add-account-sec\">\n                  <Image\n                    src=\"/assets/images/icons/add-card.svg\"\n                    className=\"add-card-img\"\n                  />\n                  <h5 className=\"text-muted\">{t(\"add_card\")}</h5>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <Elements stripe={stripePromise}>\n        <PaymentAddCardModal\n          paymentAddCard={paymentAddCard}\n          closePaymentAddCardModal={closePaymentAddCardModal}\n        />\n      </Elements>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(CardsIndex));\n"]},"metadata":{},"sourceType":"module"}