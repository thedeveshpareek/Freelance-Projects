{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getCardDetailsAPI),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(deleteCardAPI),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(selectDefaultCardAPI),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import React,{Component}from\"react\";import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import{fetchCardDetailsSuccess,fetchCardDetailsFailure,deleteCardSuccess,deleteCardFailure,selectDefaultCardSuccess,selectDefaultCardFailure,fetchCardDetailsStart}from\"../actions/CardsAction\";import api from\"../../Environment\";import{FETCH_CARD_DETAILS_START,DELETE_CARD_START,SELECT_DEFAULT_CARD_START}from\"../actions/ActionConstant\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function getCardDetailsAPI(){var response,notificationMessage,_notificationMessage;return _regeneratorRuntime.wrap(function getCardDetailsAPI$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.postMethod(\"cards_list\");case 3:response=_context.sent;if(!response.data.success){_context.next=9;break;}_context.next=7;return put(fetchCardDetailsSuccess(response.data.data));case 7:_context.next=16;break;case 9:_context.next=11;return put(fetchCardDetailsFailure(response.data.error));case 11:notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=14;return put(checkLogoutStatus(response.data));case 14:_context.next=16;return put(createNotification(notificationMessage));case 16:_context.next=25;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);_context.next=22;return put(fetchCardDetailsFailure(_context.t0));case 22:_notificationMessage=getErrorNotificationMessage(_context.t0.message);_context.next=25;return put(createNotification(_notificationMessage));case 25:case\"end\":return _context.stop();}}},_marked,null,[[0,18]]);}function deleteCardAPI(){var deleteCard,response,notificationMessage,_notificationMessage2,_notificationMessage3;return _regeneratorRuntime.wrap(function deleteCardAPI$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return select(function(state){return state.cards.deleteCard.data;});case 3:deleteCard=_context2.sent;_context2.next=6;return api.postMethod(\"cards_delete\",deleteCard);case 6:response=_context2.sent;_context2.next=9;return put(deleteCardSuccess(response.data.data));case 9:if(!response.data.success){_context2.next=17;break;}notificationMessage=getSuccessNotificationMessage(response.data.error);_context2.next=13;return put(createNotification(notificationMessage));case 13:_context2.next=15;return put(fetchCardDetailsStart());case 15:_context2.next=22;break;case 17:_notificationMessage2=getErrorNotificationMessage(response.data.error);_context2.next=20;return put(checkLogoutStatus(response.data));case 20:_context2.next=22;return put(createNotification(_notificationMessage2));case 22:_context2.next=31;break;case 24:_context2.prev=24;_context2.t0=_context2[\"catch\"](0);_context2.next=28;return put(deleteCardFailure(_context2.t0));case 28:_notificationMessage3=getErrorNotificationMessage(_context2.t0.message);_context2.next=31;return put(createNotification(_notificationMessage3));case 31:case\"end\":return _context2.stop();}}},_marked2,null,[[0,24]]);}function selectDefaultCardAPI(){var selectDefaultCard,response,notificationMessage,_notificationMessage4,_notificationMessage5;return _regeneratorRuntime.wrap(function selectDefaultCardAPI$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return select(function(state){return state.cards.selectDefaultCard.inputData;});case 3:selectDefaultCard=_context3.sent;_context3.next=6;return api.postMethod(\"cards_default\",selectDefaultCard);case 6:response=_context3.sent;_context3.next=9;return put(selectDefaultCardSuccess(response.data.data));case 9:if(!response.data.success){_context3.next=17;break;}notificationMessage=getSuccessNotificationMessage(response.data.message);_context3.next=13;return put(createNotification(notificationMessage));case 13:_context3.next=15;return put(fetchCardDetailsStart());case 15:_context3.next=22;break;case 17:_notificationMessage4=getErrorNotificationMessage(response.data.error);_context3.next=20;return put(checkLogoutStatus(response.data));case 20:_context3.next=22;return put(createNotification(_notificationMessage4));case 22:_context3.next=31;break;case 24:_context3.prev=24;_context3.t0=_context3[\"catch\"](0);_context3.next=28;return put(selectDefaultCardFailure(_context3.t0));case 28:_notificationMessage5=getErrorNotificationMessage(_context3.t0.message);_context3.next=31;return put(createNotification(_notificationMessage5));case 31:case\"end\":return _context3.stop();}}},_marked3,null,[[0,24]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.t0=all;_context4.next=3;return takeLatest(FETCH_CARD_DETAILS_START,getCardDetailsAPI);case 3:_context4.t1=_context4.sent;_context4.t2=[_context4.t1];_context4.next=7;return(0,_context4.t0)(_context4.t2);case 7:_context4.t3=all;_context4.next=10;return takeLatest(DELETE_CARD_START,deleteCardAPI);case 10:_context4.t4=_context4.sent;_context4.t5=[_context4.t4];_context4.next=14;return(0,_context4.t3)(_context4.t5);case 14:_context4.t6=all;_context4.next=17;return takeLatest(SELECT_DEFAULT_CARD_START,selectDefaultCardAPI);case 17:_context4.t7=_context4.sent;_context4.t8=[_context4.t7];_context4.next=21;return(0,_context4.t6)(_context4.t8);case 21:case\"end\":return _context4.stop();}}},_marked4);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/CardsSaga.jsx"],"names":["getCardDetailsAPI","deleteCardAPI","selectDefaultCardAPI","pageSaga","React","Component","call","select","put","takeLatest","all","fetchCardDetailsSuccess","fetchCardDetailsFailure","deleteCardSuccess","deleteCardFailure","selectDefaultCardSuccess","selectDefaultCardFailure","fetchCardDetailsStart","api","FETCH_CARD_DETAILS_START","DELETE_CARD_START","SELECT_DEFAULT_CARD_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","checkLogoutStatus","postMethod","response","data","success","error","notificationMessage","message","state","cards","deleteCard","selectDefaultCard","inputData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport {\n  fetchCardDetailsSuccess,\n  fetchCardDetailsFailure,\n  deleteCardSuccess,\n  deleteCardFailure,\n  selectDefaultCardSuccess,\n  selectDefaultCardFailure,\n  fetchCardDetailsStart,\n} from \"../actions/CardsAction\";\n\nimport api from \"../../Environment\";\nimport {\n  FETCH_CARD_DETAILS_START,\n  DELETE_CARD_START,\n  SELECT_DEFAULT_CARD_START,\n} from \"../actions/ActionConstant\";\n\nimport { createNotification } from \"react-redux-notify\";\n\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\n\nfunction* getCardDetailsAPI() {\n  try {\n    const response = yield api.postMethod(\"cards_list\");\n\n    if (response.data.success) {\n      yield put(fetchCardDetailsSuccess(response.data.data));\n    } else {\n      yield put(fetchCardDetailsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchCardDetailsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteCardAPI() {\n  try {\n    const deleteCard = yield select((state) => state.cards.deleteCard.data);\n    const response = yield api.postMethod(\"cards_delete\", deleteCard);\n    yield put(deleteCardSuccess(response.data.data));\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n      yield put(fetchCardDetailsStart());\n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteCardFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* selectDefaultCardAPI() {\n  try {\n    const selectDefaultCard = yield select(\n      (state) => state.cards.selectDefaultCard.inputData\n    );\n    const response = yield api.postMethod(\"cards_default\", selectDefaultCard);\n    yield put(selectDefaultCardSuccess(response.data.data));\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      yield put(fetchCardDetailsStart());\n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(selectDefaultCardFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_CARD_DETAILS_START, getCardDetailsAPI)]);\n  yield all([yield takeLatest(DELETE_CARD_START, deleteCardAPI)]);\n  yield all([\n    yield takeLatest(SELECT_DEFAULT_CARD_START, selectDefaultCardAPI),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}