{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getReferralAPI),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import api from\"../../Environment\";import{GET_REFERRAL_START}from\"../actions/ActionConstant\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{getReferralSuccess,getReferralFailure}from\"../actions/ReferralAction\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function getReferralAPI(){var response,notificationMessage,_notificationMessage;return _regeneratorRuntime.wrap(function getReferralAPI$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.postMethod(\"referral_code\");case 3:response=_context.sent;_context.next=6;return put(getReferralSuccess(response.data.data));case 6:if(!response.data.success){_context.next=9;break;}_context.next=16;break;case 9:_context.next=11;return put(getReferralFailure(response.data.error));case 11:notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=14;return put(checkLogoutStatus(response.data));case 14:_context.next=16;return put(createNotification(notificationMessage));case 16:_context.next=25;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);_context.next=22;return put(getReferralFailure(_context.t0));case 22:_notificationMessage=getErrorNotificationMessage(_context.t0.message);_context.next=25;return put(createNotification(_notificationMessage));case 25:case\"end\":return _context.stop();}}},_marked,null,[[0,18]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=all;_context2.next=3;return takeLatest(GET_REFERRAL_START,getReferralAPI);case 3:_context2.t1=_context2.sent;_context2.t2=[_context2.t1];_context2.next=7;return(0,_context2.t0)(_context2.t2);case 7:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/ReferralSaga.jsx"],"names":["getReferralAPI","pageSaga","call","select","put","takeLatest","all","api","GET_REFERRAL_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","getReferralSuccess","getReferralFailure","checkLogoutStatus","postMethod","response","data","success","error","notificationMessage","message"],"mappings":"kNAkBUA,c,iDAoBeC,Q,EAtCzB,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,CAA4BC,UAA5B,CAAwCC,GAAxC,KAAmD,oBAAnD,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,OACEC,kBADF,KAEO,2BAFP,CAGA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OACEC,6BADF,CAEEC,2BAFF,KAGO,6CAHP,CAIA,OACEC,kBADF,CAEEC,kBAFF,KAGO,2BAHP,CAIA,OACEC,iBADF,KAEO,wBAFP,CAIA,QAAUd,CAAAA,cAAV,gNAEqB,MAAMO,CAAAA,GAAG,CAACQ,UAAJ,CAAe,eAAf,CAAN,CAFrB,OAEUC,QAFV,+BAGI,MAAMZ,CAAAA,GAAG,CAACQ,kBAAkB,CAACI,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAnB,CAAT,CAHJ,WAIQD,QAAQ,CAACC,IAAT,CAAcC,OAJtB,wEAMM,MAAMd,CAAAA,GAAG,CAACS,kBAAkB,CAACG,QAAQ,CAACC,IAAT,CAAcE,KAAf,CAAnB,CAAT,CANN,QAOYC,mBAPZ,CAOkCT,2BAA2B,CACrDK,QAAQ,CAACC,IAAT,CAAcE,KADuC,CAP7D,kBAUM,MAAMf,CAAAA,GAAG,CAACU,iBAAiB,CAACE,QAAQ,CAACC,IAAV,CAAlB,CAAT,CAVN,yBAWM,MAAMb,CAAAA,GAAG,CAACK,kBAAkB,CAACW,mBAAD,CAAnB,CAAT,CAXN,0GAcI,MAAMhB,CAAAA,GAAG,CAACS,kBAAkB,aAAnB,CAAT,CAdJ,QAeUO,oBAfV,CAegCT,2BAA2B,CAAC,YAAMU,OAAP,CAf3D,kBAgBI,MAAMjB,CAAAA,GAAG,CAACK,kBAAkB,CAACW,oBAAD,CAAnB,CAAT,CAhBJ,qEAoBA,cAAe,SAAUnB,CAAAA,QAAV,oIACPK,GADO,kBACF,MAAMD,CAAAA,UAAU,CAACG,kBAAD,CAAqBR,cAArB,CAAhB,CADE,gFACb,qCADa","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  GET_REFERRAL_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  getReferralSuccess,\n  getReferralFailure,\n} from \"../actions/ReferralAction\";\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* getReferralAPI() {\n  try {\n    const response = yield api.postMethod(\"referral_code\");\n    yield put(getReferralSuccess(response.data.data));\n    if (response.data.success) {\n    } else {\n      yield put(getReferralFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getReferralFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(GET_REFERRAL_START, getReferralAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}