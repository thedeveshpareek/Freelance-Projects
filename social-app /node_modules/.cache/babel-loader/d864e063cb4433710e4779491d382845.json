{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { ADD_KYC_DOCUMENT_START, GET_KYC_DOCUMENT_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { addKycDocumentSuccess, addKycDocumentFailure, getKycDocumentSuccess, getKycDocumentFailure } from \"../actions/KycDocumentAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* addKycDocumentAPI() {\n  try {\n    const inputData = yield select(state => state.kycDocument.addKycDocInput.inputData);\n\n    if (inputData.document_id && inputData.document_file) {\n      const response = yield api.postMethod(\"documents_save\", inputData);\n      yield put(addKycDocumentSuccess(response.data.data));\n\n      if (response.data.success) {\n        const notificationMessage = getSuccessNotificationMessage(response.data.message);\n        yield put(createNotification(notificationMessage));\n      } else {\n        yield put(addKycDocumentFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(response.data.error);\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } else {\n      let errorMessage = \"Please upload the file and choose document\";\n      yield put(addKycDocumentFailure(errorMessage));\n      const notificationMessage = getErrorNotificationMessage(errorMessage);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* getKycDocumentAPI() {\n  try {\n    const response = yield api.postMethod(\"documents_list\");\n    yield put(getKycDocumentSuccess(response.data.data));\n\n    if (response.data.success) {} else {\n      yield put(getKycDocumentFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ADD_KYC_DOCUMENT_START, addKycDocumentAPI)]);\n  yield all([yield takeLatest(GET_KYC_DOCUMENT_START, getKycDocumentAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/KycDocumentSaga.jsx"],"names":["call","select","put","takeLatest","all","api","ADD_KYC_DOCUMENT_START","GET_KYC_DOCUMENT_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","addKycDocumentSuccess","addKycDocumentFailure","getKycDocumentSuccess","getKycDocumentFailure","checkLogoutStatus","addKycDocumentAPI","inputData","state","kycDocument","addKycDocInput","document_id","document_file","response","postMethod","data","success","notificationMessage","message","error","errorMessage","getKycDocumentAPI","pageSaga"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  ADD_KYC_DOCUMENT_START,\n  GET_KYC_DOCUMENT_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  addKycDocumentSuccess,\n  addKycDocumentFailure,\n  getKycDocumentSuccess,\n  getKycDocumentFailure,\n} from \"../actions/KycDocumentAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* addKycDocumentAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.kycDocument.addKycDocInput.inputData\n    );\n    if (inputData.document_id && inputData.document_file) {\n      const response = yield api.postMethod(\"documents_save\", inputData);\n      yield put(addKycDocumentSuccess(response.data.data));\n      if (response.data.success) {\n        const notificationMessage = getSuccessNotificationMessage(\n          response.data.message\n        );\n        yield put(createNotification(notificationMessage));\n      } else {\n        yield put(addKycDocumentFailure(response.data.error));\n        const notificationMessage = getErrorNotificationMessage(\n          response.data.error\n        );\n        yield put(checkLogoutStatus(response.data));\n        yield put(createNotification(notificationMessage));\n      }\n    } else {\n      let errorMessage = \"Please upload the file and choose document\";\n      yield put(addKycDocumentFailure(errorMessage));\n      const notificationMessage = getErrorNotificationMessage(errorMessage);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* getKycDocumentAPI() {\n  try {\n    const response = yield api.postMethod(\"documents_list\");\n    yield put(getKycDocumentSuccess(response.data.data));\n    if (response.data.success) {\n    } else {\n      yield put(getKycDocumentFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getKycDocumentFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ADD_KYC_DOCUMENT_START, addKycDocumentAPI)]);\n  yield all([yield takeLatest(GET_KYC_DOCUMENT_START, getKycDocumentAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}