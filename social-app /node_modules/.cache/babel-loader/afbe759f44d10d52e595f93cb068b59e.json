{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import React,{useState,useEffect}from\"react\";import{Form,Button,Image,Modal,Tab,Nav,Row,Col}from\"react-bootstrap\";import{connect}from\"react-redux\";import PaypalExpressBtn from\"react-paypal-express-checkout\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{fetchCardDetailsStart}from\"../../store/actions/CardsAction\";import{fetchWalletDetailsStart}from\"../../store/actions/WalletAction\";import configuration from\"react-global-configuration\";import{translate,t}from\"react-multi-lang\";import{payByPayPalStart,payByStripeStart,videoCallPayByWalletStart}from\"../../store/actions/PrivateCallAction\";import{Link}from\"react-router-dom\";var VideoCallMakePaymentModel=function VideoCallMakePaymentModel(props){var _useState=useState(localStorage.getItem(\"default_payment_method\")),_useState2=_slicedToArray(_useState,2),paymentType=_useState2[0],setPaymentType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showPayPal=_useState4[0],payPal=_useState4[1];useEffect(function(){if(props.videoCallPayment===true){props.dispatch(fetchCardDetailsStart());props.dispatch(fetchWalletDetailsStart());}},[props.videoCallPayment]);var env=configuration.get(\"configData.PAYPAL_MODE\");// you can set here to 'production' for production\nvar currency=\"USD\";// or you can set this value from your props or state\nvar client={sandbox:configuration.get(\"configData.PAYPAL_ID\"),production:configuration.get(\"configData.PAYPAL_ID\")};var choosePaymentOption=function choosePaymentOption(event){setPaymentType(event);};var handleSubmit=function handleSubmit(event){event.preventDefault();if(paymentType===\"CARD\")props.dispatch(payByStripeStart({video_call_request_id:props.video_call_request_id}));if(paymentType===\"PAYPAL\")showPayPal(true);if(paymentType===\"WALLET\")props.dispatch(videoCallPayByWalletStart({video_call_request_id:props.video_call_request_id}));// props.closePaymentModal();\n};var paypalOnSuccess=function paypalOnSuccess(payment){console.log(payment);setTimeout(function(){props.dispatch(payByPayPalStart({payment_id:payment.paymentID,video_call_request_id:props.video_call_request_id}));},1000);};var paypalOnError=function paypalOnError(err){var notificationMessage=getErrorNotificationMessage(err);_this.props.dispatch(createNotification(notificationMessage));};var paypalOnCancel=function paypalOnCancel(data){var notificationMessage=getErrorNotificationMessage(\"Payment cancelled please try again..\");_this.props.dispatch(createNotification(notificationMessage));};console.log(props.callDetails);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{show:props.videoCallPayment,onHide:props.closePaymentModal,centered:true,size:\"lg\"},props.videoCallPayment===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"video_call_payment\"))),/*#__PURE__*/React.createElement(Modal.Body,{className:\"subscription-tip-ppv-tab\"},/*#__PURE__*/React.createElement(Tab.Container,{id:\"left-tabs-example\",defaultActiveKey:paymentType},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:3},/*#__PURE__*/React.createElement(Nav,{variant:\"pills\",className:\"flex-column\"},configuration.get(\"configData.is_stripe_enabled\")==1&&configuration.get(\"configData.stripe_publishable_key\")!==\"\"&&configuration.get(\"configData.stripe_secret_key\")!==\"\"?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"CARD\");},eventKey:\"CARD\"},t('card_stripe'))):null,configuration.get(\"configData.is_paypal_enabled\")==1&&configuration.get(\"configData.PAYPAL_ID\")!==\"\"?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"PAYPAL\");},eventKey:\"PAYPAL\"},t('paypal'))):null,configuration.get(\"configData.is_ccbill_enabled\")==1&&configuration.get(\"configData.flex_form_id\")!==\"\"&&configuration.get(\"configData.salt_key\")!==\"\"?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"CCBILL\");},eventKey:\"CCBILL\"},t('ccbill'))):null,configuration.get(\"configData.is_wallet_payment_enabled\")==1?/*#__PURE__*/React.createElement(Nav.Item,null,/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return setPaymentType(\"WALLET\");},eventKey:\"WALLET\"},t('wallet'))):null)),/*#__PURE__*/React.createElement(Col,{sm:9},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-box\"},/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"amount\"),value:props.callDetails.amount_formatted,disabled:true})),/*#__PURE__*/React.createElement(Tab.Content,null,configuration.get(\"configData.is_stripe_enabled\")==1&&configuration.get(\"configData.stripe_publishable_key\")!==\"\"&&configuration.get(\"configData.stripe_secret_key\")!==\"\"?/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"CARD\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-sec\"},props.cards.loading?\"\":props.cards.data.cards.length>0?props.cards.data.cards.map(function(card){return card.is_default==1&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-list-box\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"mb-3\"},\"XXXX XXXX XXXX \",card.last_four),/*#__PURE__*/React.createElement(\"h5\",{className:\"text-muted\"},card.card_type),/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-bottom\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-action-btn\"},/*#__PURE__*/React.createElement(\"p\",{className:\"card-link-text text-success\"},t(\"default_card\")))));}):/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-item\"},/*#__PURE__*/React.createElement(Link,{to:\"cards\"},/*#__PURE__*/React.createElement(\"div\",{className:\"add-account-item\"},/*#__PURE__*/React.createElement(Image,{className:\"add-account-icon\",src:window.location.origin+\"/assets/images/icons/new/add-card.svg\"}),/*#__PURE__*/React.createElement(\"h5\",{className:\"text-muted\"},\"Add Card\")))))):null,configuration.get(\"configData.is_wallet_payment_enabled\")==1?/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"WALLET\"},props.wallet.loading?\"\":/*#__PURE__*/React.createElement(\"div\",{className:\"card-stripe-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wallet-balence-amount\"},/*#__PURE__*/React.createElement(\"h4\",null,t('available')),/*#__PURE__*/React.createElement(\"p\",null,props.wallet.data.user_wallet.remaining_formatted)),props.callDetails.amount>props.wallet.data.user_wallet.remaining?/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"p\",{className:\"conv-desc desc\"},t('low_wallet_balance_tips_payment_para')),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},/*#__PURE__*/React.createElement(Link,{to:\"/wallet\",className:\"withdraw-money-btn\"},t('add_wallet_amount')))):null)):null))))))),/*#__PURE__*/React.createElement(Modal.Footer,null,paymentType===\"PAYPAL\"&&props.callDetails.amount!=0?/*#__PURE__*/React.createElement(PaypalExpressBtn,{env:env,client:client,currency:currency,total:props.callDetails.amount,onError:paypalOnError,onSuccess:paypalOnSuccess,onCancel:paypalOnCancel}):null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-danger\",\"data-dismiss\":\"modal\",onClick:props.closePaymentModal},t(\"cancel\")),paymentType!==\"PAYPAL\"?/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-success\",\"data-dismiss\":\"modal\",onClick:handleSubmit,disabled:props.subPayStripe.buttonDisable},props.subPayStripe.loadingButtonContent!==null?props.subPayStripe.loadingButtonContent:props.callDetails.amount>0?t(\"pay_now\"):t(\"confirm_now\")):null)):null));};var mapStateToPros=function mapStateToPros(state){return{subPayStripe:state.subscriptions.subPayStripe,wallet:state.wallet.walletData,cards:state.cards.cardDetails};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(VideoCallMakePaymentModel));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/VideoCallMakePaymentModel.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","Tab","Nav","Row","Col","connect","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchCardDetailsStart","fetchWalletDetailsStart","configuration","translate","t","payByPayPalStart","payByStripeStart","videoCallPayByWalletStart","Link","VideoCallMakePaymentModel","props","localStorage","getItem","paymentType","setPaymentType","showPayPal","payPal","videoCallPayment","dispatch","env","get","currency","client","sandbox","production","choosePaymentOption","event","handleSubmit","preventDefault","video_call_request_id","paypalOnSuccess","payment","console","log","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","callDetails","closePaymentModal","amount_formatted","cards","loading","length","map","card","is_default","last_four","card_type","window","location","origin","wallet","user_wallet","remaining_formatted","amount","remaining","subPayStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","subscriptions","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchCardDetailsStart,\n} from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport {\n  payByPayPalStart,\n  payByStripeStart,\n  videoCallPayByWalletStart,\n} from \"../../store/actions/PrivateCallAction\";\nimport { Link } from \"react-router-dom\";\n\nconst VideoCallMakePaymentModel = (props) => {\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n\n  const [showPayPal, payPal] = useState(false);\n\n  useEffect(() => {\n    if (props.videoCallPayment === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.videoCallPayment]);\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  const choosePaymentOption = (event) => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        payByStripeStart({\n          video_call_request_id: props.video_call_request_id,\n        })\n      );\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        videoCallPayByWalletStart({\n          video_call_request_id: props.video_call_request_id,\n        })\n      );\n\n    // props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(\n        payByPayPalStart({\n          payment_id: payment.paymentID,\n          video_call_request_id: props.video_call_request_id,\n        })\n      );\n    }, 1000);\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n  console.log(props.callDetails);\n  return (\n    <>\n      <Modal show={props.videoCallPayment}\n        onHide={props.closePaymentModal}\n        centered\n        size=\"lg\"\n      >\n        {props.videoCallPayment === true ? (\n        <>\n          <Modal.Header closeButton>\n              <Modal.Title>{t(\"video_call_payment\")}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"subscription-tip-ppv-tab\">\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={paymentType}>\n              <Row>\n                <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      {configuration.get(\"configData.is_stripe_enabled\") ==\n                        1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                        <Nav.Item>\n                            <Nav.Link onClick={() => setPaymentType(\"CARD\")} eventKey=\"CARD\">{t('card_stripe')}</Nav.Link>\n                        </Nav.Item>\n                        ) : null}\n                        {configuration.get(\"configData.is_paypal_enabled\") ==\n                          1  && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                          <Nav.Item>\n                              <Nav.Link onClick={() => setPaymentType(\"PAYPAL\")} eventKey=\"PAYPAL\">{t('paypal')}</Nav.Link>\n                          </Nav.Item>\n                        ) : null}\n                        {configuration.get(\"configData.is_ccbill_enabled\") ==\n                          1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? (\n                        <Nav.Item>\n                            <Nav.Link onClick={() => setPaymentType(\"CCBILL\")} eventKey=\"CCBILL\">{t('ccbill')}</Nav.Link>\n                        </Nav.Item>\n                        ) : null}\n                        {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                          1 ? (\n                        <Nav.Item>\n                            <Nav.Link onClick={() => setPaymentType(\"WALLET\")} eventKey=\"WALLET\">{t('wallet')}</Nav.Link>\n                        </Nav.Item>\n                        ) : null}\n                    </Nav>\n                </Col>\n                <Col sm={9}>\n                  <div className=\"card-stripe-box\">\n                    <Form onSubmit={handleSubmit}>\n                      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control type=\"text\" \n                          placeholder={t(\"amount\")} \n                          value={props.callDetails.amount_formatted}\n                          disabled/>\n                      </Form.Group>\n                      <Tab.Content>\n                      \n                        {configuration.get(\"configData.is_stripe_enabled\") ==\n                          1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                            <Tab.Pane eventKey=\"CARD\">\n                              <div className=\"card-stripe-sec\">\n                                {props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ?\n                                props.cards.data.cards.map((card) => ( (\n                                  card.is_default == 1 && (\n                                  <div className=\"card-stripe-list-box\">\n                                      <h5 className=\"mb-3\">XXXX XXXX XXXX {card.last_four}</h5>\n                                      <h5 className=\"text-muted\">{card.card_type}</h5>\n                                      <div className=\"card-stripe-bottom\">\n                                          <div className=\"card-stripe-action-btn\">\n                                              <p className=\"card-link-text text-success\">{t(\"default_card\")}</p>\n                                          </div>\n                                      </div>\n                                    </div> )\n                                ))): (\n                                  <div className=\"card-stripe-item\">\n                                    <Link to=\"cards\">\n                                      <div className=\"add-account-item\">\n                                          <Image\n                                              className=\"add-account-icon\"\n                                              src={\n                                                  window.location.origin + \"/assets/images/icons/new/add-card.svg\"\n                                              }\n                                          />\n                                          <h5 className=\"text-muted\">Add Card</h5>\n                                      </div>\n                                    </Link>\n                                  </div>\n                                )}\n                              </div>\n                            </Tab.Pane>\n                          ) : null}\n\n                          {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                            1 ? (\n                            <Tab.Pane eventKey=\"WALLET\">\n                              {props.wallet.loading ? \"\" : (\n                                <div className=\"card-stripe-box\">\n                                  <div className=\"wallet-balence-amount\">\n                                      <h4>{t('available')}</h4>\n                                      <p>{props.wallet.data.user_wallet.remaining_formatted}</p>\n                                  </div>\n                                  {props.callDetails.amount > props.wallet.data.user_wallet.remaining ? (\n                                    <div className=\"\">\n                                        <p className=\"conv-desc desc\">{t('low_wallet_balance_tips_payment_para')}</p>\n                                        <div className=\"d-flex\">\n                                          <Link to=\"/wallet\" className=\"withdraw-money-btn\">{t('add_wallet_amount')}</Link>\n                                        </div>\n                                    </div>\n                                  ) : null}\n                                </div>\n                              )}\n                            </Tab.Pane>\n                          ) : null}\n\n                      </Tab.Content>\n                    </Form>\n                  </div>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </Modal.Body>\n          <Modal.Footer>\n            {paymentType === \"PAYPAL\" && props.callDetails.amount != 0 ? (\n              <PaypalExpressBtn\n                env={env}\n                client={client}\n                currency={currency}\n                total={props.callDetails.amount}\n                onError={paypalOnError}\n                onSuccess={paypalOnSuccess}\n                onCancel={paypalOnCancel}\n              />\n            ) : null}\n            <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closePaymentModal}\n            >\n                {t(\"cancel\")}\n            </Button>\n            {paymentType !== \"PAYPAL\" ? (\n              <Button\n                type=\"button\"\n                className=\"btn btn-success\"\n                data-dismiss=\"modal\"\n                onClick={handleSubmit}\n                disabled={props.subPayStripe.buttonDisable}\n              >\n                {props.subPayStripe.loadingButtonContent !== null\n                    ? props.subPayStripe.loadingButtonContent\n                    : props.callDetails.amount > 0 ? t(\"pay_now\") : t(\"confirm_now\")}\n              </Button>\n            ) : null}\n          </Modal.Footer>\n        </>\n        ) : null}\n    </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  subPayStripe: state.subscriptions.subPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(VideoCallMakePaymentModel));\n"]},"metadata":{},"sourceType":"module"}