{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import React,{useState}from\"react\";import{Form,Button,Image,Modal}from\"react-bootstrap\";import{connect}from\"react-redux\";import{chatAssetPaymentStripeStart,chatAssetPaymentPaypalStart}from\"../../store/actions/ChatAssetAction\";import PaypalExpressBtn from\"react-paypal-express-checkout\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import configuration from\"react-global-configuration\";import{translate,t}from\"react-multi-lang\";var AssetPaymentModal=function AssetPaymentModal(props){var _useState=useState(localStorage.getItem(\"default_payment_method\")),_useState2=_slicedToArray(_useState,2),paymentType=_useState2[0],setPaymentType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showPayPal=_useState4[0],payPal=_useState4[1];var env=configuration.get(\"configData.PAYPAL_MODE\");// you can set here to 'production' for production\nvar currency=\"USD\";// or you can set this value from your props or state\nvar client={sandbox:configuration.get(\"configData.PAYPAL_ID\"),production:configuration.get(\"configData.PAYPAL_ID\")};var choosePaymentOption=function choosePaymentOption(event){setPaymentType(event);};var handleSubmit=function handleSubmit(event){event.preventDefault();if(paymentType===\"CARD\")props.dispatch(chatAssetPaymentStripeStart({chat_message_id:props.paymentData.chat_message_id}));if(paymentType===\"PAYPAL\")showPayPal(true);props.closePaymentModal();};var paypalOnSuccess=function paypalOnSuccess(payment){console.log(payment);setTimeout(function(){props.dispatch(chatAssetPaymentPaypalStart({payment_id:payment.paymentID,chat_message_id:props.paymentData.chat_message_id}));},1000);};var paypalOnError=function paypalOnError(err){var notificationMessage=getErrorNotificationMessage(err);_this.props.dispatch(createNotification(notificationMessage));};var paypalOnCancel=function paypalOnCancel(data){var notificationMessage=getErrorNotificationMessage(\"Payment cancelled please try again..\");_this.props.dispatch(createNotification(notificationMessage));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-center sent-tip-modal\",size:\"md\",centered:true,show:props.chatPayment,onHide:props.closePaymentModal},props.chatPayment===true?/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"chat_message\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"header-userinfo mb-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"popup-username-row\"},/*#__PURE__*/React.createElement(\"span\",{className:\"pop-username popuser-realname\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pop-username\"},\"Chat Message Payment\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"floating-form\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"pop-user-username\"},t(\"amount\"),\" - \",props.paymentData.amount)),/*#__PURE__*/React.createElement(Form,{className:\"mt-4\"},[\"radio\"].map(function(type){return/*#__PURE__*/React.createElement(\"div\",{key:\"custom-inline-\".concat(type),className:\"mb-3\"},configuration.get(\"configData.is_stripe_enabled\")==1&&configuration.get(\"configData.stripe_publishable_key\")!==\"\"&&configuration.get(\"configData.stripe_secret_key\")!==\"\"?/*#__PURE__*/React.createElement(Form.Check,{custom:true,inline:true,label:\"Card\",type:type// id={`custom-inline-${type}-2`}\n,id:\"card\",value:\"CARD\",name:\"payment_type\",defaultChecked:paymentType==\"CARD\"?true:false,onChange:function onChange(event){choosePaymentOption(event.currentTarget.value);}}):null,configuration.get(\"configData.is_paypal_enabled\")==1&&configuration.get(\"configData.PAYPAL_ID\")!==\"\"?/*#__PURE__*/React.createElement(Form.Check,{custom:true,inline:true,label:\"Paypal\",type:type,id:\"paypal\",value:\"PAYPAL\",name:\"payment_type\",defaultChecked:paymentType==\"PAYPAL\"?true:false,onChange:function onChange(event){choosePaymentOption(event.currentTarget.value);}}):\"\");})))),/*#__PURE__*/React.createElement(Modal.Footer,null,paymentType===\"PAYPAL\"&&props.paymentData.amount_formatted!=0?/*#__PURE__*/React.createElement(PaypalExpressBtn,{env:env,client:client,currency:currency,total:props.paymentData.amount_formatted,onError:paypalOnError,onSuccess:paypalOnSuccess,onCancel:paypalOnCancel}):null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-danger\",\"data-dismiss\":\"modal\",onClick:props.closePaymentModal},t(\"cancel\")),paymentType!==\"PAYPAL\"?/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-success\",\"data-dismiss\":\"modal\",onClick:handleSubmit,disabled:props.payStripe.buttonDisable},props.payStripe.loadingButtonContent!==null?props.payStripe.loadingButtonContent:t(\"pay_now\")):\"\")):null));};var mapStateToPros=function mapStateToPros(state){return{payStripe:state.chatAsset.chatAssetPayStripe};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(AssetPaymentModal));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/AssetPaymentModal.jsx"],"names":["React","useState","Form","Button","Image","Modal","connect","chatAssetPaymentStripeStart","chatAssetPaymentPaypalStart","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","configuration","translate","t","AssetPaymentModal","props","localStorage","getItem","paymentType","setPaymentType","showPayPal","payPal","env","get","currency","client","sandbox","production","choosePaymentOption","event","handleSubmit","preventDefault","dispatch","chat_message_id","paymentData","closePaymentModal","paypalOnSuccess","payment","console","log","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","chatPayment","amount","map","type","currentTarget","value","amount_formatted","payStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","chatAsset","chatAssetPayStripe","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Image, Modal } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    chatAssetPaymentStripeStart,\n    chatAssetPaymentPaypalStart,\n} from \"../../store/actions/ChatAssetAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst AssetPaymentModal = (props) => {\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n\n  const [showPayPal, payPal] = useState(false);\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  const choosePaymentOption = (event) => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        chatAssetPaymentStripeStart({\n          chat_message_id: props.paymentData.chat_message_id,\n        })\n      );\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n\n    props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(\n        chatAssetPaymentPaypalStart({\n          payment_id: payment.paymentID,\n          chat_message_id: props.paymentData.chat_message_id,\n        })\n      );\n    }, 1000);\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"modal-dialog-center sent-tip-modal\"\n        size=\"md\"\n        centered\n        show={props.chatPayment}\n        onHide={props.closePaymentModal}\n      >\n        {props.chatPayment === true ? (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"chat_message\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"header-userinfo mb-0\">\n                <div className=\"popup-username-row\">\n                  <span className=\"pop-username popuser-realname\">\n                    <div className=\"pop-username\">Chat Message Payment</div>\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"floating-form\">\n                <div>\n                  <div className=\"pop-user-username\">\n                    {t(\"amount\")} - {props.paymentData.amount}\n                  </div>\n                </div>\n                <Form className=\"mt-4\">\n                  {[\"radio\"].map((type) => (\n                    <div key={`custom-inline-${type}`} className=\"mb-3\">\n                      {configuration.get(\"configData.is_stripe_enabled\") ==\n                      1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Card\"\n                          type={type}\n                          // id={`custom-inline-${type}-2`}\n                          id=\"card\"\n                          value=\"CARD\"\n                          name=\"payment_type\"\n                          defaultChecked={paymentType == \"CARD\" ? true : false}\n                          onChange={(event) => {\n                            choosePaymentOption(event.currentTarget.value);\n                          }}\n                        />\n                      ) : (\n                        null\n                      )}\n                      {configuration.get(\"configData.is_paypal_enabled\") ==\n                      1 && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Paypal\"\n                          type={type}\n                          id=\"paypal\"\n                          value=\"PAYPAL\"\n                          name=\"payment_type\"\n                          defaultChecked={paymentType == \"PAYPAL\" ? true : false}\n                          onChange={(event) => {\n                            choosePaymentOption(event.currentTarget.value);\n                          }}\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  ))}\n                </Form>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              {paymentType === \"PAYPAL\" &&\n              props.paymentData.amount_formatted != 0 ? (\n                <PaypalExpressBtn\n                  env={env}\n                  client={client}\n                  currency={currency}\n                  total={props.paymentData.amount_formatted}\n                  onError={paypalOnError}\n                  onSuccess={paypalOnSuccess}\n                  onCancel={paypalOnCancel}\n                />\n              ) : null}\n\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closePaymentModal}\n              >\n                {t(\"cancel\")}\n              </Button>\n              {paymentType !== \"PAYPAL\" ? (\n                <Button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  data-dismiss=\"modal\"\n                  onClick={handleSubmit}\n                  disabled={props.payStripe.buttonDisable}\n                >\n                  {props.payStripe.loadingButtonContent !== null\n                    ? props.payStripe.loadingButtonContent\n                    : t(\"pay_now\")}\n                </Button>\n              ) : (\n                \"\"\n              )}\n            </Modal.Footer>\n          </Form>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  payStripe: state.chatAsset.chatAssetPayStripe,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(AssetPaymentModal));\n"]},"metadata":{},"sourceType":"module"}