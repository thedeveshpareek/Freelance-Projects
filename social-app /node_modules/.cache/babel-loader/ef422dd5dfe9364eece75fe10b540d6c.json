{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{Button,Container,Row,Col,Table,Badge}from\"react-bootstrap\";import\"../../Wallet/Wallet.css\";import{deleteBankAccountStart,getBankAccountStart,makeDefaultBankAccountStart}from\"../../../store/actions/BankAccountAction\";import{Link}from\"react-router-dom\";import NoDataFound from\"../../NoDataFound/NoDataFound\";import BillingAccountLoader from\"../../Loader/BillingAccountLoader\";import{translate,t}from\"react-multi-lang\";var BillingAccountIndex=function BillingAccountIndex(props){useEffect(function(){props.dispatch(getBankAccountStart());},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"wallet-sec\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"wallet-header-sec\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:12,xl:9},/*#__PURE__*/React.createElement(Link,{className:\"bookmarkes-list notify-title back-button\",onClick:function onClick(){return props.history.goBack();}},/*#__PURE__*/React.createElement(\"img\",{src:window.location.origin+\"/assets/images/icons/back.svg\",className:\"svg-clone\"}),/*#__PURE__*/React.createElement(\"h3\",{className:\"ml-2 mb-0\"},t(\"billing_accounts\"))),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted f-2\"},t(\"billing_accounts_para\"))),/*#__PURE__*/React.createElement(Col,{sm:12,md:12,xl:3},/*#__PURE__*/React.createElement(\"div\",{className:\"edit-save\"},/*#__PURE__*/React.createElement(Link,{className:\"receive-btn-blue\",to:\"/add-bank\"},t(\"add_new_account\")))))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"trans-table-sec\"},/*#__PURE__*/React.createElement(Container,null,props.bankAccount.loading?/*#__PURE__*/React.createElement(BillingAccountLoader,null):props.bankAccount.data.billing_accounts.length>0?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"trans-table\"},/*#__PURE__*/React.createElement(Table,{borderedless:true,responsive:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"bg-white text-muted text-center\"},/*#__PURE__*/React.createElement(\"th\",null,t(\"first_name\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"last_name\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"route_number\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"account_number\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"bank_type\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"business_name\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"is_default\")),/*#__PURE__*/React.createElement(\"th\",null,t(\"status\")))),/*#__PURE__*/React.createElement(\"tbody\",null,props.bankAccount.data.billing_accounts.map(function(accounts){return/*#__PURE__*/React.createElement(\"tr\",{key:accounts.user_billing_account_id},/*#__PURE__*/React.createElement(\"td\",{className:\"text-capitalize\"},accounts.first_name?accounts.first_name:\"-\"),/*#__PURE__*/React.createElement(\"td\",{className:\"text-capitalize\"},accounts.last_name?accounts.last_name:\"-\"),/*#__PURE__*/React.createElement(\"td\",null,accounts.route_number?accounts.route_number:\"-\"),/*#__PURE__*/React.createElement(\"td\",{className:\"amount\"},accounts.account_number?accounts.account_number:\"-\"),/*#__PURE__*/React.createElement(\"td\",{className:\"text-capitalize\"},accounts.bank_type?accounts.bank_type:\"-\"),/*#__PURE__*/React.createElement(\"td\",{className:\"text-capitalize\"},accounts.business_name?accounts.business_name:\"-\"),accounts.is_default===1?/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Badge,{className:\"confirmed-badge\"},t(\"yes\"))):/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Badge,{className:\"unconfirmed-badge\"},t(\"no\"))),/*#__PURE__*/React.createElement(\"td\",null,accounts.is_default===0?/*#__PURE__*/React.createElement(Button,{variant:\"success\",onClick:function onClick(){return props.dispatch(makeDefaultBankAccountStart({user_billing_account_id:accounts.user_billing_account_id}));}},t(\"make_default\")):null,\" \",/*#__PURE__*/React.createElement(Button,{variant:\"danger\",onClick:function onClick(){if(window.confirm(t(\"delete_billing_acc_confirmation\"))){props.dispatch(deleteBankAccountStart({user_billing_account_id:accounts.user_billing_account_id}));}}},t(\"delete\")),\" \"));})))))):/*#__PURE__*/React.createElement(NoDataFound,null))));};var mapStateToPros=function mapStateToPros(state){return{bankAccount:state.bankAccount.bankAccount};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(BillingAccountIndex));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Accounts/Payments/BillingAccountIndex.jsx"],"names":["React","useEffect","connect","Button","Container","Row","Col","Table","Badge","deleteBankAccountStart","getBankAccountStart","makeDefaultBankAccountStart","Link","NoDataFound","BillingAccountLoader","translate","t","BillingAccountIndex","props","dispatch","history","goBack","window","location","origin","bankAccount","loading","data","billing_accounts","length","map","accounts","user_billing_account_id","first_name","last_name","route_number","account_number","bank_type","business_name","is_default","confirm","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Container, Row, Col, Table, Badge } from \"react-bootstrap\";\nimport \"../../Wallet/Wallet.css\";\nimport {\n  deleteBankAccountStart,\n  getBankAccountStart,\n  makeDefaultBankAccountStart,\n} from \"../../../store/actions/BankAccountAction\";\nimport { Link } from \"react-router-dom\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport BillingAccountLoader from \"../../Loader/BillingAccountLoader\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst BillingAccountIndex = (props) => {\n  useEffect(() => {\n    props.dispatch(getBankAccountStart());\n  }, []);\n  return (\n    <>\n      <div className=\"wallet-sec\">\n        <Container>\n          <Row>\n            <Col sm={12} md={12}>\n              <div className=\"wallet-header-sec\">\n                <Row>\n                  <Col sm={12} md={12} xl={9}>\n                    <Link\n                      className=\"bookmarkes-list notify-title back-button\"\n                      onClick={() => props.history.goBack()}\n                    >\n                      <img\n                        src={\n                          window.location.origin +\n                          \"/assets/images/icons/back.svg\"\n                        }\n                        className=\"svg-clone\"\n                      />\n                      <h3 className=\"ml-2 mb-0\">{t(\"billing_accounts\")}</h3>\n                    </Link>\n                    <p className=\"text-muted f-2\">\n                      {t(\"billing_accounts_para\")}\n                    </p>\n                  </Col>\n                  <Col sm={12} md={12} xl={3}>\n                    <div className=\"edit-save\">\n                      <Link className=\"receive-btn-blue\" to={\"/add-bank\"}>\n                        {t(\"add_new_account\")}\n                      </Link>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <div className=\"trans-table-sec\">\n        <Container>\n          {props.bankAccount.loading ? (\n            <BillingAccountLoader />\n          ) : props.bankAccount.data.billing_accounts.length > 0 ? (\n            <Row>\n              <Col sm={12} md={12}>\n                <div className=\"trans-table\">\n                  <Table borderedless responsive>\n                    <thead>\n                      <tr className=\"bg-white text-muted text-center\">\n                        <th>{t(\"first_name\")}</th>\n                        <th>{t(\"last_name\")}</th>\n                        <th>{t(\"route_number\")}</th>\n                        <th>{t(\"account_number\")}</th>\n                        <th>{t(\"bank_type\")}</th>\n                        <th>{t(\"business_name\")}</th>\n                        <th>{t(\"is_default\")}</th>\n                        <th>{t(\"status\")}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {props.bankAccount.data.billing_accounts.map(\n                        (accounts) => (\n                          <tr key={accounts.user_billing_account_id}>\n                            <td className=\"text-capitalize\">\n                              {accounts.first_name ? accounts.first_name : \"-\"}\n                            </td>\n                            <td className=\"text-capitalize\">\n                              {accounts.last_name ? accounts.last_name : \"-\"}\n                            </td>\n                            <td>\n                              {accounts.route_number\n                                ? accounts.route_number\n                                : \"-\"}\n                            </td>\n                            <td className=\"amount\">\n                              {accounts.account_number\n                                ? accounts.account_number\n                                : \"-\"}\n                            </td>\n                            <td className=\"text-capitalize\">\n                              {accounts.bank_type ? accounts.bank_type : \"-\"}\n                            </td>\n                            <td className=\"text-capitalize\">\n                              {accounts.business_name\n                                ? accounts.business_name\n                                : \"-\"}\n                            </td>\n                            {accounts.is_default === 1 ? (\n                              <td>\n                                <Badge className=\"confirmed-badge\">\n                                  {t(\"yes\")}\n                                </Badge>\n                              </td>\n                            ) : (\n                              <td>\n                                <Badge className=\"unconfirmed-badge\">\n                                  {t(\"no\")}\n                                </Badge>\n                              </td>\n                            )}\n                            <td>\n                              {accounts.is_default === 0 ? (\n                                <Button\n                                  variant=\"success\"\n                                  onClick={() =>\n                                    props.dispatch(\n                                      makeDefaultBankAccountStart({\n                                        user_billing_account_id:\n                                          accounts.user_billing_account_id,\n                                      })\n                                    )\n                                  }\n                                >\n                                  {t(\"make_default\")}\n                                </Button>\n                              ) : null}{\" \"}\n                              <Button\n                                variant=\"danger\"\n                                onClick={() => {\n                                  if (\n                                    window.confirm(\n                                      t(\"delete_billing_acc_confirmation\")\n                                    )\n                                  ) {\n                                    props.dispatch(\n                                      deleteBankAccountStart({\n                                        user_billing_account_id:\n                                          accounts.user_billing_account_id,\n                                      })\n                                    );\n                                  }\n                                }}\n                              >\n                                {t(\"delete\")}\n                              </Button>{\" \"}\n                            </td>\n                          </tr>\n                        )\n                      )}\n                    </tbody>\n                  </Table>\n                </div>\n              </Col>\n            </Row>\n          ) : (\n            <NoDataFound />\n          )}\n        </Container>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  bankAccount: state.bankAccount.bankAccount,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(BillingAccountIndex));\n"]},"metadata":{},"sourceType":"module"}