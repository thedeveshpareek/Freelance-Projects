{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Button,Container,Row,Col,Image,Media,Dropdown}from\"react-bootstrap\";import{connect}from\"react-redux\";import{fetchBlockUsersStart}from\"../../../store/actions/UserAction\";import{saveBlockUserStart}from\"../../../store/actions/UserAction\";import{getSuccessNotificationMessage}from\"../../helper/NotificationMessage\";import{createNotification}from\"react-redux-notify/lib/modules/Notifications\";import NoDataFound from\"../../NoDataFound/NoDataFound\";import{CopyToClipboard}from\"react-copy-to-clipboard\";import VerifiedBadgeNoShadow from\"../../Handlers/VerifiedBadgeNoShadow\";import{translate,t}from\"react-multi-lang\";import FollowingLoader from\"../../Loader/FollowingLoader\";var BlockedUserIndex=function BlockedUserIndex(props){useEffect(function(){props.dispatch(fetchBlockUsersStart());},[]);var handleBlockUser=function handleBlockUser(event,status,user_id){event.preventDefault();props.dispatch(saveBlockUserStart({user_id:user_id,is_other_profile:1}));};var onCopy=function onCopy(event){var notificationMessage=getSuccessNotificationMessage(t('profile_link_copied'));props.dispatch(createNotification(notificationMessage));};return/*#__PURE__*/React.createElement(\"div\",{className:\"lists\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:12,md:12,xs:12},/*#__PURE__*/React.createElement(\"div\",{className:\"profile-post-area\"},/*#__PURE__*/React.createElement(\"div\",{className:\"bookmarkes-list bookmarks-right-side\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pull-left\"},/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(Link,{className:\"bookmarkes-list\",to:\"/home\",onClick:function onClick(){return props.history.goBack();}},/*#__PURE__*/React.createElement(Image,{src:window.location.origin+\"/assets/images/icons/back.svg\",className:\"svg-clone\"}),t(\"blocked_users\")))))),/*#__PURE__*/React.createElement(\"div\",{className:\"listing-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tab-content tabs\"},/*#__PURE__*/React.createElement(\"div\",null,props.followers.loading?/*#__PURE__*/React.createElement(FollowingLoader,null):/*#__PURE__*/React.createElement(Row,null,props.followers.data.block_users&&props.followers.data.block_users.length>0?props.followers.data.block_users.map(function(block_user){return/*#__PURE__*/React.createElement(Col,{sm:12,md:6,lg:4,xs:12},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-lists\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-subscription-lists\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-subscription-inner\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+block_user.blockeduser.user_unique_id},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-wrapper\"},/*#__PURE__*/React.createElement(Image,{className:\"follower-cover\",src:block_user.blockeduser.cover}))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-header\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+block_user.blockeduser.user_unique_id},/*#__PURE__*/React.createElement(\"span\",{className:\"follower-profile-avatar\"},/*#__PURE__*/React.createElement(Image,{src:block_user.blockeduser.picture,className:\"\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-status\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-toggle-dropdown\"},/*#__PURE__*/React.createElement(Dropdown,{className:\"btn dropdown-toggle btn-link\"},/*#__PURE__*/React.createElement(Dropdown.Toggle,{className:\"user-dropdown-dots dropdown-toggle\",type:\"button\",id:\"dropdown-basic\"},/*#__PURE__*/React.createElement(Image,{src:window.location.origin+\"/assets/images/icons/vertical-dots-white.svg\",className:\"svg-clone vertical-dots\"})),/*#__PURE__*/React.createElement(Dropdown.Menu,{className:\"dropdown-menu dropdown-menu-right\"},/*#__PURE__*/React.createElement(CopyToClipboard,{text:block_user.blockeduser.share_link,onCopy:onCopy},/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\"},\" \",t(\"copy_link_to_profile\"),\" \"))),/*#__PURE__*/React.createElement(Media,{as:\"li\"},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:function onClick(event){return handleBlockUser(event,\"unblocked\",block_user.blockeduser.user_id);}},t(\"unblock\"))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-wrapper-name\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-profile-names\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-name-row\"},/*#__PURE__*/React.createElement(Link,{to:block_user.blockeduser.user_unique_id},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-user-name\"},block_user.blockeduser.name,\" \",block_user.blockeduser.is_verified_badge==1?/*#__PURE__*/React.createElement(VerifiedBadgeNoShadow,null):null))),/*#__PURE__*/React.createElement(\"div\",{className:\"follower-name-row\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"+block_user.blockeduser.user_unique_id,className:\"g-user-realname__wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"follower-user-id\"},\"@\",block_user.blockeduser.username)))),/*#__PURE__*/React.createElement(\"div\",{className:\"group-follower-btns\"},/*#__PURE__*/React.createElement(CopyToClipboard,{text:block_user.blockeduser.share_link,onCopy:onCopy},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"g-btn m-rounded m-border m-icon m-icon-only m-colored has-tooltip\"},/*#__PURE__*/React.createElement(Image,{src:\"assets/images/icons/share.svg\",className:\"svg-clone \"}))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"lists-button-group post-icons\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn gradient-btn gradientcolor\",onClick:function onClick(event){return handleBlockUser(event,\"unblocked\",block_user.blockeduser.user_id);}},/*#__PURE__*/React.createElement(\"span\",{className:\"b-btn-text\"},t(\"unblock\"))))))));}):/*#__PURE__*/React.createElement(NoDataFound,null))))))))));};var mapStateToPros=function mapStateToPros(state){return{followers:state.users.blockUsers};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(BlockedUserIndex));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Accounts/BlockedUser/BlockedUserIndex.jsx"],"names":["React","useState","useEffect","Link","Button","Container","Row","Col","Image","Media","Dropdown","connect","fetchBlockUsersStart","saveBlockUserStart","getSuccessNotificationMessage","createNotification","NoDataFound","CopyToClipboard","VerifiedBadgeNoShadow","translate","t","FollowingLoader","BlockedUserIndex","props","dispatch","handleBlockUser","event","status","user_id","preventDefault","is_other_profile","onCopy","notificationMessage","history","goBack","window","location","origin","followers","loading","data","block_users","length","map","block_user","blockeduser","user_unique_id","cover","picture","share_link","name","is_verified_badge","username","mapStateToPros","state","users","blockUsers","mapDispatchToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OACEC,MADF,CAEEC,SAFF,CAGEC,GAHF,CAIEC,GAJF,CAKEC,KALF,CAMEC,KANF,CAOEC,QAPF,KAQO,iBARP,CASA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,oBAAT,KAAqC,mCAArC,CACA,OAASC,kBAAT,KAAmC,mCAAnC,CACA,OAASC,6BAAT,KAA8C,kCAA9C,CACA,OAASC,kBAAT,KAAmC,8CAAnC,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,sCAAlC,CACA,OAASC,SAAT,CAAoBC,CAApB,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAClCrB,SAAS,CAAC,UAAM,CACdqB,KAAK,CAACC,QAAN,CAAeZ,oBAAoB,EAAnC,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMa,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,MAAR,CAAgBC,OAAhB,CAA4B,CAClDF,KAAK,CAACG,cAAN,GACAN,KAAK,CAACC,QAAN,CACEX,kBAAkB,CAAC,CACjBe,OAAO,CAAEA,OADQ,CAEjBE,gBAAgB,CAAE,CAFD,CAAD,CADpB,EAMD,CARD,CAUA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACL,KAAD,CAAW,CACxB,GAAMM,CAAAA,mBAAmB,CAAGlB,6BAA6B,CACvDM,CAAC,CAAC,qBAAD,CADsD,CAAzD,CAGAG,KAAK,CAACC,QAAN,CAAeT,kBAAkB,CAACiB,mBAAD,CAAjC,EACD,CALD,CAOA,mBACE,2BAAK,SAAS,CAAC,OAAf,eACE,oBAAC,SAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,CAAqB,EAAE,CAAE,EAAzB,eACE,2BAAK,SAAS,CAAC,mBAAf,eACE,2BAAK,SAAS,CAAC,sCAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,2CACE,oBAAC,IAAD,EACE,SAAS,CAAC,iBADZ,CAEE,EAAE,CAAE,OAFN,CAGE,OAAO,CAAE,yBAAMT,CAAAA,KAAK,CAACU,OAAN,CAAcC,MAAd,EAAN,EAHX,eAKE,oBAAC,KAAD,EACE,GAAG,CACDC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CACA,+BAHJ,CAKE,SAAS,CAAC,WALZ,EALF,CAYGjB,CAAC,CAAC,eAAD,CAZJ,CADF,CADF,CADF,CADF,CADF,cAuBE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,kBAAf,eACE,+BACGG,KAAK,CAACe,SAAN,CAAgBC,OAAhB,cACA,oBAAC,eAAD,MADA,cAGC,oBAAC,GAAD,MACGhB,KAAK,CAACe,SAAN,CAAgBE,IAAhB,CAAqBC,WAArB,EAAoClB,KAAK,CAACe,SAAN,CAAgBE,IAAhB,CAAqBC,WAArB,CAAiCC,MAAjC,CAA0C,CAA9E,CACCnB,KAAK,CAACe,SAAN,CAAgBE,IAAhB,CAAqBC,WAArB,CAAiCE,GAAjC,CAAqC,SAACC,UAAD,qBACnC,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,CAAjB,CAAoB,EAAE,CAAE,CAAxB,CAA2B,EAAE,CAAE,EAA/B,eACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,6BAAf,eACE,2BAAK,SAAS,CAAC,6BAAf,eACE,oBAAC,IAAD,EACE,EAAE,CACA,IACAA,UAAU,CAACC,WAAX,CAAuBC,cAH3B,eAME,2BAAK,SAAS,CAAC,kBAAf,eACE,oBAAC,KAAD,EACE,SAAS,CAAC,gBADZ,CAEE,GAAG,CAAEF,UAAU,CAACC,WAAX,CAAuBE,KAF9B,EADF,CANF,CADF,cAcE,2BAAK,SAAS,CAAC,yBAAf,eACE,oBAAC,IAAD,EACE,EAAE,CACA,IACAH,UAAU,CAACC,WAAX,CAAuBC,cAH3B,eAME,4BAAM,SAAS,CAAC,yBAAhB,eACE,oBAAC,KAAD,EACE,GAAG,CAAEF,UAAU,CAACC,WAAX,CAAuBG,OAD9B,CAEE,SAAS,CAAC,EAFZ,EADF,CANF,CADF,cAcE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,yBAAf,eACE,2BAAK,SAAS,CAAC,kCAAf,eACE,oBAAC,QAAD,EAAU,SAAS,CAAC,8BAApB,eACE,oBAAC,QAAD,CAAU,MAAV,EACE,SAAS,CAAC,oCADZ,CAEE,IAAI,CAAC,QAFP,CAGE,EAAE,CAAC,gBAHL,eAKE,oBAAC,KAAD,EACE,GAAG,CACDb,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CACA,8CAHJ,CAKE,SAAS,CAAC,yBALZ,EALF,CADF,cAcE,oBAAC,QAAD,CAAU,IAAV,EAAe,SAAS,CAAC,mCAAzB,eACE,oBAAC,eAAD,EACE,IAAI,CACFO,UAAU,CAACC,WAAX,CACGI,UAHP,CAKE,MAAM,CAAElB,MALV,eAOE,oBAAC,KAAD,EAAO,EAAE,CAAC,IAAV,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,EACG,GADH,CAEGX,CAAC,CACA,sBADA,CAFJ,CAIK,GAJL,CADF,CAPF,CADF,cAkBE,oBAAC,KAAD,EAAO,EAAE,CAAC,IAAV,eACE,oBAAC,IAAD,EACE,EAAE,CAAC,GADL,CAEE,OAAO,CAAE,iBAACM,KAAD,QACPD,CAAAA,eAAe,CACbC,KADa,CAEb,WAFa,CAGbkB,UAAU,CAACC,WAAX,CACGjB,OAJU,CADR,EAFX,EAWGR,CAAC,CAAC,SAAD,CAXJ,CADF,CAlBF,CAdF,CADF,CADF,CADF,cAsDE,2BAAK,SAAS,CAAC,uBAAf,eACE,2BAAK,SAAS,CAAC,wBAAf,eACE,2BAAK,SAAS,CAAC,mBAAf,eACE,oBAAC,IAAD,EACE,EAAE,CACAwB,UAAU,CAACC,WAAX,CACGC,cAHP,eAME,2BAAK,SAAS,CAAC,oBAAf,EACGF,UAAU,CAACC,WAAX,CAAuBK,IAD1B,CACgC,GADhC,CAEGN,UAAU,CAACC,WAAX,CACEM,iBADF,EACuB,CADvB,cAEC,oBAAC,qBAAD,MAFD,CAGG,IALN,CANF,CADF,CADF,cAiBE,2BAAK,SAAS,CAAC,mBAAf,eACE,oBAAC,IAAD,EACE,EAAE,CACA,IACAP,UAAU,CAACC,WAAX,CACGC,cAJP,CAME,SAAS,CAAC,0BANZ,eAQE,2BAAK,SAAS,CAAC,kBAAf,MAGIF,UAAU,CAACC,WAAX,CACGO,QAJP,CARF,CADF,CAjBF,CADF,cAsCE,2BAAK,SAAS,CAAC,qBAAf,eACE,oBAAC,eAAD,EACE,IAAI,CACFR,UAAU,CAACC,WAAX,CACGI,UAHP,CAKE,MAAM,CAAElB,MALV,eAOE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mEAFZ,eAIE,oBAAC,KAAD,EACE,GAAG,CAAC,+BADN,CAEE,SAAS,CAAC,YAFZ,EAJF,CAPF,CADF,CAtCF,CAtDF,CAdF,CAdF,cA8IE,2BAAK,SAAS,CAAC,+BAAf,eACE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,gCAFZ,CAGE,OAAO,CAAE,iBAACL,KAAD,QACPD,CAAAA,eAAe,CACbC,KADa,CAEb,WAFa,CAGbkB,UAAU,CAACC,WAAX,CAAuBjB,OAHV,CADR,EAHX,eAWE,4BAAM,SAAS,CAAC,YAAhB,EACGR,CAAC,CAAC,SAAD,CADJ,CAXF,CADF,CA9IF,CADF,CADF,CADF,CADmC,EAArC,CADD,cA0KC,oBAAC,WAAD,MA3KJ,CAJJ,CADF,CADF,CADF,CAvBF,CADF,CADF,CADF,CADF,CA0ND,CAhPD,CAkPA,GAAMiC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAAY,CACjChB,SAAS,CAAEgB,KAAK,CAACC,KAAN,CAAYC,UADU,CAAZ,EAAvB,CAIA,QAASC,CAAAA,kBAAT,CAA4BjC,QAA5B,CAAsC,CACpC,MAAO,CAAEA,QAAQ,CAARA,QAAF,CAAP,CACD,CAED,cAAeb,CAAAA,OAAO,CACpB0C,cADoB,CAEpBI,kBAFoB,CAAP,CAGbtC,SAAS,CAACG,gBAAD,CAHI,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n  Image,\n  Media,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchBlockUsersStart } from \"../../../store/actions/UserAction\";\nimport { saveBlockUserStart } from \"../../../store/actions/UserAction\";\nimport { getSuccessNotificationMessage } from \"../../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport NoDataFound from \"../../NoDataFound/NoDataFound\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport VerifiedBadgeNoShadow from \"../../Handlers/VerifiedBadgeNoShadow\";\nimport { translate, t } from \"react-multi-lang\";\nimport FollowingLoader from \"../../Loader/FollowingLoader\";\n\nconst BlockedUserIndex = (props) => {\n  useEffect(() => {\n    props.dispatch(fetchBlockUsersStart());\n  }, []);\n\n  const handleBlockUser = (event, status, user_id) => {\n    event.preventDefault();\n    props.dispatch(\n      saveBlockUserStart({\n        user_id: user_id,\n        is_other_profile: 1,\n      })\n    );\n  };\n\n  const onCopy = (event) => {\n    const notificationMessage = getSuccessNotificationMessage(\n      t('profile_link_copied')\n    );\n    props.dispatch(createNotification(notificationMessage));\n  };\n\n  return (\n    <div className=\"lists\">\n      <Container>\n        <Row>\n          <Col sm={12} md={12} xs={12}>\n            <div className=\"profile-post-area\">\n              <div className=\"bookmarkes-list bookmarks-right-side\">\n                <div className=\"pull-left\">\n                  <h3>\n                    <Link\n                      className=\"bookmarkes-list\"\n                      to={\"/home\"}\n                      onClick={() => props.history.goBack()}\n                    >\n                      <Image\n                        src={\n                          window.location.origin +\n                          \"/assets/images/icons/back.svg\"\n                        }\n                        className=\"svg-clone\"\n                      />\n                      {t(\"blocked_users\")}\n                    </Link>\n                  </h3>\n                </div>\n              </div>\n            </div>\n            <div className=\"listing-tab\">\n              <div className=\"tab\">\n                <div className=\"tab-content tabs\">\n                  <div>\n                    {props.followers.loading ? (\n                     <FollowingLoader/>\n                    ) : (\n                      <Row>\n                        {props.followers.data.block_users && props.followers.data.block_users.length > 0 ? (\n                          props.followers.data.block_users.map((block_user) => (\n                            <Col sm={12} md={6} lg={4} xs={12}>\n                              <div className=\"follower-lists\">\n                                <div className=\"follower-subscription-lists\">\n                                  <div className=\"follower-subscription-inner\">\n                                    <Link\n                                      to={\n                                        `/` +\n                                        block_user.blockeduser.user_unique_id\n                                      }\n                                    >\n                                      <div className=\"follower-wrapper\">\n                                        <Image\n                                          className=\"follower-cover\"\n                                          src={block_user.blockeduser.cover}\n                                        />\n                                      </div>\n                                    </Link>\n                                    <div className=\"follower-profile-header\">\n                                      <Link\n                                        to={\n                                          `/` +\n                                          block_user.blockeduser.user_unique_id\n                                        }\n                                      >\n                                        <span className=\"follower-profile-avatar\">\n                                          <Image\n                                            src={block_user.blockeduser.picture}\n                                            className=\"\"\n                                          />\n                                        </span>\n                                      </Link>\n                                      <div className=\"follower-info\">\n                                        <div className=\"follower-profile-status\">\n                                          <div className=\"follower-profile-toggle-dropdown\">\n                                            <Dropdown className=\"btn dropdown-toggle btn-link\">\n                                              <Dropdown.Toggle\n                                                className=\"user-dropdown-dots dropdown-toggle\"\n                                                type=\"button\"\n                                                id=\"dropdown-basic\"\n                                              >\n                                                <Image\n                                                  src={\n                                                    window.location.origin +\n                                                    \"/assets/images/icons/vertical-dots-white.svg\"\n                                                  }\n                                                  className=\"svg-clone vertical-dots\"\n                                                />\n                                              </Dropdown.Toggle>\n                                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                                <CopyToClipboard\n                                                  text={\n                                                    block_user.blockeduser\n                                                      .share_link\n                                                  }\n                                                  onCopy={onCopy}\n                                                >\n                                                  <Media as=\"li\">\n                                                    <Link to=\"#\">\n                                                      {\" \"}\n                                                      {t(\n                                                        \"copy_link_to_profile\"\n                                                      )}{\" \"}\n                                                    </Link>\n                                                  </Media>\n                                                </CopyToClipboard>\n\n                                                <Media as=\"li\">\n                                                  <Link\n                                                    to=\"#\"\n                                                    onClick={(event) =>\n                                                      handleBlockUser(\n                                                        event,\n                                                        \"unblocked\",\n                                                        block_user.blockeduser\n                                                          .user_id\n                                                      )\n                                                    }\n                                                  >\n                                                    {t(\"unblock\")}\n                                                  </Link>\n                                                </Media>\n                                              </Dropdown.Menu>\n                                            </Dropdown>\n                                          </div>\n                                        </div>\n                                        <div className=\"follower-wrapper-name\">\n                                          <div className=\"follower-profile-names\">\n                                            <div className=\"follower-name-row\">\n                                              <Link\n                                                to={\n                                                  block_user.blockeduser\n                                                    .user_unique_id\n                                                }\n                                              >\n                                                <div className=\"follower-user-name\">\n                                                  {block_user.blockeduser.name}{\" \"}\n                                                  {block_user.blockeduser\n                                                    .is_verified_badge == 1 ? (\n                                                    <VerifiedBadgeNoShadow />\n                                                  ) : null}\n                                                </div>\n                                              </Link>\n                                            </div>\n                                            <div className=\"follower-name-row\">\n                                              <Link\n                                                to={\n                                                  `/` +\n                                                  block_user.blockeduser\n                                                    .user_unique_id\n                                                }\n                                                className=\"g-user-realname__wrapper\"\n                                              >\n                                                <div className=\"follower-user-id\">\n                                                  @\n                                                  {\n                                                    block_user.blockeduser\n                                                      .username\n                                                  }\n                                                </div>\n                                              </Link>\n                                            </div>\n                                          </div>\n\n                                          <div className=\"group-follower-btns\">\n                                            <CopyToClipboard\n                                              text={\n                                                block_user.blockeduser\n                                                  .share_link\n                                              }\n                                              onCopy={onCopy}\n                                            >\n                                              <Button\n                                                type=\"button\"\n                                                className=\"g-btn m-rounded m-border m-icon m-icon-only m-colored has-tooltip\"\n                                              >\n                                                <Image\n                                                  src=\"assets/images/icons/share.svg\"\n                                                  className=\"svg-clone \"\n                                                />\n                                              </Button>\n                                            </CopyToClipboard>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className=\"lists-button-group post-icons\">\n                                      <Button\n                                        type=\"button\"\n                                        className=\"btn gradient-btn gradientcolor\"\n                                        onClick={(event) =>\n                                          handleBlockUser(\n                                            event,\n                                            \"unblocked\",\n                                            block_user.blockeduser.user_id\n                                          )\n                                        }\n                                      >\n                                        <span className=\"b-btn-text\">\n                                          {t(\"unblock\")}\n                                        </span>\n                                      </Button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </Col>\n                          ))\n                        ) : (\n                          <NoDataFound></NoDataFound>\n                        )}\n                      </Row>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  followers: state.users.blockUsers,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(BlockedUserIndex));\n"]},"metadata":{},"sourceType":"module"}