{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from\"react\";import{EditorState,convertToRaw,Modifier}from\"draft-js\";import Editor from\"draft-js-plugins-editor\";import createMentionPlugin,{defaultSuggestionsFilter}from\"draft-js-mention-plugin\";import\"draft-js/dist/Draft.css\";import\"draft-js-mention-plugin/lib/plugin.css\";import{connect}from\"react-redux\";import{searchUserStart}from\"../../../store/actions/HomeAction\";import{translate,t}from\"react-multi-lang\";import{stateToHTML}from\"draft-js-export-html\";import{Picker,EmojiData}from\"emoji-mart\";import\"emoji-mart/css/emoji-mart.css\";import{useEffect}from\"react\";import createHashtagPlugin from\"draft-js-hashtag-plugin\";import\"draft-js-hashtag-plugin/lib/plugin.css\";import createLinkifyPlugin from\"draft-js-linkify-plugin\";import\"draft-js-linkify-plugin/lib/plugin.css\";import draftToHtml from\"draftjs-to-html\";var hashtagPlugin=createHashtagPlugin();var linkifyPlugin=createLinkifyPlugin();var mentionPlugin=createMentionPlugin();var MentionSuggestions=mentionPlugin.MentionSuggestions;var plugins=[mentionPlugin,linkifyPlugin,hashtagPlugin];export var PostEditor=function PostEditor(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),suggestions=_useState2[0],setSuggestions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),mentions=_useState4[0],setMentions=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),focusStyle=_useState6[0],setFocusStyle=_useState6[1];// Draft-JS editor configuration\nvar _useState7=useState(function(){return EditorState.createEmpty();}),_useState8=_slicedToArray(_useState7,2),editorState=_useState8[0],setEditorState=_useState8[1];useEffect(function(){if(props.editorState){var content=convertToRaw(props.editorState.getCurrentContent()).blocks;props.getEditorRawContent(content.map(function(block){return!block.text.trim()&&\"\\n\"||block.text;}).join(\"\\n\"));props.getEditorHtmlContent(tohtml());}},[]);var editor=useRef(null);var tohtml=function tohtml(){var contentState=props.editorState?props.editorState.getCurrentContent():editorState.getCurrentContent();var raw=convertToRaw(contentState);var host=window.location.origin;// let options = {\n//   entityStyleFn: (entity) => {\n//     const entityType = entity.get(\"type\").toLowerCase();\n//     console.log(entity)\n//     if (entityType === \"mention\") {\n//       const data = entity.getData();\n//       return {\n//         element: \"a\",\n//         attributes: {\n//           href: `${host}/${data.mention.link}`,\n//         },\n//         style: {\n//           paddingRight: \"5px\",\n//         },\n//       };\n//     }\n//   },\n// };\n// let html =  stateToHTML(contentState, options);\n// console.log(html)\nvar hashConfig={trigger:\"#\",separator:\" \"};var customEntityTransform=function customEntityTransform(entity,text){if(entity.type!==\"mention\")return;return\"<a href=\\\"\".concat(host,\"/\").concat(entity.data.mention.link,\"\\\">\").concat(text,\"</a>\");};var rawContentState=raw;return draftToHtml(rawContentState,hashConfig,false,customEntityTransform);//return stateToHTML(contentState, options);\n};// Check editor text for mentions\nvar onSearchChange=function onSearchChange(_ref){var value=_ref.value;props.dispatch(searchUserStart({key:value}));console.log(value);var fetchedData=props.searchUser.data.users;var newData=[];fetchedData&&fetchedData.map(function(user){return newData.push({id:user.user_id,name:\"@\".concat(user.name),link:user.user_unique_id,avatar:user.picture});});// console.log(newData)\nprops.searchUser.data.users&&setMentions(newData);setSuggestions(defaultSuggestionsFilter(value,mentions));};var onAddMention=function onAddMention(){};// Focus on editor window\nvar focusEditor=function focusEditor(){// editor.current.focus();\nsetFocusStyle(true);};//blur handler\nvar blurEditor=function blurEditor(){setFocusStyle(false);};var handleChange=function handleChange(editorState){props.setEditorState!=undefined?props.setEditorState(editorState):setEditorState(editorState);props.getEditorHtmlContent(tohtml());};return/*#__PURE__*/React.createElement(\"div\",{onFocus:function onFocus(){return focusEditor();},onBlur:function onBlur(){return blurEditor();},className:focusStyle?\"hasFocus active\":\"hasFocus\"},/*#__PURE__*/React.createElement(Editor,{ref:editor,editorState:props.editorState!=undefined?props.editorState:editorState,plugins:plugins,onChange:function onChange(editorState){return handleChange(editorState);},placeholder:props.placeholder?props.placeholder:t(\"new_post_placeholder\")}),/*#__PURE__*/React.createElement(MentionSuggestions,{onSearchChange:onSearchChange,suggestions:mentions,onAddMention:onAddMention}));};var mapStateToPros=function mapStateToPros(state){return{searchUser:state.home.searchUser};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{dispatch:dispatch};};export default connect(mapStateToPros,mapDispatchToProps)(translate(PostEditor));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Post/postMentions/PostEditor.jsx"],"names":["React","useState","useRef","EditorState","convertToRaw","Modifier","Editor","createMentionPlugin","defaultSuggestionsFilter","connect","searchUserStart","translate","t","stateToHTML","Picker","EmojiData","useEffect","createHashtagPlugin","createLinkifyPlugin","draftToHtml","hashtagPlugin","linkifyPlugin","mentionPlugin","MentionSuggestions","plugins","PostEditor","props","suggestions","setSuggestions","mentions","setMentions","focusStyle","setFocusStyle","createEmpty","editorState","setEditorState","content","getCurrentContent","blocks","getEditorRawContent","map","block","text","trim","join","getEditorHtmlContent","tohtml","editor","contentState","raw","host","window","location","origin","hashConfig","trigger","separator","customEntityTransform","entity","type","data","mention","link","rawContentState","onSearchChange","value","dispatch","key","console","log","fetchedData","searchUser","users","newData","user","push","id","user_id","name","user_unique_id","avatar","picture","onAddMention","focusEditor","blurEditor","handleChange","undefined","placeholder","mapStateToPros","state","home","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { EditorState, convertToRaw, Modifier } from \"draft-js\";\nimport Editor from \"draft-js-plugins-editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"draft-js-mention-plugin\";\nimport \"draft-js/dist/Draft.css\";\nimport \"draft-js-mention-plugin/lib/plugin.css\";\nimport { connect } from \"react-redux\";\nimport { searchUserStart } from \"../../../store/actions/HomeAction\";\nimport { translate, t } from \"react-multi-lang\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { useEffect } from \"react\";\nimport createHashtagPlugin from \"draft-js-hashtag-plugin\";\nimport \"draft-js-hashtag-plugin/lib/plugin.css\";\nimport createLinkifyPlugin from \"draft-js-linkify-plugin\";\nimport \"draft-js-linkify-plugin/lib/plugin.css\";\nimport draftToHtml from \"draftjs-to-html\";\n\nconst hashtagPlugin = createHashtagPlugin();\nconst linkifyPlugin = createLinkifyPlugin();\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [mentionPlugin, linkifyPlugin, hashtagPlugin];\n\nexport const PostEditor = (props) => {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const [mentions, setMentions] = useState([]);\n\n  const [focusStyle, setFocusStyle] = useState(false);\n\n  // Draft-JS editor configuration\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  useEffect(() => {\n    if (props.editorState) {\n      const content = convertToRaw(\n        props.editorState.getCurrentContent()\n      ).blocks;\n      props.getEditorRawContent(\n        content\n          .map((block) => (!block.text.trim() && \"\\n\") || block.text)\n          .join(\"\\n\")\n      );\n      props.getEditorHtmlContent(tohtml());\n    }\n  }, []);\n\n  const editor = useRef(null);\n\n  const tohtml = () => {\n    const contentState = props.editorState\n      ? props.editorState.getCurrentContent()\n      : editorState.getCurrentContent();\n    const raw = convertToRaw(contentState);\n\n    var host = window.location.origin;\n\n    // let options = {\n    //   entityStyleFn: (entity) => {\n    //     const entityType = entity.get(\"type\").toLowerCase();\n    //     console.log(entity)\n    //     if (entityType === \"mention\") {\n    //       const data = entity.getData();\n    //       return {\n    //         element: \"a\",\n    //         attributes: {\n    //           href: `${host}/${data.mention.link}`,\n    //         },\n    //         style: {\n    //           paddingRight: \"5px\",\n    //         },\n    //       };\n    //     }\n    //   },\n    // };\n\n    // let html =  stateToHTML(contentState, options);\n\n    // console.log(html)\n\n    const hashConfig = {\n      trigger: \"#\",\n      separator: \" \",\n    };\n\n    const customEntityTransform = (entity, text) => {\n      if (entity.type !== \"mention\") return;\n      return `<a href=\"${host}/${entity.data.mention.link}\">${text}</a>`;\n    };\n\n    const rawContentState = raw;\n\n    return draftToHtml(\n      rawContentState,\n      hashConfig,\n      false,\n      customEntityTransform\n    );\n\n    //return stateToHTML(contentState, options);\n  };\n\n  // Check editor text for mentions\n  const onSearchChange = ({ value }) => {\n    props.dispatch(searchUserStart({ key: value }));\n    console.log(value);\n\n    let fetchedData = props.searchUser.data.users;\n\n    var newData = [];\n\n    fetchedData &&\n      fetchedData.map((user) =>\n        newData.push({\n          id: user.user_id,\n          name: `@${user.name}`,\n          link: user.user_unique_id,\n          avatar: user.picture,\n        })\n      );\n\n    // console.log(newData)\n\n    props.searchUser.data.users && setMentions(newData);\n\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  };\n\n  const onAddMention = () => {};\n\n  // Focus on editor window\n  const focusEditor = () => {\n    // editor.current.focus();\n    setFocusStyle(true);\n  };\n\n  //blur handler\n  const blurEditor = () => {\n    setFocusStyle(false);\n  };\n\n  const handleChange = (editorState) => {\n    props.setEditorState != undefined\n      ? props.setEditorState(editorState)\n      : setEditorState(editorState);\n    props.getEditorHtmlContent(tohtml());\n  };\n\n  return (\n    <div\n      onFocus={() => focusEditor()}\n      onBlur={() => blurEditor()}\n      className={focusStyle ? \"hasFocus active\" : \"hasFocus\"}\n    >\n      <Editor\n        ref={editor}\n        editorState={\n          props.editorState != undefined ? props.editorState : editorState\n        }\n        plugins={plugins}\n        onChange={(editorState) => handleChange(editorState)}\n        placeholder={\n          props.placeholder ? props.placeholder : t(\"new_post_placeholder\")\n        }\n      ></Editor>\n      <MentionSuggestions\n        onSearchChange={onSearchChange}\n        suggestions={mentions}\n        onAddMention={onAddMention}\n      />\n    </div>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  searchUser: state.home.searchUser,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return { dispatch };\n};\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(PostEditor));\n"]},"metadata":{},"sourceType":"module"}