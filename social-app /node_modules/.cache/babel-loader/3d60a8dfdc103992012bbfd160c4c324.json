{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_POST_LIKED_START, SAVE_POST_LIKE_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchPostLikedFailure, fetchPostLikedSuccess, savePostLikeFailure, savePostLikeSuccess } from \"../actions/PostLikesAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* savePostLikesAPI() {\n  try {\n    const inputData = yield select(state => state.postLike.saveLike.inputData);\n    const response = yield api.postMethod(\"post_likes_save\", inputData);\n\n    if (response.data.success) {\n      yield put(savePostLikeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(savePostLikeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(savePostLikeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchPostLikesAPI() {\n  try {\n    const inputData = yield select(state => state.postLike.saveLike.inputData);\n    const response = yield api.postMethod(\"post_likes\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchPostLikedSuccess(response.data.data));\n    } else {\n      yield put(fetchPostLikedFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchPostLikedFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(SAVE_POST_LIKE_START, savePostLikesAPI)]);\n  yield all([yield takeLatest(FETCH_POST_LIKED_START, fetchPostLikesAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/PostLikesSaga.jsx"],"names":["call","select","put","takeLatest","all","api","FETCH_POST_LIKED_START","SAVE_POST_LIKE_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchPostLikedFailure","fetchPostLikedSuccess","savePostLikeFailure","savePostLikeSuccess","checkLogoutStatus","savePostLikesAPI","inputData","state","postLike","saveLike","response","postMethod","data","success","notificationMessage","message","error","fetchPostLikesAPI","pageSaga"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  FETCH_POST_LIKED_START,\n  SAVE_POST_LIKE_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchPostLikedFailure,\n  fetchPostLikedSuccess,\n  savePostLikeFailure,\n  savePostLikeSuccess,\n} from \"../actions/PostLikesAction\";\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* savePostLikesAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.postLike.saveLike.inputData\n    );\n    const response = yield api.postMethod(\"post_likes_save\", inputData);\n    if (response.data.success) {\n      yield put(savePostLikeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(savePostLikeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(savePostLikeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchPostLikesAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.postLike.saveLike.inputData\n    );\n    const response = yield api.postMethod(\"post_likes\", inputData);\n    if (response.data.success) {\n      yield put(fetchPostLikedSuccess(response.data.data));\n    } else {\n      yield put(fetchPostLikedFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchPostLikedFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(SAVE_POST_LIKE_START, savePostLikesAPI)]);\n  yield all([yield takeLatest(FETCH_POST_LIKED_START, fetchPostLikesAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}