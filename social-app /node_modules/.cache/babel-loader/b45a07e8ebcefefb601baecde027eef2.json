{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/GoLiveModal.jsx\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Image, Modal, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport { videoCallBroadcastStart } from \"../../store/actions/LiveVideoAction\";\n\nconst GoLiveModal = props => {\n  const [inputData, setInputData] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState(0);\n\n  const paymentStatusOnchange = event => {\n    setInputData({ ...inputData,\n      payment_status: event\n    });\n    setPaymentStatus(event);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.dispatch(videoCallBroadcastStart(inputData));\n    props.closeGoLiveModal();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal-dialog-center sent-tip-modal go-live-modal\",\n    size: \"lg\",\n    centered: true,\n    show: props.goLive,\n    onHide: props.closeGoLiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, props.goLive === true ? /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, t(\"go_live\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"go-live-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"go-live-img\",\n    src: window.location.origin + \"/assets/images/go-live-img.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-userinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"g-avatar online_status_class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: props.userPicture,\n    alt: props.name,\n    className: \"tips__user__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-userinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-username-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pop-username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, props.name, \" \", props.is_verified_badge == 1 ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"verified-badge\",\n    alt: \"verified-badge\",\n    src: configuration.get(\"configData.verified_badge_file\") ? configuration.get(\"configData.verified_badge_file\") : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-username-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pop-username popuser-realname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pop-user-username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"@\", props.username))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"floating-form go-live-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"choose-payment-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, t(\"title\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"title\"),\n    value: inputData.title ? inputData.title : null,\n    onChange: event => setInputData({ ...inputData,\n      title: event.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"choose-payment-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, t(\"choose_streaming_mode\")), [\"radio\"].map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: `custom-inline-${type}`,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    custom: true,\n    inline: true,\n    label: \"Public\",\n    type: type,\n    id: \"public\",\n    value: \"public\",\n    name: \"type\" // defaultChecked={true}\n    ,\n    onChange: event => setInputData({ ...inputData,\n      type: \"public\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    custom: true,\n    inline: true,\n    label: \"Private\",\n    type: type // id={`custom-inline-${type}-2`}\n    ,\n    id: \"private\",\n    value: \"private\",\n    name: \"type\",\n    onChange: event => setInputData({ ...inputData,\n      type: \"private\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"choose-payment-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, t(\"payment_status\")), [\"radio\"].map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: `custom-inline-${type}`,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    custom: true,\n    inline: true,\n    label: \"Free\",\n    type: type,\n    id: \"free\",\n    value: \"0\",\n    name: \"payment_status\" // defaultChecked={true}\n    ,\n    onChange: event => {\n      paymentStatusOnchange(event.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    custom: true,\n    inline: true,\n    label: \"Paid\",\n    type: type // id={`custom-inline-${type}-2`}\n    ,\n    id: \"paid\",\n    value: \"1\",\n    name: \"payment_status\",\n    onChange: event => {\n      paymentStatusOnchange(event.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  })))), paymentStatus == 1 ?\n  /*#__PURE__*/\n  // <div className=\"floating-label mb-4\">\n  //   <input\n  //     className=\"floating-input\"\n  //     type=\"number\"\n  //     min=\"0\"\n  //     step=\"any\"\n  //     value={inputData.amount ? inputData.amount : null}\n  //     onChange={(event) =>\n  //       setInputData({\n  //         ...inputData,\n  //         amount: event.currentTarget.value,\n  //       })\n  //     }\n  //   />\n  //   <span className=\"highlight\"></span>\n  //   <label className=\"default-label\">{t(\"amount\")}</label>\n  // </div>\n  React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"choose-payment-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, t(\"amount\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    min: \"0\",\n    step: \"any\",\n    value: inputData.amount ? inputData.amount : null,\n    onChange: event => setInputData({ ...inputData,\n      amount: event.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"choose-payment-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }, t(\"description\"), \" (\", t(\"optional\"), \")\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: 2,\n    className: \"height-auto\",\n    value: inputData.description ? inputData.description : null,\n    placeholder: t(\"go_live_description_placeholder\"),\n    onChange: event => setInputData({ ...inputData,\n      description: event.currentTarget.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  })))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closeGoLiveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, t(\"cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    onClick: handleSubmit,\n    disabled: props.videocall.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, props.videocall.loadingButtonContent !== null ? props.videocall.loadingButtonContent : t(\"go_live\")))) : null));\n};\n\nconst mapStateToPros = state => ({\n  videocall: state.videocall.saveVideoCallRequest\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(GoLiveModal));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/GoLiveModal.jsx"],"names":["React","useState","Form","Button","Image","Modal","Row","Col","connect","configuration","translate","t","videoCallBroadcastStart","GoLiveModal","props","inputData","setInputData","paymentStatus","setPaymentStatus","paymentStatusOnchange","event","payment_status","handleSubmit","preventDefault","dispatch","closeGoLiveModal","goLive","window","location","origin","userPicture","name","is_verified_badge","get","username","title","currentTarget","value","map","type","amount","description","videocall","buttonDisable","loadingButtonContent","mapStateToPros","state","saveVideoCallRequest","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Image, Modal, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport { videoCallBroadcastStart } from \"../../store/actions/LiveVideoAction\";\n\nconst GoLiveModal = (props) => {\n  const [inputData, setInputData] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState(0);\n\n  const paymentStatusOnchange = (event) => {\n    setInputData({\n      ...inputData,\n      payment_status: event,\n    });\n    setPaymentStatus(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(videoCallBroadcastStart(inputData));\n    props.closeGoLiveModal();\n  };\n  return (\n    <>\n      <Modal\n        className=\"modal-dialog-center sent-tip-modal go-live-modal\"\n        size=\"lg\"\n        centered\n        show={props.goLive}\n        onHide={props.closeGoLiveModal}\n      >\n        {props.goLive === true ? (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"go_live\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Row>\n                <Col md={6}>\n                  <div className=\"go-live-img-sec\">\n                    <Image\n                        className=\"go-live-img\"\n                        src={\n                            window.location.origin + \"/assets/images/go-live-img.svg\"\n                        }\n                    />\n                  </div>\n                </Col>\n                <Col md={6}>\n                <div className=\"header-userinfo\">\n                  <div className=\"g-avatar online_status_class\">\n                    <Image\n                      src={props.userPicture}\n                      alt={props.name}\n                      className=\"tips__user__img\"\n                    />\n                  </div>\n                  <div className=\"body-userinfo\">\n                    <div className=\"popup-username-row\">\n                      <div className=\"pop-username\">\n                        <div className=\"\">\n                          {props.name}{\" \"}\n                          {props.is_verified_badge == 1 ? (\n                            <img\n                              className=\"verified-badge\"\n                              alt=\"verified-badge\"\n                              src={\n                                configuration.get(\n                                  \"configData.verified_badge_file\"\n                                )\n                                  ? configuration.get(\n                                      \"configData.verified_badge_file\"\n                                    )\n                                  : \"\"\n                              }\n                            />\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"popup-username-row\">\n                      <span className=\"pop-username popuser-realname\">\n                        <div className=\"pop-user-username\">@{props.username}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"floating-form go-live-form\">\n                  {/* <div className=\"floating-label mb-4\">\n                    <input\n                      className=\"floating-input\"\n                      type=\"text\"\n                      placeholder={t(\"title\")}\n                      value={inputData.title ? inputData.title : null}\n                      onChange={(event) =>\n                        setInputData({\n                          ...inputData,\n                          title: event.currentTarget.value,\n                        })\n                      }\n                    />\n                    <span className=\"highlight\"></span>\n                    <label className=\"default-label\">{t(\"title\")}</label>\n                  </div> */}\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label className=\"choose-payment-label\">{t(\"title\")}</Form.Label>\n                    <Form.Control type=\"text\" placeholder={t(\"title\")}\n                      value={inputData.title ? inputData.title : null}\n                      onChange={(event) =>\n                        setInputData({\n                          ...inputData,\n                          title: event.currentTarget.value,\n                        })\n                      } />\n                  </Form.Group>\n                  <Form>\n                    <label className=\"choose-payment-label\">\n                      {t(\"choose_streaming_mode\")}\n                    </label>\n                    {[\"radio\"].map((type) => (\n                      <div key={`custom-inline-${type}`} className=\"mb-3\">\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Public\"\n                          type={type}\n                          id=\"public\"\n                          value=\"public\"\n                          name=\"type\"\n                          // defaultChecked={true}\n                          onChange={(event) =>\n                            setInputData({\n                              ...inputData,\n                              type: \"public\",\n                            })\n                          }\n                        />\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Private\"\n                          type={type}\n                          // id={`custom-inline-${type}-2`}\n                          id=\"private\"\n                          value=\"private\"\n                          name=\"type\"\n                          onChange={(event) =>\n                            setInputData({\n                              ...inputData,\n                              type: \"private\",\n                            })\n                          }\n                        />\n                      </div>\n                    ))}\n                  </Form>\n                  <Form>\n                    <label className=\"choose-payment-label\">\n                      {t(\"payment_status\")}\n                    </label>\n                    {[\"radio\"].map((type) => (\n                      <div key={`custom-inline-${type}`} className=\"mb-3\">\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Free\"\n                          type={type}\n                          id=\"free\"\n                          value=\"0\"\n                          name=\"payment_status\"\n                          // defaultChecked={true}\n                          onChange={(event) => {\n                            paymentStatusOnchange(event.currentTarget.value);\n                          }}\n                        />\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Paid\"\n                          type={type}\n                          // id={`custom-inline-${type}-2`}\n                          id=\"paid\"\n                          value=\"1\"\n                          name=\"payment_status\"\n                          onChange={(event) => {\n                            paymentStatusOnchange(event.currentTarget.value);\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </Form>\n\n                  {paymentStatus == 1 ? (\n                    // <div className=\"floating-label mb-4\">\n                    //   <input\n                    //     className=\"floating-input\"\n                    //     type=\"number\"\n                    //     min=\"0\"\n                    //     step=\"any\"\n                    //     value={inputData.amount ? inputData.amount : null}\n                    //     onChange={(event) =>\n                    //       setInputData({\n                    //         ...inputData,\n                    //         amount: event.currentTarget.value,\n                    //       })\n                    //     }\n                    //   />\n                    //   <span className=\"highlight\"></span>\n                    //   <label className=\"default-label\">{t(\"amount\")}</label>\n                    // </div>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                      <Form.Label className=\"choose-payment-label\">{t(\"amount\")}</Form.Label>\n                      <Form.Control  type=\"number\"\n                        min=\"0\"\n                        step=\"any\"\n                        value={inputData.amount ? inputData.amount : null}\n                        onChange={(event) =>\n                          setInputData({\n                            ...inputData,\n                            amount: event.currentTarget.value,\n                          })\n                        } />\n                    </Form.Group>\n                  ) : (\n                    \"\"\n                  )}\n                  {/* <div className=\"floating-label\">\n                    <input\n                      className=\"floating-input\"\n                      type=\"text\"\n                      value={inputData.description ? inputData.description : null}\n                      placeholder={t(\"go_live_description_placeholder\")}\n                      onChange={(event) =>\n                        setInputData({\n                          ...inputData,\n                          description: event.currentTarget.value,\n                        })\n                      }\n                    />\n                    <span className=\"highlight\"></span>\n                    <label className=\"default-label\">\n                      {t(\"description\")} ({t(\"optional\")})\n                    </label>\n                  </div> */}\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                      <Form.Label className=\"choose-payment-label\">{t(\"description\")} ({t(\"optional\")})</Form.Label>\n                      <Form.Control  as=\"textarea\" rows={2}\n                        className=\"height-auto\"\n                        value={inputData.description ? inputData.description : null}\n                        placeholder={t(\"go_live_description_placeholder\")}\n                        onChange={(event) =>\n                          setInputData({\n                            ...inputData,\n                            description: event.currentTarget.value,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                </div>\n                </Col>\n              </Row>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closeGoLiveModal}\n              >\n                {t(\"cancel\")}\n              </Button>\n              <Button\n                type=\"button\"\n                className=\"btn btn-success\"\n                data-dismiss=\"modal\"\n                onClick={handleSubmit}\n                disabled={props.videocall.buttonDisable}\n              >\n                {props.videocall.loadingButtonContent !== null\n                  ? props.videocall.loadingButtonContent\n                  : t(\"go_live\")}\n              </Button>\n            </Modal.Footer>\n          </Form>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  videocall: state.videocall.saveVideoCallRequest,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(GoLiveModal));\n"]},"metadata":{},"sourceType":"module"}