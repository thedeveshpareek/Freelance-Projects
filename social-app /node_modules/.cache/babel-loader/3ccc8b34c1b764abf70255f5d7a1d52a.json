{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { GET_REFERRAL_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { getReferralSuccess, getReferralFailure } from \"../actions/ReferralAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* getReferralAPI() {\n  try {\n    const response = yield api.postMethod(\"referral_code\");\n    yield put(getReferralSuccess(response.data.data));\n\n    if (response.data.success) {} else {\n      yield put(getReferralFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getReferralFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(GET_REFERRAL_START, getReferralAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/ReferralSaga.jsx"],"names":["call","select","put","takeLatest","all","api","GET_REFERRAL_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","getReferralSuccess","getReferralFailure","checkLogoutStatus","getReferralAPI","response","postMethod","data","success","error","notificationMessage","message","pageSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SACEC,kBADF,QAEO,2BAFP;AAGA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SACEC,6BADF,EAEEC,2BAFF,QAGO,6CAHP;AAIA,SACEC,kBADF,EAEEC,kBAFF,QAGO,2BAHP;AAIA,SACEC,iBADF,QAEO,wBAFP;;AAIA,UAAUC,cAAV,GAA2B;AACzB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,UAAJ,CAAe,eAAf,CAAvB;AACA,UAAMb,GAAG,CAACQ,kBAAkB,CAACI,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAnB,CAAT;;AACA,QAAIF,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B,CAC1B,CADD,MACO;AACL,YAAMf,GAAG,CAACS,kBAAkB,CAACG,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAAnB,CAAT;AACA,YAAMC,mBAAmB,GAAGV,2BAA2B,CACrDK,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAMhB,GAAG,CAACU,iBAAiB,CAACE,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACA,YAAMd,GAAG,CAACK,kBAAkB,CAACY,mBAAD,CAAnB,CAAT;AACD;AACF,GAZD,CAYE,OAAOD,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACS,kBAAkB,CAACO,KAAD,CAAnB,CAAT;AACA,UAAMC,mBAAmB,GAAGV,2BAA2B,CAACS,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMlB,GAAG,CAACK,kBAAkB,CAACY,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAMjB,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACG,kBAAD,EAAqBO,cAArB,CAAjB,CAAD,CAAT;AACD","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  GET_REFERRAL_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  getReferralSuccess,\n  getReferralFailure,\n} from \"../actions/ReferralAction\";\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* getReferralAPI() {\n  try {\n    const response = yield api.postMethod(\"referral_code\");\n    yield put(getReferralSuccess(response.data.data));\n    if (response.data.success) {\n    } else {\n      yield put(getReferralFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getReferralFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(GET_REFERRAL_START, getReferralAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}