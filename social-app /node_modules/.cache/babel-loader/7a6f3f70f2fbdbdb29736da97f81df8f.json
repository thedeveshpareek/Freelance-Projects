{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/CommentReplies.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport { Dropdown, Image, Media, Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { saveBookmarkStart } from \"../../store/actions/BookmarkAction\";\nimport { fetchCommentRepliesStart, saveCommentReplyStart } from \"../../store/actions/CommentsAction\";\nimport \"react-image-lightbox/style.css\";\nimport { translate, t } from \"react-multi-lang\";\nimport PostEditor from \"../Post/postMentions/PostEditor\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { EditorState, convertToRaw, Modifier } from \"draft-js\";\n\nconst CommentReplies = props => {\n  const {\n    commentReplies,\n    comment,\n    commentActiveIndex\n  } = props;\n  const [commentReplyInputData, setCommentReplyInputData] = useState({});\n  const mentionsRef = useRef();\n  const [editorContentState, setEditorContentstate] = useState(\"\");\n  const [editorHtmlContent, setEditorHtmlContent] = useState(\"\");\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n\n  const handleCommentReplySubmit = (event, comment) => {\n    event.preventDefault();\n    props.dispatch(saveCommentReplyStart({\n      reply: editorHtmlContent,\n      post_id: comment.post_id,\n      post_comment_id: comment.post_comment_id\n    }));\n    setCommentReplyInputData({});\n    props.dispatch(fetchCommentRepliesStart({\n      post_id: comment.post_id,\n      post_comment_id: comment.post_comment_id\n    }));\n  };\n\n  function triggerPicker(event) {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  } // const handleEmojiSelect = (emoji) => {\n  //   setEditorHtmlContent(editorHtmlContent + emoji.native);\n  //   setEditorContentstate(editorContentState + emoji.native);\n  //   SetEmojiPicker(false);\n  // };\n\n\n  const handleEmojiSelect = emoji => {\n    SetEmojiPicker(false);\n    setEditorState(insertCharacter(emoji.native, editorState));\n  };\n\n  const insertCharacter = (emoji, editorState) => {\n    const currentContent = editorState.getCurrentContent();\n    const currentSelection = editorState.getSelection();\n    const newContent = Modifier.insertText(currentContent, currentSelection, emoji);\n    const newEditorState = EditorState.push(editorState, newContent, \"insert-characters\");\n    return EditorState.forceSelection(newEditorState, newContent.getSelectionAfter());\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, commentActiveIndex == props.currentIndex && (commentReplies.loading ? \"Loading...\" : commentReplies.data.post_comment_replies.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, commentReplies.data.post_comment_replies.map((comment_reply, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-box\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/user.png\",\n    alt: \"\",\n    className: \"reply-user-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"reply-user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, comment_reply.user_displayname)), /*#__PURE__*/React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: comment_reply.reply != undefined ? comment_reply.reply : \"\"\n    },\n    className: \"reply-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-info-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled reply-info-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, comment_reply.created)))))))), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-text-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/user.png\",\n    alt: \"\",\n    className: \"reply-user-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    className: \"form-inline\",\n    action: \"\",\n    onSubmit: handleCommentReplySubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PostEditor, {\n    className: \"PostEditor__input\",\n    placeholder: \"Write a reply\",\n    ref: mentionsRef,\n    getEditorRawContent: setEditorContentstate,\n    getEditorHtmlContent: setEditorHtmlContent,\n    dispatch: props.dispatch,\n    editorState: editorState,\n    setEditorState: setEditorState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-reply-right-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled reply-action-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleCommentReplySubmit(event, comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"comment-send-icon\",\n    src: window.location.origin + \"/assets/images/icons/comment-send-icon.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"g-btn m-rounded emojiButtoon p-0 pr-2\",\n    onClick: triggerPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-smile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 27\n    }\n  }))), emojiPickerState && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emojiWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    title: \"\",\n    emoji: \"point_up\",\n    onSelect: emoji => handleEmojiSelect(emoji),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 14\n    }\n  })))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-text-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reply-user-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/user.png\",\n    alt: \"\",\n    className: \"reply-user-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    className: \"form-inline\",\n    action: \"\",\n    onSubmit: handleCommentReplySubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PostEditor, {\n    className: \"PostEditor__input\",\n    placeholder: \"Write a reply\",\n    ref: mentionsRef,\n    getEditorRawContent: setEditorContentstate,\n    getEditorHtmlContent: setEditorHtmlContent,\n    dispatch: props.dispatch,\n    editorState: editorState,\n    setEditorState: setEditorState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-reply-right-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled reply-action-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: event => handleCommentReplySubmit(event, comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-paper-plane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"g-btn m-rounded emojiButtoon p-0 pr-2\",\n    onClick: triggerPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-smile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 27\n    }\n  }))), emojiPickerState && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emojiWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    title: \"\",\n    emoji: \"point_up\",\n    onSelect: emoji => handleEmojiSelect(emoji),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }))))))));\n};\n\nconst mapStateToPros = state => ({\n  commentReplies: state.comment.commentReplies\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(CommentReplies));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/CommentReplies.jsx"],"names":["React","useRef","useState","Dropdown","Image","Media","Form","Button","InputGroup","FormControl","connect","Link","saveBookmarkStart","fetchCommentRepliesStart","saveCommentReplyStart","translate","t","PostEditor","Picker","EmojiData","EditorState","convertToRaw","Modifier","CommentReplies","props","commentReplies","comment","commentActiveIndex","commentReplyInputData","setCommentReplyInputData","mentionsRef","editorContentState","setEditorContentstate","editorHtmlContent","setEditorHtmlContent","emojiPickerState","SetEmojiPicker","editorState","setEditorState","createEmpty","handleCommentReplySubmit","event","preventDefault","dispatch","reply","post_id","post_comment_id","triggerPicker","handleEmojiSelect","emoji","insertCharacter","native","currentContent","getCurrentContent","currentSelection","getSelection","newContent","insertText","newEditorState","push","forceSelection","getSelectionAfter","currentIndex","loading","data","post_comment_replies","length","map","comment_reply","index","window","location","origin","user_displayname","__html","undefined","created","mapStateToPros","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SACEC,QADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,WAPF,QAQO,iBARP;AASA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SACEC,wBADF,EAEEC,qBAFF,QAGO,oCAHP;AAIA,OAAO,gCAAP;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,kBAA7B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,YAAlC;AACA,OAAO,+BAAP;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,QAApC,QAAoD,UAApD;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAkDH,KAAxD;AAEA,QAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoD3B,QAAQ,CAAC,EAAD,CAAlE;AAEA,QAAM4B,WAAW,GAAG7B,MAAM,EAA1B;AAEA,QAAM,CAAC8B,kBAAD,EAAqBC,qBAArB,IAA8C9B,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM,CAAC+B,iBAAD,EAAoBC,oBAApB,IAA4ChC,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM,CAACiC,gBAAD,EAAmBC,cAAnB,IAAqClC,QAAQ,CAAC,KAAD,CAAnD;AAED,QAAM,CAACmC,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,MAC9CkB,WAAW,CAACmB,WAAZ,EAD6C,CAA9C;;AAIC,QAAMC,wBAAwB,GAAG,CAACC,KAAD,EAAQf,OAAR,KAAoB;AACnDe,IAAAA,KAAK,CAACC,cAAN;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CACE7B,qBAAqB,CAAC;AACpB8B,MAAAA,KAAK,EAAEX,iBADa;AAEpBY,MAAAA,OAAO,EAAEnB,OAAO,CAACmB,OAFG;AAGpBC,MAAAA,eAAe,EAAEpB,OAAO,CAACoB;AAHL,KAAD,CADvB;AAOAjB,IAAAA,wBAAwB,CAAC,EAAD,CAAxB;AACAL,IAAAA,KAAK,CAACmB,QAAN,CACE9B,wBAAwB,CAAC;AACvBgC,MAAAA,OAAO,EAAEnB,OAAO,CAACmB,OADM;AAEvBC,MAAAA,eAAe,EAAEpB,OAAO,CAACoB;AAFF,KAAD,CAD1B;AAMD,GAhBD;;AAkBA,WAASC,aAAT,CAAuBN,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,cAAc,CAAC,CAACD,gBAAF,CAAd;AACD,GAtC+B,CAwChC;AACA;AACA;AACA;AACA;;;AAED,QAAMa,iBAAiB,GAAIC,KAAD,IAAW;AAClCb,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,cAAc,CAACY,eAAe,CAACD,KAAK,CAACE,MAAP,EAAed,WAAf,CAAhB,CAAd;AACD,GAHF;;AAKC,QAAMa,eAAe,GAAG,CAACD,KAAD,EAAQZ,WAAR,KAAwB;AAC9C,UAAMe,cAAc,GAAGf,WAAW,CAACgB,iBAAZ,EAAvB;AACA,UAAMC,gBAAgB,GAAGjB,WAAW,CAACkB,YAAZ,EAAzB;AAEA,UAAMC,UAAU,GAAGlC,QAAQ,CAACmC,UAAT,CACjBL,cADiB,EAEjBE,gBAFiB,EAGjBL,KAHiB,CAAnB;AAMA,UAAMS,cAAc,GAAGtC,WAAW,CAACuC,IAAZ,CACrBtB,WADqB,EAErBmB,UAFqB,EAGrB,mBAHqB,CAAvB;AAMA,WAAOpC,WAAW,CAACwC,cAAZ,CACLF,cADK,EAELF,UAAU,CAACK,iBAAX,EAFK,CAAP;AAID,GApBD;;AAsBA,sBACE,0CACGlC,kBAAkB,IAAIH,KAAK,CAACsC,YAA5B,KACErC,cAAc,CAACsC,OAAf,GACC,YADD,GAEGtC,cAAc,CAACuC,IAAf,CAAoBC,oBAApB,CAAyCC,MAAzC,GAAkD,CAAlD,gBACF,0CACGzC,cAAc,CAACuC,IAAf,CAAoBC,oBAApB,CAAyCE,GAAzC,CACC,CAACC,aAAD,EAAgBC,KAAhB,kBACE,uDACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,yBADhC;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,aAAa,CAACK,gBADjB,CADF,CADF,eAME;AACE,IAAA,uBAAuB,EAAE;AACvBC,MAAAA,MAAM,EACJN,aAAa,CAACxB,KAAd,IAAuB+B,SAAvB,GACIP,aAAa,CAACxB,KADlB,GAEI;AAJiB,KAD3B;AAOE,IAAA,SAAS,EAAC,eAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAeE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIwB,aAAa,CAACQ,OAAlB,CADF,CADF,CADF,CAfF,CARF,CADF,CAFH,CADH,EAsCK,GAtCL,eAuCE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEN,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,yBADhC;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,MAAM,EAAC,EAFT;AAGE,IAAA,QAAQ,EAAEhC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,GAAG,EAAEV,WAHP;AAIE,IAAA,mBAAmB,EAAEE,qBAJvB;AAKE,IAAA,oBAAoB,EAAEE,oBALxB;AAME,IAAA,QAAQ,EAAEV,KAAK,CAACmB,QANlB;AAOR,IAAA,WAAW,EAAEN,WAPL;AAQR,IAAA,cAAc,EAAEC,cARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CALF,CATF,eA0CE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,OAAO,EAAGG,KAAD,IACPD,wBAAwB,CAACC,KAAD,EAAQf,OAAR,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,KAAD;AACI,IAAA,SAAS,EAAC,mBADd;AAEI,IAAA,GAAG,EACD4C,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,4CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,eAgBE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAGE,IAAA,OAAO,EAAEzB,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CAhBF,EAyBRZ,gBAAgB,iBAChB;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,EADP;AAEC,IAAA,KAAK,EAAC,UAFP;AAGC,IAAA,QAAQ,EAAGc,KAAD,IAAWD,iBAAiB,CAACC,KAAD,CAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CA1BQ,CADN,CA1CF,CAvCF,CADE,gBA+HF,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEqB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,yBADhC;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,MAAM,EAAC,EAFT;AAGE,IAAA,QAAQ,EAAEhC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,GAAG,EAAEV,WAHP;AAIE,IAAA,mBAAmB,EAAEE,qBAJvB;AAKE,IAAA,oBAAoB,EAAEE,oBALxB;AAME,IAAA,QAAQ,EAAEV,KAAK,CAACmB,QANlB;AAOE,IAAA,WAAW,EAAEN,WAPf;AAQR,IAAA,cAAc,EAAEC,cARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CARF,eA0BE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,OAAO,EAAGG,KAAD,IACPD,wBAAwB,CAACC,KAAD,EAAQf,OAAR,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF,eAWE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAGE,IAAA,OAAO,EAAEqB,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CAXF,EAoBGZ,gBAAgB,iBACf;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,QAAQ,EAAGc,KAAD,IAAWD,iBAAiB,CAACC,KAAD,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBJ,CADN,CA1BF,CADF,CAlIH,CADH,CADF;AAyMD,CAlRD;;AAoRA,MAAM4B,cAAc,GAAIC,KAAD,KAAY;AACjCrD,EAAAA,cAAc,EAAEqD,KAAK,CAACpD,OAAN,CAAcD;AADG,CAAZ,CAAvB;;AAIA,SAASsD,kBAAT,CAA4BpC,QAA5B,EAAsC;AACpC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AAED,eAAejC,OAAO,CACpBmE,cADoB,EAEpBE,kBAFoB,CAAP,CAGbhE,SAAS,CAACQ,cAAD,CAHI,CAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  Dropdown,\n  Image,\n  Media,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { saveBookmarkStart } from \"../../store/actions/BookmarkAction\";\nimport {\n  fetchCommentRepliesStart,\n  saveCommentReplyStart,\n} from \"../../store/actions/CommentsAction\";\nimport \"react-image-lightbox/style.css\";\nimport { translate, t } from \"react-multi-lang\";\nimport PostEditor from \"../Post/postMentions/PostEditor\";\nimport { Picker, EmojiData } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { EditorState, convertToRaw, Modifier } from \"draft-js\";\n\nconst CommentReplies = (props) => {\n  const { commentReplies, comment, commentActiveIndex } = props;\n\n  const [commentReplyInputData, setCommentReplyInputData] = useState({});\n\n  const mentionsRef = useRef();\n\n  const [editorContentState, setEditorContentstate] = useState(\"\");\n\n  const [editorHtmlContent, setEditorHtmlContent] = useState(\"\");\n\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n\tconst [editorState, setEditorState] = useState(() =>\n\t\tEditorState.createEmpty()\n\t);\n\n  const handleCommentReplySubmit = (event, comment) => {\n    event.preventDefault();\n    props.dispatch(\n      saveCommentReplyStart({\n        reply: editorHtmlContent,\n        post_id: comment.post_id,\n        post_comment_id: comment.post_comment_id,\n      })\n    );\n    setCommentReplyInputData({});\n    props.dispatch(\n      fetchCommentRepliesStart({\n        post_id: comment.post_id,\n        post_comment_id: comment.post_comment_id,\n      })\n    );\n  };\n\n  function triggerPicker(event) {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  }\n\n  // const handleEmojiSelect = (emoji) => {\n  //   setEditorHtmlContent(editorHtmlContent + emoji.native);\n  //   setEditorContentstate(editorContentState + emoji.native);\n  //   SetEmojiPicker(false);\n  // };\n\n\tconst handleEmojiSelect = (emoji) => {\n    SetEmojiPicker(false);\n    setEditorState(insertCharacter(emoji.native, editorState))\n  };\n\n  const insertCharacter = (emoji, editorState) => {\n    const currentContent = editorState.getCurrentContent();\n    const currentSelection = editorState.getSelection();\n\n    const newContent = Modifier.insertText(\n      currentContent,\n      currentSelection,\n      emoji\n    );\n\n    const newEditorState = EditorState.push(\n      editorState,\n      newContent,\n      \"insert-characters\"\n    );\n\n    return EditorState.forceSelection(\n      newEditorState,\n      newContent.getSelectionAfter()\n    );\n  };\n\n  return (\n    <>\n      {commentActiveIndex == props.currentIndex &&\n        (commentReplies.loading ? (\n          \"Loading...\"\n        ) : commentReplies.data.post_comment_replies.length > 0 ? (\n          <>\n            {commentReplies.data.post_comment_replies.map(\n              (comment_reply, index) => (\n                <>\n                  <div className=\"reply-box\" key={index}>\n                    <div className=\"reply-user-img-sec\">\n                      <Image\n                        src={window.location.origin + \"/assets/images/user.png\"}\n                        alt=\"\"\n                        className=\"reply-user-img\"\n                      />\n                    </div>\n                    <div className=\"reply-user-info\">\n                      <Link to=\"#\">\n                        <h4 className=\"reply-user-name\">\n                          {comment_reply.user_displayname}\n                        </h4>\n                      </Link>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html:\n                            comment_reply.reply != undefined\n                              ? comment_reply.reply\n                              : \"\",\n                        }}\n                        className=\"reply-message\"\n                      ></p>\n                      <div className=\"reply-info-sec\">\n                        <ul className=\"list-unstyled reply-info-link\">\n                          <Media as=\"li\">\n                            <p>{comment_reply.created}</p>\n                          </Media>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )\n            )}{\" \"}\n            <div className=\"reply-text-field\">\n              <div className=\"reply-user-img-sec\">\n                <Image\n                  src={window.location.origin + \"/assets/images/user.png\"}\n                  alt=\"\"\n                  className=\"reply-user-img\"\n                />\n              </div>\n\n              <Form\n                className=\"form-inline\"\n                action=\"\"\n                onSubmit={handleCommentReplySubmit}\n              >\n                <div className=\"form-reply\">\n                  {/* <Form.Control\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Write a reply\"\n\t\t\t\t\t\t\tid=\"reply\"\n\t\t\t\t\t\t\tname=\"reply\"\n\t\t\t\t\t\t\tvalue={commentReplyInputData.reply}\n\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\tsetCommentReplyInputData({\n\t\t\t\t\t\t\t\t\t...commentReplyInputData,\n\t\t\t\t\t\t\t\t\treply: event.currentTarget.value,\n\t\t\t\t\t\t\t\t\tpost_id: comment.post_id,\n\t\t\t\t\t\t\t\t\tpost_comment_id: comment.post_comment_id,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/> */}\n                  <PostEditor\n                    className=\"PostEditor__input\"\n                    placeholder=\"Write a reply\"\n                    ref={mentionsRef}\n                    getEditorRawContent={setEditorContentstate}\n                    getEditorHtmlContent={setEditorHtmlContent}\n                    dispatch={props.dispatch}\n\t\t\t\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\t\t\t\tsetEditorState={setEditorState}\n                  />\n                </div>\n              </Form>\n              <div className=\"form-reply-right-icons\">\n                    <ul className=\"list-unstyled reply-action-icons\">\n                      <Media as=\"li\">\n                        <Link\n                          to=\"#\"\n                          onClick={(event) =>\n                            handleCommentReplySubmit(event, comment)\n                          }\n                        >\n                          {/* <i className=\"fas fa-paper-plane\"></i> */}\n                          <Image\n                              className=\"comment-send-icon\"\n                              src={\n                                window.location.origin + \"/assets/images/icons/comment-send-icon.png\"}\n                            />\n                        </Link>\n                      </Media>\n                      <Media as=\"li\">\n                        <button\n                          type=\"button\"\n                          className=\"g-btn m-rounded emojiButtoon p-0 pr-2\"\n                          onClick={triggerPicker}\n                        >\n                          <i className=\"far fa-smile\"></i>\n                        </button>\n                      </Media>\n\t\t\t\t\t\t\t\t\t\t\t{emojiPickerState && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"emojiWrapper\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Picker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji=\"point_up\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(emoji) => handleEmojiSelect(emoji)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n                      {/* <Media as=\"li\">\n\t\t\t\t\t\t\t\t\t\t<Link to=\"#\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"far fa-smile\"></i>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Media> */}\n                    </ul>\n                  </div>\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"reply-text-field\">\n              <div className=\"reply-user-img-sec\">\n                <Image\n                  src={window.location.origin + \"/assets/images/user.png\"}\n                  alt=\"\"\n                  className=\"reply-user-img\"\n                />\n              </div>\n              <Form\n                className=\"form-inline\"\n                action=\"\"\n                onSubmit={handleCommentReplySubmit}\n              >\n                <div className=\"form-reply\">\n                  <PostEditor\n                    className=\"PostEditor__input\"\n                    placeholder=\"Write a reply\"\n                    ref={mentionsRef}\n                    getEditorRawContent={setEditorContentstate}\n                    getEditorHtmlContent={setEditorHtmlContent}\n                    dispatch={props.dispatch}\n                    editorState={editorState}\n\t\t\t\t\t\t\t\t\t\tsetEditorState={setEditorState}\n                  />\n                </div>\n              </Form>\n              <div className=\"form-reply-right-icons\">\n                    <ul className=\"list-unstyled reply-action-icons\">\n                      <Media as=\"li\">\n                        <Link\n                          to=\"#\"\n                          onClick={(event) =>\n                            handleCommentReplySubmit(event, comment)\n                          }\n                        >\n                          <i className=\"fas fa-paper-plane\"></i>\n                        </Link>\n                      </Media>\n                      <Media as=\"li\">\n                        <button\n                          type=\"button\"\n                          className=\"g-btn m-rounded emojiButtoon p-0 pr-2\"\n                          onClick={triggerPicker}\n                        >\n                          <i className=\"far fa-smile\"></i>\n                        </button>\n                      </Media>\n                      {emojiPickerState && (\n                        <div className=\"emojiWrapper\">\n                          <Picker\n                            title=\"\"\n                            emoji=\"point_up\"\n                            onSelect={(emoji) => handleEmojiSelect(emoji)}\n                          />\n                        </div>\n                      )}\n                      {/* <Media as=\"li\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to=\"#\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"far fa-smile\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Media> */}\n                    </ul>\n                  </div>\n            </div>\n          </>\n        ))}\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  commentReplies: state.comment.commentReplies,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(CommentReplies));\n"]},"metadata":{},"sourceType":"module"}