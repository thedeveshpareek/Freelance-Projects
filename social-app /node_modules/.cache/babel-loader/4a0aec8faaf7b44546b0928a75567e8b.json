{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from\"react\";import{Form,Button,Image,Modal}from\"react-bootstrap\";import Cropper from\"react-easy-crop\";import{t}from\"react-multi-lang\";import getCroppedImg from\"./CropImageHelper\";var CropImageModal=function CropImageModal(props){// useEffect(() => {\n//   alert(props.cropModalFlag.type);\n// }, []);\nvar _useState=useState({x:0,y:0}),_useState2=_slicedToArray(_useState,2),crop=_useState2[0],setCrop=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),zoom=_useState4[0],setZoom=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),croppedAreaPixels=_useState6[0],setCroppedAreaPixels=_useState6[1];var onCropComplete=useCallback(function(croppedArea,croppedAreaPixels){setCroppedAreaPixels(croppedAreaPixels);},[]);var dataURLtoFile=function dataURLtoFile(dataurl,filename){var arr=dataurl.split(\",\"),mime=arr[0].match(/:(.*?);/)[1],bstr=atob(arr[1]),n=bstr.length,u8arr=new Uint8Array(n);while(n--){u8arr[n]=bstr.charCodeAt(n);}return new File([u8arr],filename,{type:mime});};var getCroppedImage=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var croppedImage,myFile;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getCroppedImg(props.image,croppedAreaPixels,0,props.cropModalFlag.fileType);case 2:croppedImage=_context.sent;myFile=dataURLtoFile(croppedImage,props.cropModalFlag.fileName);if(props.cropModalFlag.type==\"picture\"){props.setImage(_objectSpread(_objectSpread({},props.imageState),{},{picture:croppedImage}));props.setProfileInputData(_objectSpread(_objectSpread({},props.profileInputData),{},{picture:myFile}));}else{props.setImage(_objectSpread(_objectSpread({},props.imageState),{},{cover:croppedImage}));props.setProfileInputData(_objectSpread(_objectSpread({},props.profileInputData),{},{cover:myFile}));}props.closeModal();case 6:case\"end\":return _context.stop();}}},_callee);})),[croppedAreaPixels]);return/*#__PURE__*/React.createElement(React.Fragment,null,props.cropModalFlag.type==\"picture\"?/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-center sent-tip-modal\",size:props.cropModalFlag.type==\"picture\"?\"md\":\"lg\",centered:true,show:props.cropModalFlag.type==\"picture\"||props.cropModalFlag.type==\"cover\"?props.modalFlag:false,onHide:props.cropModalFlag.type==\"picture\"||props.cropModalFlag.type==\"cover\"?props.closeModal:false},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"crop_image\"),\" \",props.modalFlag==true?\"Yes\":\"NO\",\" \",props.cropModalFlag.type)),/*#__PURE__*/React.createElement(Modal.Body,{className:\"cropmodal\"},props.cropModalFlag.type==\"picture\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"text-muted\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"Note : \"),\"Image size of 300 * 300 is recommended\",\" \"))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"text-muted\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"Note : \"),\"Image size of 1920 * 500 is recommended\",\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(props.cropModalFlag.type==\"picture\"?\"image-profile-cropper\":\"image-cover-cropper\")},/*#__PURE__*/React.createElement(Cropper,{image:props.image,crop:crop,zoom:zoom,onCropChange:setCrop,onCropComplete:onCropComplete,onZoomChange:setZoom,cropShape:props.cropModalFlag.shape,aspect:props.cropModalFlag.width/props.cropModalFlag.height// cropSize={{ width: props.width, height: props.height }}\n,objectFit:\"contain\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"crop-info-text\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-arrows-alt mr-2\"}),\"Drag to Reposition\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-3 text-center\"},/*#__PURE__*/React.createElement(\"button\",{className:\"save-btn btn btn-primary\",onClick:function onClick(){return getCroppedImage();}},\"Crop\")))):\"\",props.cropModalFlag.type==\"cover\"?/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-center sent-tip-modal\",size:props.cropModalFlag.type==\"picture\"?\"md\":\"lg\",centered:true,show:props.cropModalFlag.type==\"picture\"||props.cropModalFlag.type==\"cover\"?props.modalFlag:false,onHide:props.cropModalFlag.type==\"picture\"||props.cropModalFlag.type==\"cover\"?props.closeModal:false},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"crop_image\"),\" \",props.modalFlag==true?\"Yes\":\"NO\",\" \",props.cropModalFlag.type)),/*#__PURE__*/React.createElement(Modal.Body,{className:\"cropmodal\"},props.cropModalFlag.type==\"picture\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"text-muted\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"Note : \"),\"Image size of 300 * 300 is recommended\",\" \"))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"text-muted\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"Note : \"),\"Image size of 1920 * 500 is recommended\",\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(props.cropModalFlag.type==\"picture\"?\"image-profile-cropper\":\"image-cover-cropper\")},/*#__PURE__*/React.createElement(Cropper,{image:props.image,crop:crop,zoom:zoom,onCropChange:setCrop,onCropComplete:onCropComplete,onZoomChange:setZoom,cropShape:props.cropModalFlag.shape,aspect:props.cropModalFlag.width/props.cropModalFlag.height// cropSize={{ width: props.width, height: props.height }}\n,objectFit:\"contain\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"crop-info-text\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-arrows-alt mr-2\"}),\"Drag to Reposition\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-3 text-center\"},/*#__PURE__*/React.createElement(\"button\",{className:\"save-btn btn btn-primary\",onClick:function onClick(){return getCroppedImage();}},\"Crop\")))):\"\");};export default CropImageModal;","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Accounts/Profile/CropImageModal.jsx"],"names":["React","useState","useEffect","useCallback","Form","Button","Image","Modal","Cropper","t","getCroppedImg","CropImageModal","props","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","getCroppedImage","image","cropModalFlag","fileType","croppedImage","myFile","fileName","setImage","imageState","picture","setProfileInputData","profileInputData","cover","closeModal","modalFlag","shape","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Form, Button, Image, Modal } from \"react-bootstrap\";\nimport Cropper from \"react-easy-crop\";\nimport { t } from \"react-multi-lang\";\nimport getCroppedImg from \"./CropImageHelper\";\n\nconst CropImageModal = (props) => {\n\n  // useEffect(() => {\n  //   alert(props.cropModalFlag.type);\n  // }, []);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const dataURLtoFile = (dataurl, filename) => {\n    var arr = dataurl.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    \n\n    return new File([u8arr], filename, { type: mime });\n  };\n\n  const getCroppedImage = useCallback(async () => {\n    const croppedImage = await getCroppedImg(\n      props.image,\n      croppedAreaPixels,\n      0,\n      props.cropModalFlag.fileType\n    );\n\n    var myFile = dataURLtoFile(croppedImage, props.cropModalFlag.fileName);\n\n    if (props.cropModalFlag.type == \"picture\") {\n      props.setImage({ ...props.imageState, picture: croppedImage });\n      props.setProfileInputData({\n        ...props.profileInputData,\n        picture: myFile,\n      });\n    } else {\n      props.setImage({ ...props.imageState, cover: croppedImage });\n      props.setProfileInputData({\n        ...props.profileInputData,\n        cover: myFile,\n      });\n    }\n    props.closeModal();\n  }, [croppedAreaPixels]);\n\n  return (\n    <>\n    {props.cropModalFlag.type == \"picture\" ? \n      <Modal\n        className=\"modal-dialog-center sent-tip-modal\"\n        size={props.cropModalFlag.type == \"picture\" ? \"md\" : \"lg\"}\n        centered\n        show={props.cropModalFlag.type == \"picture\" || props.cropModalFlag.type == \"cover\" ? props.modalFlag : false}\n        onHide={props.cropModalFlag.type == \"picture\" || props.cropModalFlag.type == \"cover\" ? props.closeModal : false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t(\"crop_image\")} {props.modalFlag == true ? \"Yes\" : \"NO\"} {props.cropModalFlag.type}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"cropmodal\">\n          {props.cropModalFlag.type == \"picture\" ? (\n            <>\n              <div className=\"mb-3\">\n                <h4 className=\"text-muted\">\n                  <span className=\"text-danger\">Note : </span>Image size of 300 * 300 is recommended{\" \"}\n                </h4>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"mb-3\">\n                <h4 className=\"text-muted\">\n                  <span  className=\"text-danger\">Note : </span>Image size of 1920 * 500 is recommended{\" \"}\n                </h4>\n              </div>\n            </>\n          )}\n          <div\n            className={`${\n              props.cropModalFlag.type == \"picture\"\n                ? \"image-profile-cropper\"\n                : \"image-cover-cropper\"\n            }`}\n          >\n            <Cropper\n              image={props.image}\n              crop={crop}\n              zoom={zoom}\n              onCropChange={setCrop}\n              onCropComplete={onCropComplete}\n              onZoomChange={setZoom}\n              cropShape={props.cropModalFlag.shape}\n              aspect={props.cropModalFlag.width / props.cropModalFlag.height}\n              // cropSize={{ width: props.width, height: props.height }}\n              objectFit=\"contain\"\n            />\n            <div className=\"crop-info-text\">\n              <p>\n                <i className=\"fas fa-arrows-alt mr-2\"></i>Drag to Reposition\n              </p>\n            </div>\n          </div>\n          <div className=\"mt-3 text-center\">\n            <button\n              className=\"save-btn btn btn-primary\"\n              onClick={() => getCroppedImage()}\n            >\n              Crop\n            </button>\n          </div>\n        </Modal.Body>\n      </Modal>\n      : \"\" }\n\n{props.cropModalFlag.type == \"cover\" ? \n      <Modal\n        className=\"modal-dialog-center sent-tip-modal\"\n        size={props.cropModalFlag.type == \"picture\" ? \"md\" : \"lg\"}\n        centered\n        show={props.cropModalFlag.type == \"picture\" || props.cropModalFlag.type == \"cover\" ? props.modalFlag : false}\n        onHide={props.cropModalFlag.type == \"picture\" || props.cropModalFlag.type == \"cover\" ? props.closeModal : false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{t(\"crop_image\")} {props.modalFlag == true ? \"Yes\" : \"NO\"} {props.cropModalFlag.type}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"cropmodal\">\n          {props.cropModalFlag.type == \"picture\" ? (\n            <>\n              <div className=\"mb-3\">\n                <h4 className=\"text-muted\">\n                  <span className=\"text-danger\">Note : </span>Image size of 300 * 300 is recommended{\" \"}\n                </h4>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"mb-3\">\n                <h4 className=\"text-muted\">\n                  <span  className=\"text-danger\">Note : </span>Image size of 1920 * 500 is recommended{\" \"}\n                </h4>\n              </div>\n            </>\n          )}\n          <div\n            className={`${\n              props.cropModalFlag.type == \"picture\"\n                ? \"image-profile-cropper\"\n                : \"image-cover-cropper\"\n            }`}\n          >\n            <Cropper\n              image={props.image}\n              crop={crop}\n              zoom={zoom}\n              onCropChange={setCrop}\n              onCropComplete={onCropComplete}\n              onZoomChange={setZoom}\n              cropShape={props.cropModalFlag.shape}\n              aspect={props.cropModalFlag.width / props.cropModalFlag.height}\n              // cropSize={{ width: props.width, height: props.height }}\n              objectFit=\"contain\"\n            />\n            <div className=\"crop-info-text\">\n              <p>\n                <i className=\"fas fa-arrows-alt mr-2\"></i>Drag to Reposition\n              </p>\n            </div>\n          </div>\n          <div className=\"mt-3 text-center\">\n            <button\n              className=\"save-btn btn btn-primary\"\n              onClick={() => getCroppedImage()}\n            >\n              Crop\n            </button>\n          </div>\n        </Modal.Body>\n      </Modal>\n      : \"\" }\n    </>\n  );\n};\n\nexport default CropImageModal;\n"]},"metadata":{},"sourceType":"module"}