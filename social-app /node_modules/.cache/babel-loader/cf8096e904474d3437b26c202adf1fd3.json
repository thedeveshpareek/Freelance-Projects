{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/PPVPaymentModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { PPVPaymentStripeStart, PPVPaymentWalletStart, PPVPaymentPaypalStart, PPVPaymentCCBillStart, PPVPaymentCoinPaymentStart } from \"../../store/actions/PostAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport configuration from \"react-global-configuration\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PPVPaymentModal = props => {\n  const [amount, setAmount] = useState(0);\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  const [showPayPal, payPal] = useState(false);\n  useEffect(() => {\n    if (props.PPVPayment === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.PPVPayment]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n    if (paymentType === \"CARD\") props.dispatch(PPVPaymentStripeStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: amount,\n      user_id: props.user_id\n    }));\n    if (paymentType === \"WALLET\") props.dispatch(PPVPaymentWalletStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      user_id: props.user_id\n    }));\n    if (paymentType === \"CCBILL\") props.dispatch(PPVPaymentCCBillStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: props.amount,\n      user_id: props.user_id\n    }));\n    if (paymentType === \"coinpayment\") props.dispatch(PPVPaymentCoinPaymentStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: props.amount,\n      user_id: props.user_id\n    }));\n    if (paymentType === \"PAYPAL\") props.closePPVPaymentModal();\n  };\n\n  const paypalOnSuccess = payment => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(PPVPaymentPaypalStart({\n        payment_id: payment.paymentID,\n        post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n        amount: props.amount,\n        user_id: props.user_id\n      }));\n    }, 1000);\n  };\n\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(\"Payment cancelled please try again..\");\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const choosePaymentOption = event => {\n    console.log(amount);\n    setPaymentType(event);\n  };\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: props.PPVPayment,\n    onHide: props.closePPVPaymentModal,\n    centered: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, props.PPVPayment === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, t(\"pay_and_see_the_Post\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"subscription-tip-ppv-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: paymentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CARD\"),\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 27\n    }\n  }, t(\"card_stripe\"))) : null, configuration.get(\"configData.is_paypal_enabled\") == 1 && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"PAYPAL\"),\n    eventKey: \"PAYPAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 27\n    }\n  }, t(\"paypal\"))) : null, configuration.get(\"configData.is_ccbill_enabled\") == 1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CCBILL\"),\n    eventKey: \"CCBILL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }, t(\"ccbill\"))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"WALLET\"),\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 27\n    }\n  }, t(\"wallet\"))) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"pay_amount\"),\n    value: props.post.amount_formatted,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 31\n    }\n  }, props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ? props.cards.data.cards.map(card => card.is_default == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-list-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 43\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 43\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-action-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-link-text text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 47\n    }\n  }, t(\"default_card\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"add-account-icon\",\n    src: window.location.origin + \"/assets/images/icons/new/add-card.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, \"Add Card\")))))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, props.wallet.loading ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-balence-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, t(\"available\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 37\n    }\n  }, props.wallet.data.user_wallet.remaining_formatted)), props.amount > props.wallet.data.user_wallet.remaining ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conv-desc desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 39\n    }\n  }, t(\"low_wallet_balance_tips_payment_para\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wallet\",\n    className: \"withdraw-money-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 41\n    }\n  }, t(\"add_wallet_amount\")))) : null)) : null))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, paymentType === \"PAYPAL\" && props.amount != 0 ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: props.amount,\n    onError: paypalOnError,\n    onSuccess: paypalOnSuccess,\n    onCancel: paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closePPVPaymentModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, t(\"cancel\")), paymentType !== \"PAYPAL\" ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    onClick: handleSubmit,\n    disabled: props.ppvPayStripe.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, props.ppvPayStripe.loadingButtonContent !== null ? props.ppvPayStripe.loadingButtonContent : t(\"pay_now\")) : null)) : null));\n};\n\nconst mapStateToPros = state => ({\n  ppvPayStripe: state.post.ppvPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(PPVPaymentModal));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/PPVPaymentModal.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","Tab","Nav","Row","Col","connect","PPVPaymentStripeStart","PPVPaymentWalletStart","PPVPaymentPaypalStart","PPVPaymentCCBillStart","PPVPaymentCoinPaymentStart","fetchCardDetailsStart","fetchWalletDetailsStart","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","configuration","Link","translate","t","PPVPaymentModal","props","amount","setAmount","paymentType","setPaymentType","localStorage","getItem","showPayPal","payPal","PPVPayment","dispatch","handleSubmit","event","preventDefault","post_id","undefined","user_id","closePPVPaymentModal","paypalOnSuccess","payment","console","log","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","choosePaymentOption","env","get","currency","client","sandbox","production","post","amount_formatted","cards","loading","length","map","card","is_default","last_four","card_type","window","location","origin","wallet","user_wallet","remaining_formatted","remaining","ppvPayStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Button,\n  Image,\n  Modal,\n  Tab,\n  Nav,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  PPVPaymentStripeStart,\n  PPVPaymentWalletStart,\n  PPVPaymentPaypalStart,\n  PPVPaymentCCBillStart,\n  PPVPaymentCoinPaymentStart,\n} from \"../../store/actions/PostAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport configuration from \"react-global-configuration\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PPVPaymentModal = (props) => {\n  const [amount, setAmount] = useState(0);\n  const [paymentType, setPaymentType] = useState(\n    localStorage.getItem(\"default_payment_method\")\n  );\n\n  const [showPayPal, payPal] = useState(false);\n\n  useEffect(() => {\n    if (props.PPVPayment === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.PPVPayment]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        PPVPaymentStripeStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: amount,\n          user_id: props.user_id,\n        })\n      );\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        PPVPaymentWalletStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          user_id: props.user_id,\n        })\n      );\n    if (paymentType === \"CCBILL\")\n      props.dispatch(\n        PPVPaymentCCBillStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: props.amount,\n          user_id: props.user_id,\n        })\n      );\n    if (paymentType === \"coinpayment\")\n      props.dispatch(\n        PPVPaymentCoinPaymentStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: props.amount,\n          user_id: props.user_id,\n        })\n      );\n\n    if (paymentType === \"PAYPAL\") props.closePPVPaymentModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(\n        PPVPaymentPaypalStart({\n          payment_id: payment.paymentID,\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: props.amount,\n          user_id: props.user_id,\n        })\n      );\n    }, 1000);\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const choosePaymentOption = (event) => {\n    console.log(amount);\n    setPaymentType(event);\n  };\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  return (\n    <>\n      <Modal\n        show={props.PPVPayment}\n        onHide={props.closePPVPaymentModal}\n        centered\n        size=\"lg\"\n      >\n        {props.PPVPayment === true ? (\n          <>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"pay_and_see_the_Post\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"subscription-tip-ppv-tab\">\n              <Tab.Container\n                id=\"left-tabs-example\"\n                defaultActiveKey={paymentType}\n              >\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      {configuration.get(\"configData.is_stripe_enabled\") == 1 &&\n                      configuration.get(\"configData.stripe_publishable_key\") !==\n                        \"\" &&\n                      configuration.get(\"configData.stripe_secret_key\") !==\n                        \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"CARD\")}\n                            eventKey=\"CARD\"\n                          >\n                            {t(\"card_stripe\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\"configData.is_paypal_enabled\") == 1 &&\n                      configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"PAYPAL\")}\n                            eventKey=\"PAYPAL\"\n                          >\n                            {t(\"paypal\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\"configData.is_ccbill_enabled\") == 1 &&\n                      configuration.get(\"configData.flex_form_id\") !== \"\" &&\n                      configuration.get(\"configData.salt_key\") !== \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"CCBILL\")}\n                            eventKey=\"CCBILL\"\n                          >\n                            {t(\"ccbill\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\n                        \"configData.is_wallet_payment_enabled\"\n                      ) == 1 ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"WALLET\")}\n                            eventKey=\"WALLET\"\n                          >\n                            {t(\"wallet\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <div className=\"card-stripe-box\">\n                      <Form>\n                        <Form.Group\n                          className=\"mb-3\"\n                          controlId=\"exampleForm.ControlInput1\"\n                        >\n                          <Form.Control\n                            type=\"text\"\n                            placeholder={t(\"pay_amount\")}\n                            value={props.post.amount_formatted}\n                            disabled\n                          />\n                        </Form.Group>\n                        <Tab.Content>\n                          {configuration.get(\"configData.is_stripe_enabled\") ==\n                            1 &&\n                          configuration.get(\n                            \"configData.stripe_publishable_key\"\n                          ) !== \"\" &&\n                          configuration.get(\"configData.stripe_secret_key\") !==\n                            \"\" ? (\n                            <Tab.Pane eventKey=\"CARD\">\n                              <div className=\"card-stripe-sec\">\n                                {props.cards.loading ? (\n                                  \"\"\n                                ) : props.cards.data.cards.length > 0 ? (\n                                  props.cards.data.cards.map(\n                                    (card) =>\n                                      card.is_default == 1 && (\n                                        <div className=\"card-stripe-list-box\">\n                                          <h5 className=\"mb-3\">\n                                            XXXX XXXX XXXX {card.last_four}\n                                          </h5>\n                                          <h5 className=\"text-muted\">\n                                            {card.card_type}\n                                          </h5>\n                                          <div className=\"card-stripe-bottom\">\n                                            <div className=\"card-stripe-action-btn\">\n                                              <p className=\"card-link-text text-success\">\n                                                {t(\"default_card\")}\n                                              </p>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )\n                                  )\n                                ) : (\n                                  <div className=\"card-stripe-item\">\n                                    <Link to=\"cards\">\n                                      <div className=\"add-account-item\">\n                                        <Image\n                                          className=\"add-account-icon\"\n                                          src={\n                                            window.location.origin +\n                                            \"/assets/images/icons/new/add-card.svg\"\n                                          }\n                                        />\n                                        <h5 className=\"text-muted\">Add Card</h5>\n                                      </div>\n                                    </Link>\n                                  </div>\n                                )}\n                              </div>\n                            </Tab.Pane>\n                          ) : null}\n\n                          {configuration.get(\n                            \"configData.is_wallet_payment_enabled\"\n                          ) == 1 ? (\n                            <Tab.Pane eventKey=\"WALLET\">\n                              {props.wallet.loading ? (\n                                \"\"\n                              ) : (\n                                <div className=\"card-stripe-box\">\n                                  <div className=\"wallet-balence-amount\">\n                                    <h4>{t(\"available\")}</h4>\n                                    <p>\n                                      {\n                                        props.wallet.data.user_wallet\n                                          .remaining_formatted\n                                      }\n                                    </p>\n                                  </div>\n                                  {props.amount >\n                                  props.wallet.data.user_wallet.remaining ? (\n                                    <div className=\"\">\n                                      <p className=\"conv-desc desc\">\n                                        {t(\n                                          \"low_wallet_balance_tips_payment_para\"\n                                        )}\n                                      </p>\n                                      <div className=\"d-flex\">\n                                        <Link\n                                          to=\"/wallet\"\n                                          className=\"withdraw-money-btn\"\n                                        >\n                                          {t(\"add_wallet_amount\")}\n                                        </Link>\n                                      </div>\n                                    </div>\n                                  ) : null}\n                                </div>\n                              )}\n                            </Tab.Pane>\n                          ) : null}\n                        </Tab.Content>\n                      </Form>\n                    </div>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Modal.Body>\n            <Modal.Footer>\n              {paymentType === \"PAYPAL\" && props.amount != 0 ? (\n                <PaypalExpressBtn\n                  env={env}\n                  client={client}\n                  currency={currency}\n                  total={props.amount}\n                  onError={paypalOnError}\n                  onSuccess={paypalOnSuccess}\n                  onCancel={paypalOnCancel}\n                />\n              ) : null}\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closePPVPaymentModal}\n              >\n                {t(\"cancel\")}\n              </Button>\n              {paymentType !== \"PAYPAL\" ? (\n                <Button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  data-dismiss=\"modal\"\n                  onClick={handleSubmit}\n                  disabled={props.ppvPayStripe.buttonDisable}\n                >\n                  {props.ppvPayStripe.loadingButtonContent !== null\n                    ? props.ppvPayStripe.loadingButtonContent\n                    : t(\"pay_now\")}\n                </Button>\n              ) : null}\n            </Modal.Footer>\n          </>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  ppvPayStripe: state.post.ppvPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(PPVPaymentModal));\n"]},"metadata":{},"sourceType":"module"}