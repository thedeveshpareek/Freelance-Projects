{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";var useInfiniteScroll=function useInfiniteScroll(callback){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFetching=_useState2[0],setIsFetching=_useState2[1];useEffect(function(){window.addEventListener(\"scroll\",handleScroll);return function(){return window.removeEventListener(\"scroll\",handleScroll);};},[]);useEffect(function(){if(!isFetching)return;callback();},[isFetching]);// const scrollTop =\n//   (document.documentElement && document.documentElement.scrollTop) ||\n//   document.body.scrollTop;\n// const scrollHeight =\n//   (document.documentElement && document.documentElement.scrollHeight) ||\n//   document.body.scrollHeight;\n// if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n//   setIsFetching(true);\n// }\n// function handleScroll() {\n//   const scrollTop =\n//     (document.documentElement && document.documentElement.scrollTop) ||\n//     document.body.scrollTop;\n//   const scrollHeight =\n//     (document.documentElement && document.documentElement.scrollHeight) ||\n//     document.body.scrollHeight;\n//   if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n//     setIsFetching(true);\n//   }\n// }\nfunction handleScroll(){if(window.innerHeight+document.documentElement.scrollTop!==document.documentElement.offsetHeight||isFetching)return;setIsFetching(true);}return[isFetching,setIsFetching];};export default useInfiniteScroll;","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/useInfiniteScroll.jsx"],"names":["useState","useEffect","useInfiniteScroll","callback","isFetching","setIsFetching","window","addEventListener","handleScroll","removeEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight"],"mappings":"yKAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,QAAD,CAAc,eACFH,QAAQ,CAAC,KAAD,CADN,wCAC/BI,UAD+B,eACnBC,aADmB,eAGtCJ,SAAS,CAAC,UAAM,CACdK,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCC,YAAlC,EACA,MAAO,kBAAMF,CAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCD,YAArC,CAAN,EAAP,CACD,CAHQ,CAGN,EAHM,CAAT,CAKAP,SAAS,CAAC,UAAM,CACd,GAAI,CAACG,UAAL,CAAiB,OACjBD,QAAQ,GACT,CAHQ,CAGN,CAACC,UAAD,CAHM,CAAT,CAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAASI,CAAAA,YAAT,EAAwB,CACtB,GACEF,MAAM,CAACI,WAAP,CAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,GACEF,QAAQ,CAACC,eAAT,CAAyBE,YAD3B,EAEAV,UAHF,CAKE,OACFC,aAAa,CAAC,IAAD,CAAb,CACD,CAED,MAAO,CAACD,UAAD,CAAaC,aAAb,CAAP,CACD,CAhDD,CAkDA,cAAeH,CAAAA,iBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useInfiniteScroll = (callback) => {\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  useEffect(() => {\n    if (!isFetching) return;\n    callback();\n  }, [isFetching]);\n\n  // const scrollTop =\n  //   (document.documentElement && document.documentElement.scrollTop) ||\n  //   document.body.scrollTop;\n\n  // const scrollHeight =\n  //   (document.documentElement && document.documentElement.scrollHeight) ||\n  //   document.body.scrollHeight;\n\n  // if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n  //   setIsFetching(true);\n  // }\n\n  // function handleScroll() {\n  //   const scrollTop =\n  //     (document.documentElement && document.documentElement.scrollTop) ||\n  //     document.body.scrollTop;\n  //   const scrollHeight =\n  //     (document.documentElement && document.documentElement.scrollHeight) ||\n  //     document.body.scrollHeight;\n  //   if (scrollTop + window.innerHeight + 50 >= scrollHeight) {\n  //     setIsFetching(true);\n  //   }\n  // }\n\n  function handleScroll() {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      isFetching\n    )\n      return;\n    setIsFetching(true);\n  }\n\n  return [isFetching, setIsFetching];\n};\n\nexport default useInfiniteScroll;\n"]},"metadata":{},"sourceType":"module"}