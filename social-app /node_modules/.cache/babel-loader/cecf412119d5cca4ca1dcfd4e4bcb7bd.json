{"ast":null,"code":"import axios from \"axios\";\nimport { apiConstants } from \"./components/Constant/constants\";\nimport { isAndroid, isIOS, isWindows, isMacOs, mobileModel, browserName, osName, mobileVendor, browserVersion } from \"react-device-detect\";\nconst apiUrl = \"https://cms.onlyally.com/api/user/\"; // Production Mode\n// const apiUrl = \"http://localhost:8000/api/user/\"; // Local Mode\n\nconst Environment = {\n  postMethod: async (action, object) => {\n    let userId = localStorage.getItem(\"userId\") !== \"\" && localStorage.getItem(\"userId\") !== null && localStorage.getItem(\"userId\") !== undefined ? localStorage.getItem(\"userId\") : \"\";\n    let accessToken = localStorage.getItem(\"accessToken\") !== \"\" && localStorage.getItem(\"accessToken\") !== null && localStorage.getItem(\"accessToken\") !== undefined ? localStorage.getItem(\"accessToken\") : \"\";\n    const url = apiUrl + action;\n    let formData = new FormData(); // By Default Id and token\n\n    formData.append(\"id\", userId);\n    formData.append(\"token\", accessToken);\n    var socialLoginUser = 0; // append your data\n\n    for (var key in object) {\n      formData.append(key, object[key]);\n\n      if (key === \"social_unique_id\") {\n        socialLoginUser = 1;\n      }\n    } // By Default added device type and login type in future use\n\n\n    if (!socialLoginUser) {\n      formData.append(\"login_by\", apiConstants.LOGIN_BY);\n    }\n\n    formData.append(\"device_type\", apiConstants.DEVICE_TYPE);\n    formData.append(\"device_token\", apiConstants.DEVICE_TOKEN);\n    var device_model = \"\";\n\n    if (isAndroid == true) {\n      device_model = mobileModel;\n    } else if (isIOS == true) {\n      device_model = mobileModel;\n    } else {\n      device_model = browserName + ' ' + browserVersion;\n    }\n\n    formData.append(\"device_model\", device_model);\n    return await axios.post(url, formData); // Progress bar\n    // {\n    //   onUploadProgress: (ProgressEvent) => {\n    //     console.log({\n    //       loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\n    //     });\n    //   },\n    // }\n  },\n  getMethod: async (action, object) => {\n    let userId = localStorage.getItem(\"userId\") !== \"\" && localStorage.getItem(\"userId\") !== null && localStorage.getItem(\"userId\") !== undefined ? localStorage.getItem(\"userId\") : \"\";\n    let accessToken = localStorage.getItem(\"accessToken\") !== \"\" && localStorage.getItem(\"accessToken\") !== null && localStorage.getItem(\"accessToken\") !== undefined ? localStorage.getItem(\"accessToken\") : \"\";\n    const url = apiUrl + action;\n    let formData = new FormData(); // By Default Id and token\n\n    formData.append(\"id\", userId);\n    formData.append(\"token\", accessToken); // append your data\n\n    for (var key in object) {\n      formData.append(key, object[key]);\n    } // By Default added device type and login type in future use\n\n\n    formData.append(\"login_by\", apiConstants.LOGIN_BY);\n    formData.append(\"device_type\", apiConstants.DEVICE_TYPE);\n    formData.append(\"device_token\", apiConstants.DEVICE_TOKEN);\n    var device_model = \"\";\n\n    if (isAndroid == true) {\n      device_model = mobileModel;\n    } else if (isIOS == true) {\n      device_model = mobileModel;\n    } else {\n      device_model = browserName + ' ' + browserVersion;\n    }\n\n    formData.append(\"device_model\", device_model);\n    return await axios.get(url, formData);\n  }\n  /*methods(action) {\n         const url = apiUrl+'/api/'+action;\n         return {\n            getOne: ({ id }) => axios.get(`${url}/${id}`),\n            getAll: (toGet) => axios.post(url, toGet),\n            update: (toUpdate) =>  axios.put(url,toUpdate),\n            create: (toCreate) =>  axios.put(url,toCreate),\n            delete: ({ id }) =>  axios.delete(`${url}/${id}`)\n        }\n    }*/\n\n};\nexport default Environment;","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/Environment.jsx"],"names":["axios","apiConstants","isAndroid","isIOS","isWindows","isMacOs","mobileModel","browserName","osName","mobileVendor","browserVersion","apiUrl","Environment","postMethod","action","object","userId","localStorage","getItem","undefined","accessToken","url","formData","FormData","append","socialLoginUser","key","LOGIN_BY","DEVICE_TYPE","DEVICE_TOKEN","device_model","post","getMethod","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { apiConstants } from \"./components/Constant/constants\";\nimport {\n  isAndroid,\n  isIOS,\n  isWindows,\n  isMacOs,\n  mobileModel,\n  browserName,\n  osName,\n  mobileVendor,\n  browserVersion\n} from \"react-device-detect\";\n\nconst apiUrl = \"https://cms.onlyally.com/api/user/\"; // Production Mode\n\n// const apiUrl = \"http://localhost:8000/api/user/\"; // Local Mode\n\nconst Environment = {\n  postMethod: async (action, object) => {\n    let userId =\n      localStorage.getItem(\"userId\") !== \"\" &&\n      localStorage.getItem(\"userId\") !== null &&\n      localStorage.getItem(\"userId\") !== undefined\n        ? localStorage.getItem(\"userId\")\n        : \"\";\n\n    let accessToken =\n      localStorage.getItem(\"accessToken\") !== \"\" &&\n      localStorage.getItem(\"accessToken\") !== null &&\n      localStorage.getItem(\"accessToken\") !== undefined\n        ? localStorage.getItem(\"accessToken\")\n        : \"\";\n\n    const url = apiUrl + action;\n\n    let formData = new FormData();\n\n    // By Default Id and token\n\n    formData.append(\"id\", userId);\n    formData.append(\"token\", accessToken);\n\n    var socialLoginUser = 0;\n\n    // append your data\n    for (var key in object) {\n      formData.append(key, object[key]);\n\n      if (key === \"social_unique_id\") {\n        socialLoginUser = 1;\n      }\n    }\n\n    // By Default added device type and login type in future use\n    if (!socialLoginUser) {\n      formData.append(\"login_by\", apiConstants.LOGIN_BY);\n    }\n\n    formData.append(\"device_type\", apiConstants.DEVICE_TYPE);\n    formData.append(\"device_token\", apiConstants.DEVICE_TOKEN);\n    \n    var device_model = \"\";\n    if(isAndroid==true){\n      device_model = mobileModel;\n    } else if(isIOS==true){\n      device_model = mobileModel;\n    } else {\n      device_model = browserName+' '+browserVersion;\n    }\n\n    formData.append(\"device_model\",device_model);\n    \n    return await axios.post(url, formData);\n\n    // Progress bar\n    // {\n    //   onUploadProgress: (ProgressEvent) => {\n    //     console.log({\n    //       loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\n    //     });\n    //   },\n    // }\n  },\n\n  getMethod: async (action, object) => {\n    let userId =\n      localStorage.getItem(\"userId\") !== \"\" &&\n      localStorage.getItem(\"userId\") !== null &&\n      localStorage.getItem(\"userId\") !== undefined\n        ? localStorage.getItem(\"userId\")\n        : \"\";\n    let accessToken =\n      localStorage.getItem(\"accessToken\") !== \"\" &&\n      localStorage.getItem(\"accessToken\") !== null &&\n      localStorage.getItem(\"accessToken\") !== undefined\n        ? localStorage.getItem(\"accessToken\")\n        : \"\";\n\n    const url = apiUrl + action;\n\n    let formData = new FormData();\n\n    // By Default Id and token\n\n    formData.append(\"id\", userId);\n    formData.append(\"token\", accessToken);\n\n    // append your data\n    for (var key in object) {\n      formData.append(key, object[key]);\n    }\n\n    // By Default added device type and login type in future use\n\n    formData.append(\"login_by\", apiConstants.LOGIN_BY);\n    formData.append(\"device_type\", apiConstants.DEVICE_TYPE);\n    formData.append(\"device_token\", apiConstants.DEVICE_TOKEN);\n\n    var device_model = \"\";\n    if(isAndroid==true){\n      device_model = mobileModel;\n    } else if(isIOS==true){\n      device_model = mobileModel;\n    } else {\n      device_model = browserName+' '+browserVersion;\n    }\n\n    formData.append(\"device_model\",device_model);\n\n    return await axios.get(url, formData);\n  },\n\n  /*methods(action) {\n\n        const url = apiUrl+'/api/'+action;\n\n        return {\n            getOne: ({ id }) => axios.get(`${url}/${id}`),\n            getAll: (toGet) => axios.post(url, toGet),\n            update: (toUpdate) =>  axios.put(url,toUpdate),\n            create: (toCreate) =>  axios.put(url,toCreate),\n            delete: ({ id }) =>  axios.delete(`${url}/${id}`)\n        }\n    }*/\n};\n\nexport default Environment;\n"]},"metadata":{},"sourceType":"module"}