{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Bookmarks/BookmarkAudio.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport BookmarkNav from \"./BookmarkNav\";\nimport { connect } from \"react-redux\";\nimport { fetchBookmarksAudioStart } from \"../../store/actions/BookmarkAction\";\nimport PostDisplayCard from \"../helper/PostDisplayCard\";\nimport BookmarkNoDataFound from \"../NoDataFound/BookmarkNoDataFound\";\nimport BookmarkLoader from \"../Loader/BookmarkLoader\";\nimport useInfiniteScroll from \"../helper/useInfiniteScroll\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst BookmarkAudio = props => {\n  useEffect(() => {\n    props.dispatch(fetchBookmarksAudioStart({\n      type: \"audio\",\n      skip: props.bookmarkAudio.skip\n    }));\n  }, []);\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchBookMarkAudioData);\n  const [noMoreData, setNoMoreData] = useState(false);\n\n  function fetchBookMarkAudioData() {\n    setTimeout(() => {\n      if (props.bookmarkAudio.length !== 0) {\n        props.dispatch(fetchBookmarksAudioStart({\n          type: \"audio\",\n          skip: props.bookmarkAudio.skip\n        }));\n        setIsFetching(false);\n      } else {\n        setNoMoreData(true);\n      }\n    }, 3000);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-profile book-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BookmarkNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-post-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmarkes-list bookmarks-right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pull-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, t(\"audios\"))))), props.bookmarkAudio.loading ? /*#__PURE__*/React.createElement(BookmarkLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }) : props.bookmarkAudio.data.posts.length > 0 ? props.bookmarkAudio.data.posts.map(post => /*#__PURE__*/React.createElement(PostDisplayCard, {\n    post: post,\n    key: post.post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(BookmarkNoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))), noMoreData !== true ? /*#__PURE__*/React.createElement(React.Fragment, null, isFetching && \"Fetching more list items...\") : \"No More Data\"));\n};\n\nconst mapStateToPros = state => ({\n  bookmarkAudio: state.bookmark.bookmarkAudio\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(BookmarkAudio));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Bookmarks/BookmarkAudio.jsx"],"names":["React","useEffect","useState","Link","Container","Row","Col","Image","BookmarkNav","connect","fetchBookmarksAudioStart","PostDisplayCard","BookmarkNoDataFound","BookmarkLoader","useInfiniteScroll","translate","t","BookmarkAudio","props","dispatch","type","skip","bookmarkAudio","isFetching","setIsFetching","fetchBookMarkAudioData","noMoreData","setNoMoreData","setTimeout","length","loading","data","posts","map","post","post_id","mapStateToPros","state","bookmark","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Container, Row, Col, Image} from \"react-bootstrap\";\nimport BookmarkNav from \"./BookmarkNav\";\nimport { connect } from \"react-redux\";\nimport { fetchBookmarksAudioStart } from \"../../store/actions/BookmarkAction\";\nimport PostDisplayCard from \"../helper/PostDisplayCard\";\nimport BookmarkNoDataFound from \"../NoDataFound/BookmarkNoDataFound\";\nimport BookmarkLoader from \"../Loader/BookmarkLoader\";\nimport useInfiniteScroll from \"../helper/useInfiniteScroll\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst BookmarkAudio = (props) => {\n  useEffect(() => {\n    props.dispatch(\n      fetchBookmarksAudioStart({\n        type: \"audio\",\n        skip: props.bookmarkAudio.skip,\n      })\n    );\n  }, []);\n\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchBookMarkAudioData);\n\n  const [noMoreData, setNoMoreData] = useState(false);\n\n  function fetchBookMarkAudioData() {\n    setTimeout(() => {\n      if (props.bookmarkAudio.length !== 0) {\n        props.dispatch(\n          fetchBookmarksAudioStart({\n            type: \"audio\",\n            skip: props.bookmarkAudio.skip,\n          })\n        );\n        setIsFetching(false);\n      } else {\n        setNoMoreData(true);\n      }\n    }, 3000);\n  }\n\n  return (\n    <div className=\"edit-profile book-photo\">\n      <Container>\n        <Row>\n          <BookmarkNav />\n          <Col sm={12} xs={12} md={8}>\n            <div className=\"profile-post-area\">\n              <div className=\"bookmarkes-list bookmarks-right-side\">\n                <div className=\"pull-left\">\n                  <h3>{t(\"audios\")}</h3>\n                </div>\n              </div>\n            </div>\n            {props.bookmarkAudio.loading ? (\n              <BookmarkLoader />\n            ) : props.bookmarkAudio.data.posts.length > 0 ? (\n              props.bookmarkAudio.data.posts.map((post) => (\n                <PostDisplayCard post={post} key={post.post_id} />\n              ))\n            ) : (\n              <BookmarkNoDataFound />\n            )}\n          </Col>\n        </Row>\n        {noMoreData !== true ? (\n          <>{isFetching && \"Fetching more list items...\"}</>\n        ) : (\n          \"No More Data\"\n        )}\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  bookmarkAudio: state.bookmark.bookmarkAudio,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(BookmarkAudio));\n"]},"metadata":{},"sourceType":"module"}