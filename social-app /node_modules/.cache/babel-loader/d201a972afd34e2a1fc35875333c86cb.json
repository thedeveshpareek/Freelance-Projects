{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport { changePasswordSuccess, changePasswordFailure } from \"../actions/UserAction\";\nimport api from \"../../Environment\";\nimport { CHANGE_PASSWORD_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* changePasswordAPI() {\n  try {\n    const inputData = yield select(state => state.changePassword.inputData.data);\n    const response = yield api.postMethod(\"change_password\", inputData);\n    yield put(changePasswordSuccess(response.data.data));\n\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(changePasswordFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(CHANGE_PASSWORD_START, changePasswordAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/ChangePasswordSaga.jsx"],"names":["call","select","put","takeLatest","all","changePasswordSuccess","changePasswordFailure","api","CHANGE_PASSWORD_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","checkLogoutStatus","changePasswordAPI","inputData","state","changePassword","data","response","postMethod","success","notificationMessage","message","error","pageSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAmD,oBAAnD;AACA,SACEC,qBADF,EAEEC,qBAFF,QAGO,uBAHP;AAIA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SACEC,6BADF,EAEEC,2BAFF,QAGO,6CAHP;AAKA,SACEC,iBADF,QAEO,wBAFP;;AAIA,UAAUC,iBAAV,GAA8B;AAC5B,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMb,MAAM,CAC3Bc,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBF,SAArB,CAA+BG,IADd,CAA9B;AAGA,UAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,UAAJ,CAAe,iBAAf,EAAkCL,SAAlC,CAAvB;AACA,UAAMZ,GAAG,CAACG,qBAAqB,CAACa,QAAQ,CAACD,IAAT,CAAcA,IAAf,CAAtB,CAAT;;AACA,QAAIC,QAAQ,CAACD,IAAT,CAAcG,OAAlB,EAA2B;AACzB,YAAMC,mBAAmB,GAAGX,6BAA6B,CACvDQ,QAAQ,CAACD,IAAT,CAAcK,OADyC,CAAzD;AAGA,YAAMpB,GAAG,CAACO,kBAAkB,CAACY,mBAAD,CAAnB,CAAT;AACD,KALD,MAKO;AACL,YAAMA,mBAAmB,GAAGV,2BAA2B,CACrDO,QAAQ,CAACD,IAAT,CAAcM,KADuC,CAAvD;AAGA,YAAMrB,GAAG,CAACU,iBAAiB,CAACM,QAAQ,CAACD,IAAV,CAAlB,CAAT;AACA,YAAMf,GAAG,CAACO,kBAAkB,CAACY,mBAAD,CAAnB,CAAT;AACD;AACF,GAlBD,CAkBE,OAAOE,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACI,qBAAqB,CAACiB,KAAD,CAAtB,CAAT;AACA,UAAMF,mBAAmB,GAAGV,2BAA2B,CAACY,KAAK,CAACD,OAAP,CAAvD;AACA,UAAMpB,GAAG,CAACO,kBAAkB,CAACY,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAAC,MAAMD,UAAU,CAACK,qBAAD,EAAwBK,iBAAxB,CAAjB,CAAD,CAAT;AACD","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport {\n  changePasswordSuccess,\n  changePasswordFailure,\n} from \"../actions/UserAction\";\nimport api from \"../../Environment\";\nimport { CHANGE_PASSWORD_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* changePasswordAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.changePassword.inputData.data\n    );\n    const response = yield api.postMethod(\"change_password\", inputData);\n    yield put(changePasswordSuccess(response.data.data));\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(changePasswordFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(CHANGE_PASSWORD_START, changePasswordAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}