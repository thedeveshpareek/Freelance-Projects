{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(changePasswordAPI),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import{changePasswordSuccess,changePasswordFailure}from\"../actions/UserAction\";import api from\"../../Environment\";import{CHANGE_PASSWORD_START}from\"../actions/ActionConstant\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function changePasswordAPI(){var inputData,response,notificationMessage,_notificationMessage,_notificationMessage2;return _regeneratorRuntime.wrap(function changePasswordAPI$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return select(function(state){return state.changePassword.inputData.data;});case 3:inputData=_context.sent;_context.next=6;return api.postMethod(\"change_password\",inputData);case 6:response=_context.sent;_context.next=9;return put(changePasswordSuccess(response.data.data));case 9:if(!response.data.success){_context.next=15;break;}notificationMessage=getSuccessNotificationMessage(response.data.message);_context.next=13;return put(createNotification(notificationMessage));case 13:_context.next=20;break;case 15:_notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=18;return put(checkLogoutStatus(response.data));case 18:_context.next=20;return put(createNotification(_notificationMessage));case 20:_context.next=29;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](0);_context.next=26;return put(changePasswordFailure(_context.t0));case 26:_notificationMessage2=getErrorNotificationMessage(_context.t0.message);_context.next=29;return put(createNotification(_notificationMessage2));case 29:case\"end\":return _context.stop();}}},_marked,null,[[0,22]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=all;_context2.next=3;return takeLatest(CHANGE_PASSWORD_START,changePasswordAPI);case 3:_context2.t1=_context2.sent;_context2.t2=[_context2.t1];_context2.next=7;return(0,_context2.t0)(_context2.t2);case 7:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/ChangePasswordSaga.jsx"],"names":["changePasswordAPI","pageSaga","call","select","put","takeLatest","all","changePasswordSuccess","changePasswordFailure","api","CHANGE_PASSWORD_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","checkLogoutStatus","state","changePassword","inputData","data","postMethod","response","success","notificationMessage","message","error"],"mappings":"kNAiBUA,iB,iDA0BeC,Q,EA3CzB,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,CAA4BC,UAA5B,CAAwCC,GAAxC,KAAmD,oBAAnD,CACA,OACEC,qBADF,CAEEC,qBAFF,KAGO,uBAHP,CAIA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,OAASC,qBAAT,KAAsC,2BAAtC,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OACEC,6BADF,CAEEC,2BAFF,KAGO,6CAHP,CAKA,OACEC,iBADF,KAEO,wBAFP,CAIA,QAAUd,CAAAA,iBAAV,mPAEsB,MAAMG,CAAAA,MAAM,CAC5B,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,cAAN,CAAqBC,SAArB,CAA+BC,IAA1C,EAD4B,CAAZ,CAFtB,OAEUD,SAFV,+BAKqB,MAAMR,CAAAA,GAAG,CAACU,UAAJ,CAAe,iBAAf,CAAkCF,SAAlC,CAAN,CALrB,OAKUG,QALV,+BAMI,MAAMhB,CAAAA,GAAG,CAACG,qBAAqB,CAACa,QAAQ,CAACF,IAAT,CAAcA,IAAf,CAAtB,CAAT,CANJ,WAOQE,QAAQ,CAACF,IAAT,CAAcG,OAPtB,0BAQYC,mBARZ,CAQkCV,6BAA6B,CACvDQ,QAAQ,CAACF,IAAT,CAAcK,OADyC,CAR/D,kBAWM,MAAMnB,CAAAA,GAAG,CAACO,kBAAkB,CAACW,mBAAD,CAAnB,CAAT,CAXN,uCAaYA,oBAbZ,CAakCT,2BAA2B,CACrDO,QAAQ,CAACF,IAAT,CAAcM,KADuC,CAb7D,kBAgBM,MAAMpB,CAAAA,GAAG,CAACU,iBAAiB,CAACM,QAAQ,CAACF,IAAV,CAAlB,CAAT,CAhBN,yBAiBM,MAAMd,CAAAA,GAAG,CAACO,kBAAkB,CAACW,oBAAD,CAAnB,CAAT,CAjBN,0GAoBI,MAAMlB,CAAAA,GAAG,CAACI,qBAAqB,aAAtB,CAAT,CApBJ,QAqBUc,qBArBV,CAqBgCT,2BAA2B,CAAC,YAAMU,OAAP,CArB3D,kBAsBI,MAAMnB,CAAAA,GAAG,CAACO,kBAAkB,CAACW,qBAAD,CAAnB,CAAT,CAtBJ,qEA0BA,cAAe,SAAUrB,CAAAA,QAAV,oIACPK,GADO,kBACF,MAAMD,CAAAA,UAAU,CAACK,qBAAD,CAAwBV,iBAAxB,CAAhB,CADE,gFACb,qCADa","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport {\n  changePasswordSuccess,\n  changePasswordFailure,\n} from \"../actions/UserAction\";\nimport api from \"../../Environment\";\nimport { CHANGE_PASSWORD_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* changePasswordAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.changePassword.inputData.data\n    );\n    const response = yield api.postMethod(\"change_password\", inputData);\n    yield put(changePasswordSuccess(response.data.data));\n    if (response.data.success) {\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(changePasswordFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(CHANGE_PASSWORD_START, changePasswordAPI)]);\n}\n"]},"metadata":{},"sourceType":"module"}