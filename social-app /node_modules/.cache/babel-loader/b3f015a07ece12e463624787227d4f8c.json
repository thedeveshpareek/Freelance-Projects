{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/PaymentModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { subscriptionPaymentStripeStart, subscriptionPaymentPaypalStart, subscriptionPaymentCCBillStart, subscriptionPaymentWalletStart, subscriptionPaymentCoinPaymentStart } from \"../../store/actions/SubscriptionAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport configuration from \"react-global-configuration\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PaymentModal = props => {\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  const [showPayPal, payPal] = useState(false);\n  useEffect(() => {\n    props.dispatch(fetchCardDetailsStart());\n    props.dispatch(fetchWalletDetailsStart());\n  }, []);\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n\n  const choosePaymentOption = event => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (paymentType === \"CARD\") props.dispatch(subscriptionPaymentStripeStart({\n      user_unique_id: props.user_unique_id,\n      plan_type: props.subscriptionData.plan_type,\n      is_free: props.subscriptionData.is_free\n    }));\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n    if (paymentType === \"WALLET\") props.dispatch(subscriptionPaymentWalletStart({\n      user_unique_id: props.user_unique_id,\n      plan_type: props.subscriptionData.plan_type,\n      is_free: props.subscriptionData.is_free\n    }));\n    if (paymentType === \"CCBILL\") props.dispatch(subscriptionPaymentCCBillStart({\n      user_unique_id: props.user_unique_id,\n      plan_type: props.subscriptionData.plan_type\n    }));\n    if (paymentType === \"coinpayment\") props.dispatch(subscriptionPaymentCoinPaymentStart({\n      user_unique_id: props.user_unique_id,\n      plan_type: props.subscriptionData.plan_type\n    })); // props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = payment => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(subscriptionPaymentPaypalStart({\n        payment_id: payment.paymentID,\n        user_unique_id: props.user_unique_id,\n        plan_type: props.subscriptionData.plan_type,\n        is_free: props.subscriptionData.is_free\n      }));\n    }, 1000);\n  };\n\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(\"Payment cancelled please try again..\");\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: props.subscrptionPayment,\n    onHide: props.closePaymentModal,\n    centered: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, props.subscrptionPayment === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, t(\"subscribe\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"subscription-tip-ppv-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: paymentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CARD\"),\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 27\n    }\n  }, t(\"card_stripe\"))) : null, configuration.get(\"configData.is_paypal_enabled\") == 1 && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"PAYPAL\"),\n    eventKey: \"PAYPAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 27\n    }\n  }, t(\"paypal\"))) : null, configuration.get(\"configData.is_ccbill_enabled\") == 1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CCBILL\"),\n    eventKey: \"CCBILL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 27\n    }\n  }, t(\"ccbill\"))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"WALLET\"),\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 27\n    }\n  }, t(\"wallet\"))) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"amount\"),\n    value: props.subscriptionData.amount_formatted,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 31\n    }\n  }, props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ? props.cards.data.cards.map(card => card.is_default == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-list-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 43\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 43\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-action-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-link-text text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 47\n    }\n  }, t(\"default_card\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"add-account-icon\",\n    src: window.location.origin + \"/assets/images/icons/new/add-card.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 41\n    }\n  }, \"Add Card\")))))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, props.wallet.loading ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-balence-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, t(\"available\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, props.wallet.data.user_wallet.remaining_formatted)), props.subscriptionData.amount > props.wallet.data.user_wallet.remaining ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conv-desc desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 39\n    }\n  }, t(\"low_wallet_balance_tips_payment_para\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wallet\",\n    className: \"withdraw-money-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 41\n    }\n  }, t(\"add_wallet_amount\")))) : null)) : null))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, paymentType === \"PAYPAL\" && props.subscriptionData.amount != 0 ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: props.subscriptionData.amount,\n    onError: paypalOnError,\n    onSuccess: paypalOnSuccess,\n    onCancel: paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closePaymentModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), paymentType !== \"PAYPAL\" ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    onClick: handleSubmit,\n    disabled: props.subPayStripe.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, props.subPayStripe.loadingButtonContent !== null ? props.subPayStripe.loadingButtonContent : t(\"pay_now\")) : null)) : null));\n};\n\nconst mapStateToPros = state => ({\n  subPayStripe: state.subscriptions.subPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(PaymentModal));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/PaymentModal.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","Tab","Nav","Row","Col","connect","subscriptionPaymentStripeStart","subscriptionPaymentPaypalStart","subscriptionPaymentCCBillStart","subscriptionPaymentWalletStart","subscriptionPaymentCoinPaymentStart","fetchCardDetailsStart","fetchWalletDetailsStart","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","configuration","Link","translate","t","PaymentModal","props","paymentType","setPaymentType","localStorage","getItem","showPayPal","payPal","dispatch","env","get","currency","client","sandbox","production","choosePaymentOption","event","handleSubmit","preventDefault","user_unique_id","plan_type","subscriptionData","is_free","paypalOnSuccess","payment","console","log","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","subscrptionPayment","closePaymentModal","amount_formatted","cards","loading","length","map","card","is_default","last_four","card_type","window","location","origin","wallet","user_wallet","remaining_formatted","amount","remaining","subPayStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","subscriptions","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Button,\n  Image,\n  Modal,\n  Tab,\n  Nav,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  subscriptionPaymentStripeStart,\n  subscriptionPaymentPaypalStart,\n  subscriptionPaymentCCBillStart,\n  subscriptionPaymentWalletStart,\n  subscriptionPaymentCoinPaymentStart,\n} from \"../../store/actions/SubscriptionAction\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport configuration from \"react-global-configuration\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst PaymentModal = (props) => {\n  const [paymentType, setPaymentType] = useState(\n    localStorage.getItem(\"default_payment_method\")\n  );\n\n  const [showPayPal, payPal] = useState(false);\n\n  useEffect(() => {\n    props.dispatch(fetchCardDetailsStart());\n    props.dispatch(fetchWalletDetailsStart());\n  }, []);\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  const choosePaymentOption = (event) => {\n    setPaymentType(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        subscriptionPaymentStripeStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n          is_free: props.subscriptionData.is_free,\n        })\n      );\n    if (paymentType === \"PAYPAL\") showPayPal(true);\n\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        subscriptionPaymentWalletStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n          is_free: props.subscriptionData.is_free,\n        })\n      );\n\n    if (paymentType === \"CCBILL\")\n      props.dispatch(\n        subscriptionPaymentCCBillStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n        })\n      );\n    if (paymentType === \"coinpayment\")\n      props.dispatch(\n        subscriptionPaymentCoinPaymentStart({\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n        })\n      );\n    // props.closePaymentModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    console.log(payment);\n    setTimeout(() => {\n      props.dispatch(\n        subscriptionPaymentPaypalStart({\n          payment_id: payment.paymentID,\n          user_unique_id: props.user_unique_id,\n          plan_type: props.subscriptionData.plan_type,\n          is_free: props.subscriptionData.is_free,\n        })\n      );\n    }, 1000);\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  return (\n    <>\n      <Modal\n        show={props.subscrptionPayment}\n        onHide={props.closePaymentModal}\n        centered\n        size=\"lg\"\n      >\n        {props.subscrptionPayment === true ? (\n          <>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"subscribe\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"subscription-tip-ppv-tab\">\n              <Tab.Container\n                id=\"left-tabs-example\"\n                defaultActiveKey={paymentType}\n              >\n                <Row>\n                  <Col sm={3}>\n                    <Nav variant=\"pills\" className=\"flex-column\">\n                      {configuration.get(\"configData.is_stripe_enabled\") == 1 &&\n                      configuration.get(\"configData.stripe_publishable_key\") !==\n                        \"\" &&\n                      configuration.get(\"configData.stripe_secret_key\") !==\n                        \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"CARD\")}\n                            eventKey=\"CARD\"\n                          >\n                            {t(\"card_stripe\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\"configData.is_paypal_enabled\") == 1 &&\n                      configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"PAYPAL\")}\n                            eventKey=\"PAYPAL\"\n                          >\n                            {t(\"paypal\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\"configData.is_ccbill_enabled\") == 1 &&\n                      configuration.get(\"configData.flex_form_id\") !== \"\" &&\n                      configuration.get(\"configData.salt_key\") !== \"\" ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"CCBILL\")}\n                            eventKey=\"CCBILL\"\n                          >\n                            {t(\"ccbill\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                      {configuration.get(\n                        \"configData.is_wallet_payment_enabled\"\n                      ) == 1 ? (\n                        <Nav.Item>\n                          <Nav.Link\n                            onClick={() => setPaymentType(\"WALLET\")}\n                            eventKey=\"WALLET\"\n                          >\n                            {t(\"wallet\")}\n                          </Nav.Link>\n                        </Nav.Item>\n                      ) : null}\n                    </Nav>\n                  </Col>\n                  <Col sm={9}>\n                    <div className=\"card-stripe-box\">\n                      <Form onSubmit={handleSubmit}>\n                        <Form.Group\n                          className=\"mb-3\"\n                          controlId=\"exampleForm.ControlInput1\"\n                        >\n                          <Form.Control\n                            type=\"text\"\n                            placeholder={t(\"amount\")}\n                            value={props.subscriptionData.amount_formatted}\n                            disabled\n                          />\n                        </Form.Group>\n                        <Tab.Content>\n                          {configuration.get(\"configData.is_stripe_enabled\") ==\n                            1 &&\n                          configuration.get(\n                            \"configData.stripe_publishable_key\"\n                          ) !== \"\" &&\n                          configuration.get(\"configData.stripe_secret_key\") !==\n                            \"\" ? (\n                            <Tab.Pane eventKey=\"CARD\">\n                              <div className=\"card-stripe-sec\">\n                                {props.cards.loading ? (\n                                  \"\"\n                                ) : props.cards.data.cards.length > 0 ? (\n                                  props.cards.data.cards.map(\n                                    (card) =>\n                                      card.is_default == 1 && (\n                                        <div className=\"card-stripe-list-box\">\n                                          <h5 className=\"mb-3\">\n                                            XXXX XXXX XXXX {card.last_four}\n                                          </h5>\n                                          <h5 className=\"text-muted\">\n                                            {card.card_type}\n                                          </h5>\n                                          <div className=\"card-stripe-bottom\">\n                                            <div className=\"card-stripe-action-btn\">\n                                              <p className=\"card-link-text text-success\">\n                                                {t(\"default_card\")}\n                                              </p>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      )\n                                  )\n                                ) : (\n                                  <div className=\"card-stripe-item\">\n                                    <Link to=\"cards\">\n                                      <div className=\"add-account-item\">\n                                        <Image\n                                          className=\"add-account-icon\"\n                                          src={\n                                            window.location.origin +\n                                            \"/assets/images/icons/new/add-card.svg\"\n                                          }\n                                        />\n                                        <h5 className=\"text-muted\">Add Card</h5>\n                                      </div>\n                                    </Link>\n                                  </div>\n                                )}\n                              </div>\n                            </Tab.Pane>\n                          ) : null}\n\n                          {configuration.get(\n                            \"configData.is_wallet_payment_enabled\"\n                          ) == 1 ? (\n                            <Tab.Pane eventKey=\"WALLET\">\n                              {props.wallet.loading ? (\n                                \"\"\n                              ) : (\n                                <div className=\"card-stripe-box\">\n                                  <div className=\"wallet-balence-amount\">\n                                    <h4>{t(\"available\")}</h4>\n                                    <p>\n                                      {\n                                        props.wallet.data.user_wallet\n                                          .remaining_formatted\n                                      }\n                                    </p>\n                                  </div>\n                                  {props.subscriptionData.amount >\n                                  props.wallet.data.user_wallet.remaining ? (\n                                    <div className=\"\">\n                                      <p className=\"conv-desc desc\">\n                                        {t(\n                                          \"low_wallet_balance_tips_payment_para\"\n                                        )}\n                                      </p>\n                                      <div className=\"d-flex\">\n                                        <Link\n                                          to=\"/wallet\"\n                                          className=\"withdraw-money-btn\"\n                                        >\n                                          {t(\"add_wallet_amount\")}\n                                        </Link>\n                                      </div>\n                                    </div>\n                                  ) : null}\n                                </div>\n                              )}\n                            </Tab.Pane>\n                          ) : null}\n                        </Tab.Content>\n                      </Form>\n                    </div>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Modal.Body>\n            <Modal.Footer>\n              {paymentType === \"PAYPAL\" &&\n              props.subscriptionData.amount != 0 ? (\n                <PaypalExpressBtn\n                  env={env}\n                  client={client}\n                  currency={currency}\n                  total={props.subscriptionData.amount}\n                  onError={paypalOnError}\n                  onSuccess={paypalOnSuccess}\n                  onCancel={paypalOnCancel}\n                />\n              ) : null}\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closePaymentModal}\n              >\n                Cancel\n              </Button>\n              {paymentType !== \"PAYPAL\" ? (\n                <Button\n                  type=\"button\"\n                  className=\"btn btn-success\"\n                  data-dismiss=\"modal\"\n                  onClick={handleSubmit}\n                  disabled={props.subPayStripe.buttonDisable}\n                >\n                  {props.subPayStripe.loadingButtonContent !== null\n                    ? props.subPayStripe.loadingButtonContent\n                    : t(\"pay_now\")}\n                </Button>\n              ) : null}\n            </Modal.Footer>\n          </>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  subPayStripe: state.subscriptions.subPayStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(PaymentModal));\n"]},"metadata":{},"sourceType":"module"}