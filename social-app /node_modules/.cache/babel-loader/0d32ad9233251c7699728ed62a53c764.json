{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchSinglePage),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import api from\"../../Environment\";import{FETCH_SINGLE_PAGE_START}from\"../actions/ActionConstant\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{fetchSinglePageSuccess,fetchSinglePageFailure}from\"../actions/PageAction\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function fetchSinglePage(){var inputData,response,notificationMessage,_notificationMessage;return _regeneratorRuntime.wrap(function fetchSinglePage$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return select(function(state){return state.page.pageData.inputData;});case 3:inputData=_context.sent;_context.next=6;return api.postMethod(\"static_pages\",inputData);case 6:response=_context.sent;if(!response.data.success){_context.next=12;break;}_context.next=10;return put(fetchSinglePageSuccess(response.data.data));case 10:_context.next=19;break;case 12:_context.next=14;return put(fetchSinglePageFailure(response.data.error));case 14:notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=17;return put(checkLogoutStatus(response.data));case 17:_context.next=19;return put(createNotification(notificationMessage));case 19:_context.next=28;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](0);_context.next=25;return put(fetchSinglePageFailure(_context.t0));case 25:_notificationMessage=getErrorNotificationMessage(_context.t0.message);_context.next=28;return put(createNotification(_notificationMessage));case 28:case\"end\":return _context.stop();}}},_marked,null,[[0,21]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=all;_context2.next=3;return takeLatest(FETCH_SINGLE_PAGE_START,fetchSinglePage);case 3:_context2.t1=_context2.sent;_context2.t2=[_context2.t1];_context2.next=7;return(0,_context2.t0)(_context2.t2);case 7:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/PageSaga.jsx"],"names":["fetchSinglePage","pageSaga","call","select","put","takeLatest","all","api","FETCH_SINGLE_PAGE_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchSinglePageSuccess","fetchSinglePageFailure","checkLogoutStatus","state","page","pageData","inputData","postMethod","response","data","success","error","notificationMessage","message"],"mappings":"kNAiBUA,e,iDAqBeC,Q,EAtCzB,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,CAA4BC,UAA5B,CAAwCC,GAAxC,KAAmD,oBAAnD,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,OAASC,uBAAT,KAAwC,2BAAxC,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OACEC,6BADF,CAEEC,2BAFF,KAGO,6CAHP,CAIA,OACEC,sBADF,CAEEC,sBAFF,KAGO,uBAHP,CAKA,OACEC,iBADF,KAEO,wBAFP,CAIA,QAAUd,CAAAA,eAAV,2NAEsB,MAAMG,CAAAA,MAAM,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,SAA/B,EAAD,CAAZ,CAFtB,OAEUA,SAFV,+BAGqB,MAAMX,CAAAA,GAAG,CAACY,UAAJ,CAAe,cAAf,CAA+BD,SAA/B,CAAN,CAHrB,OAGUE,QAHV,mBAIQA,QAAQ,CAACC,IAAT,CAAcC,OAJtB,2CAKM,MAAMlB,CAAAA,GAAG,CAACQ,sBAAsB,CAACQ,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAvB,CAAT,CALN,wDAOM,MAAMjB,CAAAA,GAAG,CAACS,sBAAsB,CAACO,QAAQ,CAACC,IAAT,CAAcE,KAAf,CAAvB,CAAT,CAPN,QAQYC,mBARZ,CAQkCb,2BAA2B,CACrDS,QAAQ,CAACC,IAAT,CAAcE,KADuC,CAR7D,kBAWM,MAAMnB,CAAAA,GAAG,CAACU,iBAAiB,CAACM,QAAQ,CAACC,IAAV,CAAlB,CAAT,CAXN,yBAYM,MAAMjB,CAAAA,GAAG,CAACK,kBAAkB,CAACe,mBAAD,CAAnB,CAAT,CAZN,0GAeI,MAAMpB,CAAAA,GAAG,CAACS,sBAAsB,aAAvB,CAAT,CAfJ,QAgBUW,oBAhBV,CAgBgCb,2BAA2B,CAAC,YAAMc,OAAP,CAhB3D,kBAiBI,MAAMrB,CAAAA,GAAG,CAACK,kBAAkB,CAACe,oBAAD,CAAnB,CAAT,CAjBJ,qEAqBA,cAAe,SAAUvB,CAAAA,QAAV,oIACPK,GADO,kBACF,MAAMD,CAAAA,UAAU,CAACG,uBAAD,CAA0BR,eAA1B,CAAhB,CADE,gFACb,qCADa","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_SINGLE_PAGE_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchSinglePageSuccess,\n  fetchSinglePageFailure,\n} from \"../actions/PageAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* fetchSinglePage() {\n  try {\n    const inputData = yield select((state) => state.page.pageData.inputData);\n    const response = yield api.postMethod(\"static_pages\", inputData);\n    if (response.data.success) {\n      yield put(fetchSinglePageSuccess(response.data.data));\n    } else {\n      yield put(fetchSinglePageFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSinglePageFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_SINGLE_PAGE_START, fetchSinglePage)]);\n}\n"]},"metadata":{},"sourceType":"module"}