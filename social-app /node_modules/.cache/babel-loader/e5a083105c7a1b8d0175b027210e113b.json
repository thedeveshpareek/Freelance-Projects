{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/helper/SendTipModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Image, Modal, Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { sendTipStripeStart, sendTipWalletStart, sendTipPaypalStart, sendTipCCBillStart, sendTipCoinPaymentStart } from \"../../store/actions/SendTipAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport configuration from \"react-global-configuration\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst SendTipModal = props => {\n  const [amount, setAmount] = useState(1);\n  const [paymentType, setPaymentType] = useState(localStorage.getItem(\"default_payment_method\"));\n  const [message, setMessage] = useState(\"\");\n  const [showPayPal, payPal] = useState(false);\n  useEffect(() => {\n    if (props.sendTip === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.sendTip]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (paymentType === \"CARD\") props.dispatch(sendTipStripeStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: amount,\n      message: message,\n      user_id: props.user_id\n    }));\n    if (paymentType === \"WALLET\") props.dispatch(sendTipWalletStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: amount,\n      message: message,\n      user_id: props.user_id\n    }));\n    if (paymentType === \"CCBILL\") props.dispatch(sendTipCCBillStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: amount,\n      user_id: props.user_id\n    }));\n    if (paymentType === \"coinpayment\") props.dispatch(sendTipCoinPaymentStart({\n      post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n      amount: amount,\n      user_id: props.user_id\n    }));\n    props.closeSendTipModal();\n  };\n\n  const paypalOnSuccess = payment => {\n    setTimeout(() => {\n      props.dispatch(sendTipPaypalStart({\n        payment_id: payment.paymentID,\n        post_id: props.post_id != undefined || props.post_id != null ? props.post_id : \"\",\n        amount: amount,\n        user_id: props.user_id\n      }));\n    }, 1000);\n    props.closeSendTipModal();\n  };\n\n  const paypalOnError = err => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = data => {\n    const notificationMessage = getErrorNotificationMessage(\"Payment cancelled please try again..\");\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const choosePaymentOption = event => {\n    console.log(amount);\n    setPaymentType(event);\n  };\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\")\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    size: \"lg\",\n    className: \"modal-dialog-center sent-tip-modal\",\n    show: props.sendTip,\n    onHide: props.closeSendTipModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, props.sendTip === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, t(\"send_tip\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"subscription-tip-ppv-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: paymentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CARD\"),\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, t(\"card_stripe\"))) : null, configuration.get(\"configData.is_paypal_enabled\") == 1 && configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"PAYPAL\"),\n    eventKey: \"PAYPAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, t(\"paypal\"))) : null, configuration.get(\"configData.is_ccbill_enabled\") == 1 && configuration.get(\"configData.flex_form_id\") !== \"\" && configuration.get(\"configData.salt_key\") !== \"\" ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"CCBILL\"),\n    eventKey: \"CCBILL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, t(\"ccbill\"))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    onClick: () => setPaymentType(\"WALLET\"),\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 23\n    }\n  }, t(\"wallet\"))) : null)), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: t(\"tip_amount\") // value={amount}\n    ,\n    defaultValue: amount,\n    onChange: event => {\n      if (event.currentTarget.value > 0) {\n        setAmount(event.currentTarget.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, configuration.get(\"configData.is_stripe_enabled\") == 1 && configuration.get(\"configData.stripe_publishable_key\") !== \"\" && configuration.get(\"configData.stripe_secret_key\") !== \"\" ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"CARD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 27\n    }\n  }, props.cards.loading ? \"\" : props.cards.data.cards.length > 0 ? props.cards.data.cards.map(card => card.is_default == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-list-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 39\n    }\n  }, \"XXXX XXXX XXXX \", card.last_four), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 39\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-action-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-link-text text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 43\n    }\n  }, t(\"default_card\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-account-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"add-account-icon\",\n    src: window.location.origin + \"/assets/images/icons/new/add-card.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, \"Add Card\")))))) : null, configuration.get(\"configData.is_wallet_payment_enabled\") == 1 ? /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"WALLET\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, props.wallet.loading ? \"\" : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stripe-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wallet-balence-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }, t(\"available\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, props.wallet.data.user_wallet.remaining_formatted)), amount > props.wallet.data.user_wallet.remaining ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"conv-desc desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 35\n    }\n  }, t(\"low_wallet_balance_tips_payment_para\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wallet\",\n    className: \"withdraw-money-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, t(\"add_wallet_amount\")))) : null)) : null), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    placeholder: t(\"message_optional\"),\n    className: \"height-auto\",\n    onChange: event => {\n      setMessage(event.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  })))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, paymentType === \"PAYPAL\" && amount != 0 ? /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n    env: env,\n    client: client,\n    currency: currency,\n    total: amount,\n    onError: paypalOnError,\n    onSuccess: paypalOnSuccess,\n    onCancel: paypalOnCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    \"data-dismiss\": \"modal\",\n    onClick: props.closeSendTipModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, t(\"cancel\")), paymentType !== \"PAYPAL\" ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    onClick: handleSubmit,\n    disabled: props.tipStripe.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, props.tipStripe.loadingButtonContent !== null ? props.tipStripe.loadingButtonContent : t(\"send_tip\")) : null)) : null));\n};\n\nconst mapStateToPros = state => ({\n  tipStripe: state.tip.tipStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(SendTipModal));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/helper/SendTipModal.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","Tab","Nav","Row","Col","connect","sendTipStripeStart","sendTipWalletStart","sendTipPaypalStart","sendTipCCBillStart","sendTipCoinPaymentStart","fetchWalletDetailsStart","configuration","PaypalExpressBtn","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchCardDetailsStart","Link","translate","t","SendTipModal","props","amount","setAmount","paymentType","setPaymentType","localStorage","getItem","message","setMessage","showPayPal","payPal","sendTip","dispatch","handleSubmit","event","preventDefault","post_id","undefined","user_id","closeSendTipModal","paypalOnSuccess","payment","setTimeout","payment_id","paymentID","paypalOnError","err","notificationMessage","paypalOnCancel","data","choosePaymentOption","console","log","env","get","currency","client","sandbox","production","currentTarget","value","cards","loading","length","map","card","is_default","last_four","card_type","window","location","origin","wallet","user_wallet","remaining_formatted","remaining","tipStripe","buttonDisable","loadingButtonContent","mapStateToPros","state","tip","walletData","cardDetails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Button,\n  Image,\n  Modal,\n  Tab,\n  Nav,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  sendTipStripeStart,\n  sendTipWalletStart,\n  sendTipPaypalStart,\n  sendTipCCBillStart,\n  sendTipCoinPaymentStart,\n} from \"../../store/actions/SendTipAction\";\nimport { fetchWalletDetailsStart } from \"../../store/actions/WalletAction\";\nimport configuration from \"react-global-configuration\";\n\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport { fetchCardDetailsStart } from \"../../store/actions/CardsAction\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst SendTipModal = (props) => {\n  const [amount, setAmount] = useState(1);\n  const [paymentType, setPaymentType] = useState(\n    localStorage.getItem(\"default_payment_method\")\n  );\n  const [message, setMessage] = useState(\"\");\n  const [showPayPal, payPal] = useState(false);\n\n  useEffect(() => {\n    if (props.sendTip === true) {\n      props.dispatch(fetchCardDetailsStart());\n      props.dispatch(fetchWalletDetailsStart());\n    }\n  }, [props.sendTip]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (paymentType === \"CARD\")\n      props.dispatch(\n        sendTipStripeStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: amount,\n          message: message,\n          user_id: props.user_id,\n        })\n      );\n    if (paymentType === \"WALLET\")\n      props.dispatch(\n        sendTipWalletStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: amount,\n          message: message,\n          user_id: props.user_id,\n        })\n      );\n    if (paymentType === \"CCBILL\")\n      props.dispatch(\n        sendTipCCBillStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: amount,\n          user_id: props.user_id,\n        })\n      );\n    if (paymentType === \"coinpayment\")\n      props.dispatch(\n        sendTipCoinPaymentStart({\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: amount,\n          user_id: props.user_id,\n        })\n      );\n    props.closeSendTipModal();\n  };\n\n  const paypalOnSuccess = (payment) => {\n    setTimeout(() => {\n      props.dispatch(\n        sendTipPaypalStart({\n          payment_id: payment.paymentID,\n          post_id:\n            props.post_id != undefined || props.post_id != null\n              ? props.post_id\n              : \"\",\n          amount: amount,\n          user_id: props.user_id,\n        })\n      );\n    }, 1000);\n    props.closeSendTipModal();\n  };\n\n  const paypalOnError = (err) => {\n    const notificationMessage = getErrorNotificationMessage(err);\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const paypalOnCancel = (data) => {\n    const notificationMessage = getErrorNotificationMessage(\n      \"Payment cancelled please try again..\"\n    );\n    this.props.dispatch(createNotification(notificationMessage));\n  };\n\n  const choosePaymentOption = (event) => {\n    console.log(amount);\n    setPaymentType(event);\n  };\n\n  let env = configuration.get(\"configData.PAYPAL_MODE\"); // you can set here to 'production' for production\n  let currency = \"USD\"; // or you can set this value from your props or state\n\n  const client = {\n    sandbox: configuration.get(\"configData.PAYPAL_ID\"),\n    production: configuration.get(\"configData.PAYPAL_ID\"),\n  };\n\n  return (\n    <>\n      <Modal\n        centered\n        size=\"lg\"\n        className=\"modal-dialog-center sent-tip-modal\"\n        show={props.sendTip}\n        onHide={props.closeSendTipModal}\n      >\n        {props.sendTip === true ? \n        <>\n        <Modal.Header closeButton>\n          <Modal.Title>{t(\"send_tip\")}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"subscription-tip-ppv-tab\">\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey={paymentType}>\n            <Row>\n              <Col sm={3}>\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  {configuration.get(\"configData.is_stripe_enabled\") == 1 &&\n                  configuration.get(\"configData.stripe_publishable_key\") !==\n                    \"\" &&\n                  configuration.get(\"configData.stripe_secret_key\") !== \"\" ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setPaymentType(\"CARD\")}\n                        eventKey=\"CARD\"\n                      >\n                        {t(\"card_stripe\")}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : null}\n                  {configuration.get(\"configData.is_paypal_enabled\") == 1 &&\n                  configuration.get(\"configData.PAYPAL_ID\") !== \"\" ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setPaymentType(\"PAYPAL\")}\n                        eventKey=\"PAYPAL\"\n                      >\n                        {t(\"paypal\")}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : null}\n                  {configuration.get(\"configData.is_ccbill_enabled\") == 1 &&\n                  configuration.get(\"configData.flex_form_id\") !== \"\" &&\n                  configuration.get(\"configData.salt_key\") !== \"\" ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setPaymentType(\"CCBILL\")}\n                        eventKey=\"CCBILL\"\n                      >\n                        {t(\"ccbill\")}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : null}\n                  {configuration.get(\"configData.is_wallet_payment_enabled\") ==\n                  1 ? (\n                    <Nav.Item>\n                      <Nav.Link\n                        onClick={() => setPaymentType(\"WALLET\")}\n                        eventKey=\"WALLET\"\n                      >\n                        {t(\"wallet\")}\n                      </Nav.Link>\n                    </Nav.Item>\n                  ) : null}\n                </Nav>\n              </Col>\n              <Col sm={9}>\n                <div className=\"card-stripe-box\">\n                  <Form>\n                    <Form.Group\n                      className=\"mb-3\"\n                      controlId=\"exampleForm.ControlInput1\"\n                    >\n                      <Form.Control\n                        type=\"number\"\n                        placeholder={t(\"tip_amount\")}\n                        // value={amount}\n                        defaultValue={amount}\n                        onChange={(event) => {\n                          if (event.currentTarget.value > 0) {\n                            setAmount(event.currentTarget.value);\n                          }\n                        }}\n                      />\n                    </Form.Group>\n                    <Tab.Content>\n                      {configuration.get(\"configData.is_stripe_enabled\") == 1 &&\n                      configuration.get(\"configData.stripe_publishable_key\") !==\n                        \"\" &&\n                      configuration.get(\"configData.stripe_secret_key\") !==\n                        \"\" ? (\n                        <Tab.Pane eventKey=\"CARD\">\n                          <div className=\"card-stripe-sec\">\n                            {props.cards.loading ? (\n                              \"\"\n                            ) : props.cards.data.cards.length > 0 ? (\n                              props.cards.data.cards.map(\n                                (card) =>\n                                  card.is_default == 1 && (\n                                    <div className=\"card-stripe-list-box\">\n                                      <h5 className=\"mb-3\">\n                                        XXXX XXXX XXXX {card.last_four}\n                                      </h5>\n                                      <h5 className=\"text-muted\">\n                                        {card.card_type}\n                                      </h5>\n                                      <div className=\"card-stripe-bottom\">\n                                        <div className=\"card-stripe-action-btn\">\n                                          <p className=\"card-link-text text-success\">\n                                            {t(\"default_card\")}\n                                          </p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  )\n                              )\n                            ) : (\n                              <div className=\"card-stripe-item\">\n                                <Link to=\"cards\">\n                                  <div className=\"add-account-item\">\n                                    <Image\n                                      className=\"add-account-icon\"\n                                      src={\n                                        window.location.origin +\n                                        \"/assets/images/icons/new/add-card.svg\"\n                                      }\n                                    />\n                                    <h5 className=\"text-muted\">Add Card</h5>\n                                  </div>\n                                </Link>\n                              </div>\n                            )}\n                          </div>\n                        </Tab.Pane>\n                      ) : null}\n\n                      {configuration.get(\n                        \"configData.is_wallet_payment_enabled\"\n                      ) == 1 ? (\n                        <Tab.Pane eventKey=\"WALLET\">\n                          {props.wallet.loading ? (\n                            \"\"\n                          ) : (\n                            <div className=\"card-stripe-box\">\n                              <div className=\"wallet-balence-amount\">\n                                <h4>{t(\"available\")}</h4>\n                                <p>\n                                  {\n                                    props.wallet.data.user_wallet\n                                      .remaining_formatted\n                                  }\n                                </p>\n                              </div>\n                              {amount >\n                              props.wallet.data.user_wallet.remaining ? (\n                                <div className=\"\">\n                                  <p className=\"conv-desc desc\">\n                                    {t(\"low_wallet_balance_tips_payment_para\")}\n                                  </p>\n                                  <div className=\"d-flex\">\n                                    <Link\n                                      to=\"/wallet\"\n                                      className=\"withdraw-money-btn\"\n                                    >\n                                      {t(\"add_wallet_amount\")}\n                                    </Link>\n                                  </div>\n                                </div>\n                              ) : null}\n                            </div>\n                          )}\n                        </Tab.Pane>\n                      ) : null}\n                    </Tab.Content>\n                    <Form.Group\n                      className=\"mb-3\"\n                      controlId=\"exampleForm.ControlTextarea1\"\n                    >\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        placeholder={t(\"message_optional\")}\n                        className=\"height-auto\"\n                        onChange={(event) => {\n                          setMessage(event.currentTarget.value);\n                        }}\n                      />\n                    </Form.Group>\n                  </Form>\n                </div>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </Modal.Body>\n        <Modal.Footer>\n          {paymentType === \"PAYPAL\" && amount != 0 ? (\n            <PaypalExpressBtn\n              env={env}\n              client={client}\n              currency={currency}\n              total={amount}\n              onError={paypalOnError}\n              onSuccess={paypalOnSuccess}\n              onCancel={paypalOnCancel}\n            />\n          ) : null}\n          <Button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            data-dismiss=\"modal\"\n            onClick={props.closeSendTipModal}\n          >\n            {t(\"cancel\")}\n          </Button>\n          {paymentType !== \"PAYPAL\" ? (\n            <Button\n              type=\"button\"\n              className=\"btn btn-success\"\n              data-dismiss=\"modal\"\n              onClick={handleSubmit}\n              disabled={props.tipStripe.buttonDisable}\n            >\n              {props.tipStripe.loadingButtonContent !== null\n                ? props.tipStripe.loadingButtonContent\n                : t(\"send_tip\")}\n            </Button>\n          ) : null}\n        </Modal.Footer>\n        </>\n        : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  tipStripe: state.tip.tipStripe,\n  wallet: state.wallet.walletData,\n  cards: state.cards.cardDetails,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(SendTipModal));\n"]},"metadata":{},"sourceType":"module"}