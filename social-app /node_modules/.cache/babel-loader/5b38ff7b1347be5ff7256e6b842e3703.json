{"ast":null,"code":"import _objectSpread from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button,Image,Modal,Row,Col}from\"react-bootstrap\";import{connect}from\"react-redux\";import configuration from\"react-global-configuration\";import{translate,t}from\"react-multi-lang\";import{videoCallBroadcastStart}from\"../../store/actions/LiveVideoAction\";var GoLiveModal=function GoLiveModal(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),inputData=_useState2[0],setInputData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),paymentStatus=_useState4[0],setPaymentStatus=_useState4[1];var paymentStatusOnchange=function paymentStatusOnchange(event){setInputData(_objectSpread(_objectSpread({},inputData),{},{payment_status:event}));setPaymentStatus(event);};var handleSubmit=function handleSubmit(event){event.preventDefault();props.dispatch(videoCallBroadcastStart(inputData));props.closeGoLiveModal();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-center sent-tip-modal go-live-modal\",size:\"lg\",centered:true,show:props.goLive,onHide:props.closeGoLiveModal},props.goLive===true?/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"go_live\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"div\",{className:\"go-live-img-sec\"},/*#__PURE__*/React.createElement(Image,{className:\"go-live-img\",src:window.location.origin+\"/assets/images/go-live-img.svg\"}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(\"div\",{className:\"header-userinfo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"g-avatar online_status_class\"},/*#__PURE__*/React.createElement(Image,{src:props.userPicture,alt:props.name,className:\"tips__user__img\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"body-userinfo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"popup-username-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pop-username\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},props.name,\" \",props.is_verified_badge==1?/*#__PURE__*/React.createElement(\"img\",{className:\"verified-badge\",alt:\"verified-badge\",src:configuration.get(\"configData.verified_badge_file\")?configuration.get(\"configData.verified_badge_file\"):\"\"}):null))),/*#__PURE__*/React.createElement(\"div\",{className:\"popup-username-row\"},/*#__PURE__*/React.createElement(\"span\",{className:\"pop-username popuser-realname\"},/*#__PURE__*/React.createElement(\"div\",{className:\"pop-user-username\"},\"@\",props.username))))),/*#__PURE__*/React.createElement(\"div\",{className:\"floating-form go-live-form\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"choose-payment-label\"},t(\"title\")),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:t(\"title\"),value:inputData.title?inputData.title:null,onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{title:event.currentTarget.value}));}})),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"label\",{className:\"choose-payment-label\"},t(\"choose_streaming_mode\")),[\"radio\"].map(function(type){return/*#__PURE__*/React.createElement(\"div\",{key:\"custom-inline-\".concat(type),className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Check,{custom:true,inline:true,label:\"Public\",type:type,id:\"public\",value:\"public\",name:\"type\"// defaultChecked={true}\n,onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{type:\"public\"}));}}),/*#__PURE__*/React.createElement(Form.Check,{custom:true,inline:true,label:\"Private\",type:type// id={`custom-inline-${type}-2`}\n,id:\"private\",value:\"private\",name:\"type\",onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{type:\"private\"}));}}));})),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"label\",{className:\"choose-payment-label\"},t(\"payment_status\")),[\"radio\"].map(function(type){return/*#__PURE__*/React.createElement(\"div\",{key:\"custom-inline-\".concat(type),className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Check,{custom:true,inline:true,label:\"Free\",type:type,id:\"free\",value:\"0\",name:\"payment_status\"// defaultChecked={true}\n,onChange:function onChange(event){paymentStatusOnchange(event.currentTarget.value);}}),/*#__PURE__*/React.createElement(Form.Check,{custom:true,inline:true,label:\"Paid\",type:type// id={`custom-inline-${type}-2`}\n,id:\"paid\",value:\"1\",name:\"payment_status\",onChange:function onChange(event){paymentStatusOnchange(event.currentTarget.value);}}));})),paymentStatus==1?/*#__PURE__*/ // <div className=\"floating-label mb-4\">\n//   <input\n//     className=\"floating-input\"\n//     type=\"number\"\n//     min=\"0\"\n//     step=\"any\"\n//     value={inputData.amount ? inputData.amount : null}\n//     onChange={(event) =>\n//       setInputData({\n//         ...inputData,\n//         amount: event.currentTarget.value,\n//       })\n//     }\n//   />\n//   <span className=\"highlight\"></span>\n//   <label className=\"default-label\">{t(\"amount\")}</label>\n// </div>\nReact.createElement(Form.Group,{controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"choose-payment-label\"},t(\"amount\")),/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",min:\"0\",step:\"any\",value:inputData.amount?inputData.amount:null,onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{amount:event.currentTarget.value}));}})):\"\",/*#__PURE__*/React.createElement(Form.Group,{controlId:\"exampleForm.ControlInput1\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"choose-payment-label\"},t(\"description\"),\" (\",t(\"optional\"),\")\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"textarea\",rows:2,className:\"height-auto\",value:inputData.description?inputData.description:null,placeholder:t(\"go_live_description_placeholder\"),onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{description:event.currentTarget.value}));}})))))),/*#__PURE__*/React.createElement(Modal.Footer,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-danger\",\"data-dismiss\":\"modal\",onClick:props.closeGoLiveModal},t(\"cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-success\",\"data-dismiss\":\"modal\",onClick:handleSubmit,disabled:props.videocall.buttonDisable},props.videocall.loadingButtonContent!==null?props.videocall.loadingButtonContent:t(\"go_live\")))):null));};var mapStateToPros=function mapStateToPros(state){return{videocall:state.videocall.saveVideoCallRequest};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(GoLiveModal));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/GoLiveModal.jsx"],"names":["React","useState","Form","Button","Image","Modal","Row","Col","connect","configuration","translate","t","videoCallBroadcastStart","GoLiveModal","props","inputData","setInputData","paymentStatus","setPaymentStatus","paymentStatusOnchange","event","payment_status","handleSubmit","preventDefault","dispatch","closeGoLiveModal","goLive","window","location","origin","userPicture","name","is_verified_badge","get","username","title","currentTarget","value","map","type","amount","description","videocall","buttonDisable","loadingButtonContent","mapStateToPros","state","saveVideoCallRequest","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Image, Modal, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport { videoCallBroadcastStart } from \"../../store/actions/LiveVideoAction\";\n\nconst GoLiveModal = (props) => {\n  const [inputData, setInputData] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState(0);\n\n  const paymentStatusOnchange = (event) => {\n    setInputData({\n      ...inputData,\n      payment_status: event,\n    });\n    setPaymentStatus(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(videoCallBroadcastStart(inputData));\n    props.closeGoLiveModal();\n  };\n  return (\n    <>\n      <Modal\n        className=\"modal-dialog-center sent-tip-modal go-live-modal\"\n        size=\"lg\"\n        centered\n        show={props.goLive}\n        onHide={props.closeGoLiveModal}\n      >\n        {props.goLive === true ? (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"go_live\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Row>\n                <Col md={6}>\n                  <div className=\"go-live-img-sec\">\n                    <Image\n                        className=\"go-live-img\"\n                        src={\n                            window.location.origin + \"/assets/images/go-live-img.svg\"\n                        }\n                    />\n                  </div>\n                </Col>\n                <Col md={6}>\n                <div className=\"header-userinfo\">\n                  <div className=\"g-avatar online_status_class\">\n                    <Image\n                      src={props.userPicture}\n                      alt={props.name}\n                      className=\"tips__user__img\"\n                    />\n                  </div>\n                  <div className=\"body-userinfo\">\n                    <div className=\"popup-username-row\">\n                      <div className=\"pop-username\">\n                        <div className=\"\">\n                          {props.name}{\" \"}\n                          {props.is_verified_badge == 1 ? (\n                            <img\n                              className=\"verified-badge\"\n                              alt=\"verified-badge\"\n                              src={\n                                configuration.get(\n                                  \"configData.verified_badge_file\"\n                                )\n                                  ? configuration.get(\n                                      \"configData.verified_badge_file\"\n                                    )\n                                  : \"\"\n                              }\n                            />\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"popup-username-row\">\n                      <span className=\"pop-username popuser-realname\">\n                        <div className=\"pop-user-username\">@{props.username}</div>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"floating-form go-live-form\">\n                  {/* <div className=\"floating-label mb-4\">\n                    <input\n                      className=\"floating-input\"\n                      type=\"text\"\n                      placeholder={t(\"title\")}\n                      value={inputData.title ? inputData.title : null}\n                      onChange={(event) =>\n                        setInputData({\n                          ...inputData,\n                          title: event.currentTarget.value,\n                        })\n                      }\n                    />\n                    <span className=\"highlight\"></span>\n                    <label className=\"default-label\">{t(\"title\")}</label>\n                  </div> */}\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label className=\"choose-payment-label\">{t(\"title\")}</Form.Label>\n                    <Form.Control type=\"text\" placeholder={t(\"title\")}\n                      value={inputData.title ? inputData.title : null}\n                      onChange={(event) =>\n                        setInputData({\n                          ...inputData,\n                          title: event.currentTarget.value,\n                        })\n                      } />\n                  </Form.Group>\n                  <Form>\n                    <label className=\"choose-payment-label\">\n                      {t(\"choose_streaming_mode\")}\n                    </label>\n                    {[\"radio\"].map((type) => (\n                      <div key={`custom-inline-${type}`} className=\"mb-3\">\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Public\"\n                          type={type}\n                          id=\"public\"\n                          value=\"public\"\n                          name=\"type\"\n                          // defaultChecked={true}\n                          onChange={(event) =>\n                            setInputData({\n                              ...inputData,\n                              type: \"public\",\n                            })\n                          }\n                        />\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Private\"\n                          type={type}\n                          // id={`custom-inline-${type}-2`}\n                          id=\"private\"\n                          value=\"private\"\n                          name=\"type\"\n                          onChange={(event) =>\n                            setInputData({\n                              ...inputData,\n                              type: \"private\",\n                            })\n                          }\n                        />\n                      </div>\n                    ))}\n                  </Form>\n                  <Form>\n                    <label className=\"choose-payment-label\">\n                      {t(\"payment_status\")}\n                    </label>\n                    {[\"radio\"].map((type) => (\n                      <div key={`custom-inline-${type}`} className=\"mb-3\">\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Free\"\n                          type={type}\n                          id=\"free\"\n                          value=\"0\"\n                          name=\"payment_status\"\n                          // defaultChecked={true}\n                          onChange={(event) => {\n                            paymentStatusOnchange(event.currentTarget.value);\n                          }}\n                        />\n                        <Form.Check\n                          custom\n                          inline\n                          label=\"Paid\"\n                          type={type}\n                          // id={`custom-inline-${type}-2`}\n                          id=\"paid\"\n                          value=\"1\"\n                          name=\"payment_status\"\n                          onChange={(event) => {\n                            paymentStatusOnchange(event.currentTarget.value);\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </Form>\n\n                  {paymentStatus == 1 ? (\n                    // <div className=\"floating-label mb-4\">\n                    //   <input\n                    //     className=\"floating-input\"\n                    //     type=\"number\"\n                    //     min=\"0\"\n                    //     step=\"any\"\n                    //     value={inputData.amount ? inputData.amount : null}\n                    //     onChange={(event) =>\n                    //       setInputData({\n                    //         ...inputData,\n                    //         amount: event.currentTarget.value,\n                    //       })\n                    //     }\n                    //   />\n                    //   <span className=\"highlight\"></span>\n                    //   <label className=\"default-label\">{t(\"amount\")}</label>\n                    // </div>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                      <Form.Label className=\"choose-payment-label\">{t(\"amount\")}</Form.Label>\n                      <Form.Control  type=\"number\"\n                        min=\"0\"\n                        step=\"any\"\n                        value={inputData.amount ? inputData.amount : null}\n                        onChange={(event) =>\n                          setInputData({\n                            ...inputData,\n                            amount: event.currentTarget.value,\n                          })\n                        } />\n                    </Form.Group>\n                  ) : (\n                    \"\"\n                  )}\n                  {/* <div className=\"floating-label\">\n                    <input\n                      className=\"floating-input\"\n                      type=\"text\"\n                      value={inputData.description ? inputData.description : null}\n                      placeholder={t(\"go_live_description_placeholder\")}\n                      onChange={(event) =>\n                        setInputData({\n                          ...inputData,\n                          description: event.currentTarget.value,\n                        })\n                      }\n                    />\n                    <span className=\"highlight\"></span>\n                    <label className=\"default-label\">\n                      {t(\"description\")} ({t(\"optional\")})\n                    </label>\n                  </div> */}\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                      <Form.Label className=\"choose-payment-label\">{t(\"description\")} ({t(\"optional\")})</Form.Label>\n                      <Form.Control  as=\"textarea\" rows={2}\n                        className=\"height-auto\"\n                        value={inputData.description ? inputData.description : null}\n                        placeholder={t(\"go_live_description_placeholder\")}\n                        onChange={(event) =>\n                          setInputData({\n                            ...inputData,\n                            description: event.currentTarget.value,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                </div>\n                </Col>\n              </Row>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={props.closeGoLiveModal}\n              >\n                {t(\"cancel\")}\n              </Button>\n              <Button\n                type=\"button\"\n                className=\"btn btn-success\"\n                data-dismiss=\"modal\"\n                onClick={handleSubmit}\n                disabled={props.videocall.buttonDisable}\n              >\n                {props.videocall.loadingButtonContent !== null\n                  ? props.videocall.loadingButtonContent\n                  : t(\"go_live\")}\n              </Button>\n            </Modal.Footer>\n          </Form>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  videocall: state.videocall.saveVideoCallRequest,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(GoLiveModal));\n"]},"metadata":{},"sourceType":"module"}