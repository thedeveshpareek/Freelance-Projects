{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/BecomeAContentCreator/Step4.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Image, Button, Media, Form, Table, Badge } from \"react-bootstrap\";\nimport \"./BecomeAContentCreator.css\";\nimport { connect } from \"react-redux\";\nimport { deleteBankAccountContentCreatorFlowStart, getBankAccountStart, makeDefaultBankAccountStart, addBankAccountContentreatorFlowStart } from \"../../store/actions/BankAccountAction\";\nimport { fetchUserDetailsStart } from \"../../store/actions/UserAction\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getErrorNotificationMessage } from \"../helper/NotificationMessage\";\nimport NoDataFound from \"../NoDataFound/NoDataFound\";\nimport BillingAccountLoader from \"../Loader/BillingAccountLoader\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst Step4 = props => {\n  const [inputData, setInputData] = useState({});\n  useEffect(() => {\n    if (props.user.data.content_creator_step === 0) {\n      const notificationMessage = getErrorNotificationMessage(t(\"upload_doc_message\"));\n      props.dispatch(createNotification(notificationMessage));\n      props.jumpToStep(0);\n    } else if (props.user.data.content_creator_step === 1) {\n      const notificationMessage = getErrorNotificationMessage(t(\"doc_verification_pending_message\"));\n      props.dispatch(fetchUserDetailsStart());\n      props.dispatch(createNotification(notificationMessage));\n      props.jumpToStep(2);\n    }\n\n    props.dispatch(getBankAccountStart());\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.dispatch(addBankAccountContentreatorFlowStart(inputData));\n  };\n\n  useEffect(() => {\n    if (props.addBankAccount.data.success && props.user.data.content_creator_step === 2) {\n      props.dispatch(fetchUserDetailsStart());\n    }\n  }, [props.addBankAccount.data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-5-payout-method-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-5-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, t('payout_methods')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, t('there_are_two_different_payment_types_available_to_you_below'))), props.bankAccount.loading ? /*#__PURE__*/React.createElement(BillingAccountLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }) : props.bankAccount.data.billing_accounts.length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trans-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    borderedless: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"bg-white text-muted text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, t(\"first_name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }, t(\"last_name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }, t(\"route_number\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, t(\"account_number\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }, t(\"bank_type\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, t(\"business_name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, t(\"is_default\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, t(\"status\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, props.bankAccount.data.billing_accounts.map(accounts => /*#__PURE__*/React.createElement(\"tr\", {\n    key: accounts.user_billing_account_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, accounts.first_name ? accounts.first_name : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, accounts.last_name ? accounts.last_name : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, accounts.route_number ? accounts.route_number : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, accounts.account_number ? accounts.account_number : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, accounts.bank_type ? accounts.bank_type : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, accounts.business_name ? accounts.business_name : \"-\"), accounts.is_default === 1 ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    className: \"confirmed-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, t(\"yes\"))) : /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    className: \"unconfirmed-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, t(\"no\"))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, accounts.is_default === 0 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: () => props.dispatch(makeDefaultBankAccountStart({\n      user_billing_account_id: accounts.user_billing_account_id\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, t(\"make_default\")) : null, \" \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => {\n      if (window.confirm(t(\"delete_billing_acc_confirmation\"))) {\n        props.dispatch(deleteBankAccountContentCreatorFlowStart({\n          user_billing_account_id: accounts.user_billing_account_id\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 27\n    }\n  }, t(\"delete\")), \" \")))))))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"step-5-payment-method\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Bank Transfer\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formHorizontalNickname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, t(\"routing_number\"), \": (*)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"routing_number\"),\n    value: inputData.route_number,\n    name: \"route_number\",\n    onChange: event => {\n      setInputData({ ...inputData,\n        route_number: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formHorizontalAccountNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, t(\"account_number\"), \": (*)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: t(\"account_number\"),\n    value: inputData.account_number,\n    min: \"0\",\n    name: \"account_number\",\n    onChange: event => {\n      setInputData({ ...inputData,\n        account_number: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, t(\"type_of_bank\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, \"(*)\")), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    name: \"bank_type\",\n    onChange: event => {\n      setInputData({ ...inputData,\n        bank_type: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"savings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, t(\"savings\")), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"checking\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, t(\"checking\"))))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formHorizontalFirstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, t(\"first_name\"), \": (*)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"first_name\"),\n    value: inputData.first_name,\n    name: \"first_name\",\n    onChange: event => {\n      setInputData({ ...inputData,\n        first_name: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formHorizontalLastname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, t(\"last_name\"), \": (*)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"last_name\"),\n    value: inputData.last_name,\n    name: \"last_name\",\n    onChange: event => {\n      setInputData({ ...inputData,\n        last_name: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formHorizontalBusinessname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, t(\"business_name\"), \": (\", t(\"optional\"), \")\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: t(\"business_name\"),\n    value: inputData.business_name,\n    name: \"business_name\",\n    onChange: event => {\n      setInputData({ ...inputData,\n        business_name: event.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    type: \"checkbox\",\n    id: \"customControlAutosizing\",\n    custom: true,\n    required: \"required\",\n    className: \"check-terms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    target: \"_blank\",\n    to: \"/page/terms\",\n    className: \"terms-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, \" \", t(\"I agree to Terms & Conditions\"), \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn gradient-btn gradientcolor addBank\",\n    type: \"submit\",\n    disabled: props.addBankAccount.buttonDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, props.addBankAccount.loadingButtonContent !== null ? props.addBankAccount.loadingButtonContent : t(\"submit\")))))));\n};\n\nconst mapStateToPros = state => ({\n  bankAccount: state.bankAccount.bankAccount,\n  addBankAccount: state.bankAccount.addBankAccountInput\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(Step4));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/BecomeAContentCreator/Step4.jsx"],"names":["React","useState","useEffect","Container","Row","Col","Image","Button","Media","Form","Table","Badge","connect","deleteBankAccountContentCreatorFlowStart","getBankAccountStart","makeDefaultBankAccountStart","addBankAccountContentreatorFlowStart","fetchUserDetailsStart","createNotification","getErrorNotificationMessage","NoDataFound","BillingAccountLoader","Link","translate","t","Step4","props","inputData","setInputData","user","data","content_creator_step","notificationMessage","dispatch","jumpToStep","handleSubmit","event","preventDefault","addBankAccount","success","bankAccount","loading","billing_accounts","length","map","accounts","user_billing_account_id","first_name","last_name","route_number","account_number","bank_type","business_name","is_default","window","confirm","currentTarget","value","buttonDisable","loadingButtonContent","mapStateToPros","state","addBankAccountInput","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  Button,\n  Media,\n  Form,\n  Table,\n  Badge,\n} from \"react-bootstrap\";\nimport \"./BecomeAContentCreator.css\";\nimport { connect } from \"react-redux\";\nimport {\n  deleteBankAccountContentCreatorFlowStart,\n  getBankAccountStart,\n  makeDefaultBankAccountStart,\n  addBankAccountContentreatorFlowStart,\n} from \"../../store/actions/BankAccountAction\";\nimport { fetchUserDetailsStart } from \"../../store/actions/UserAction\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getErrorNotificationMessage } from \"../helper/NotificationMessage\";\nimport NoDataFound from \"../NoDataFound/NoDataFound\";\nimport BillingAccountLoader from \"../Loader/BillingAccountLoader\";\nimport { Link } from \"react-router-dom\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst Step4 = (props) => {\n  const [inputData, setInputData] = useState({});\n\n  useEffect(() => {\n    if (props.user.data.content_creator_step === 0) {\n      const notificationMessage = getErrorNotificationMessage(\n        t(\"upload_doc_message\")\n      );\n      props.dispatch(createNotification(notificationMessage));\n      props.jumpToStep(0);\n    } else if (props.user.data.content_creator_step === 1) {\n      const notificationMessage = getErrorNotificationMessage(\n        t(\"doc_verification_pending_message\")\n      );\n      props.dispatch(fetchUserDetailsStart());\n      props.dispatch(createNotification(notificationMessage));\n      props.jumpToStep(2);\n    }\n    props.dispatch(getBankAccountStart());\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(addBankAccountContentreatorFlowStart(inputData));\n  };\n\n  useEffect(() => {\n    if (props.addBankAccount.data.success && props.user.data.content_creator_step === 2) {\n      props.dispatch(fetchUserDetailsStart());\n    }\n  },[props.addBankAccount.data])\n\n  return (\n    <>\n      <div className=\"step-5-payout-method-sec\">\n        <div className=\"step-5-info\">\n          <h4>{t('payout_methods')}</h4>\n          <p>\n            {t('there_are_two_different_payment_types_available_to_you_below')}\n          </p>\n        </div>\n        {props.bankAccount.loading ? (\n          <BillingAccountLoader />\n        ) : props.bankAccount.data.billing_accounts.length > 0 ? (\n          <Row>\n            <Col sm={12} md={12}>\n              <div className=\"trans-table\">\n                <Table borderedless responsive>\n                  <thead>\n                    <tr className=\"bg-white text-muted text-center\">\n                      <th>{t(\"first_name\")}</th>\n                      <th>{t(\"last_name\")}</th>\n                      <th>{t(\"route_number\")}</th>\n                      <th>{t(\"account_number\")}</th>\n                      <th>{t(\"bank_type\")}</th>\n                      <th>{t(\"business_name\")}</th>\n                      <th>{t(\"is_default\")}</th>\n                      <th>{t(\"status\")}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {props.bankAccount.data.billing_accounts.map((accounts) => (\n                      <tr key={accounts.user_billing_account_id}>\n                        <td className=\"text-capitalize\">\n                          {accounts.first_name ? accounts.first_name : \"-\"}\n                        </td>\n                        <td className=\"text-capitalize\">\n                          {accounts.last_name ? accounts.last_name : \"-\"}\n                        </td>\n                        <td>\n                          {accounts.route_number ? accounts.route_number : \"-\"}\n                        </td>\n                        <td className=\"amount\">\n                          {accounts.account_number\n                            ? accounts.account_number\n                            : \"-\"}\n                        </td>\n                        <td className=\"text-capitalize\">\n                          {accounts.bank_type ? accounts.bank_type : \"-\"}\n                        </td>\n                        <td className=\"text-capitalize\">\n                          {accounts.business_name\n                            ? accounts.business_name\n                            : \"-\"}\n                        </td>\n                        {accounts.is_default === 1 ? (\n                          <td>\n                            <Badge className=\"confirmed-badge\">{t(\"yes\")}</Badge>\n                          </td>\n                        ) : (\n                          <td>\n                            <Badge className=\"unconfirmed-badge\">\n                              {t(\"no\")}\n                            </Badge>\n                          </td>\n                        )}\n                        <td>\n                          {accounts.is_default === 0 ? (\n                            <Button\n                              variant=\"success\"\n                              onClick={() =>\n                                props.dispatch(\n                                  makeDefaultBankAccountStart({\n                                    user_billing_account_id:\n                                      accounts.user_billing_account_id,\n                                  })\n                                )\n                              }\n                            >\n                              {t(\"make_default\")}\n                            </Button>\n                          ) : null}{\" \"}\n                          <Button\n                            variant=\"danger\"\n                            onClick={() => {\n                              if (\n                                window.confirm(\n                                  t(\"delete_billing_acc_confirmation\")\n                                )\n                              ) {\n                                props.dispatch(\n                                  deleteBankAccountContentCreatorFlowStart({\n                                    user_billing_account_id:\n                                      accounts.user_billing_account_id,\n                                  })\n                                );\n                              }\n                            }}\n                          >\n                            {t(\"delete\")}\n                          </Button>{\" \"}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            </Col>\n          </Row>\n        ) : null}\n        <div className=\"step-5-payment-method\">\n          <h5>Bank Transfer</h5>\n          <Form onSubmit={handleSubmit}>\n            <Col md={6}>\n              <Form.Group controlId=\"formHorizontalNickname\">\n                <Form.Label>{t(\"routing_number\")}: (*)</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={t(\"routing_number\")}\n                  value={inputData.route_number}\n                  name=\"route_number\"\n                  onChange={(event) => {\n                    setInputData({\n                      ...inputData,\n                      route_number: event.currentTarget.value,\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Col>\n\n            <Col md={6}>\n              <Form.Group controlId=\"formHorizontalAccountNumber\">\n                <Form.Label>{t(\"account_number\")}: (*)</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder={t(\"account_number\")}\n                  value={inputData.account_number}\n                  min=\"0\"\n                  name=\"account_number\"\n                  onChange={(event) => {\n                    setInputData({\n                      ...inputData,\n                      account_number: event.currentTarget.value,\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Col>\n\n            <Col md={6}>\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>\n                  {t(\"type_of_bank\")}{\" \"}\n                  <span className=\"text-capitalize\">(*)</span>\n                </Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"bank_type\"\n                  onChange={(event) => {\n                    setInputData({\n                      ...inputData,\n                      bank_type: event.currentTarget.value,\n                    });\n                  }}\n                >\n                  <option value=\"savings\">{t(\"savings\")}</option>\n                  <option value=\"checking\">{t(\"checking\")}</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n\n            <Col md={6}>\n              <Form.Group controlId=\"formHorizontalFirstname\">\n                <Form.Label>{t(\"first_name\")}: (*)</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={t(\"first_name\")}\n                  value={inputData.first_name}\n                  name=\"first_name\"\n                  onChange={(event) => {\n                    setInputData({\n                      ...inputData,\n                      first_name: event.currentTarget.value,\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group controlId=\"formHorizontalLastname\">\n                <Form.Label>{t(\"last_name\")}: (*)</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={t(\"last_name\")}\n                  value={inputData.last_name}\n                  name=\"last_name\"\n                  onChange={(event) => {\n                    setInputData({\n                      ...inputData,\n                      last_name: event.currentTarget.value,\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Col>\n\n            <Col md={6}>\n              <Form.Group controlId=\"formHorizontalBusinessname\">\n                <Form.Label>\n                  {t(\"business_name\")}: ({t(\"optional\")})\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={t(\"business_name\")}\n                  value={inputData.business_name}\n                  name=\"business_name\"\n                  onChange={(event) => {\n                    setInputData({\n                      ...inputData,\n                      business_name: event.currentTarget.value,\n                    });\n                  }}\n                />\n              </Form.Group>\n            </Col>\n\n            <Col md={6}>\n              <Form.Check\n                inline\n                type=\"checkbox\"\n                id=\"customControlAutosizing\"\n                custom\n                required=\"required\"\n                className=\"check-terms\"\n              />\n              <Form.Label>\n                <Link target=\"_blank\" to=\"/page/terms\" className=\"terms-link\">\n                  {\" \"}\n                  {t(\"I agree to Terms & Conditions\")}{\" \"}\n                </Link>\n              </Form.Label>\n            </Col>\n\n            <div className=\"edit-save\">\n              <Button\n                className=\"btn gradient-btn gradientcolor addBank\"\n                type=\"submit\"\n                disabled={props.addBankAccount.buttonDisable}\n              >\n                {props.addBankAccount.loadingButtonContent !== null\n                  ? props.addBankAccount.loadingButtonContent\n                  : t(\"submit\")}\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  bankAccount: state.bankAccount.bankAccount,\n  addBankAccount: state.bankAccount.addBankAccountInput,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(Step4));\n"]},"metadata":{},"sourceType":"module"}