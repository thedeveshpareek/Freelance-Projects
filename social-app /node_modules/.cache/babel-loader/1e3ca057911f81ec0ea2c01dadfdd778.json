{"ast":null,"code":"import React, { Component } from \"react\";\nimport { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { DELETE_PRO_IMAGE_PRO_OWNER_START, FETCH_PRODUCTS_PRO_OWNER_START, FETCH_PRO_CATE_PRO_OWNER_START, FETCH_PRO_IMAGE_PRO_OWNER_START, FETCH_PRO_SUBCATE_PRO_OWNER_START, FETCH_SINGLE_PRO_OWNER_START, PRO_SEARCH_PRO_OWNER_START, SAVE_PRO_IMAGE_PRO_OWNER_START, SAVE_PRO_OWNER_START, SET_VISIBILITY_PRO_OWNER_START, UPDATE_AVAILABILITY_PRO_OWNER_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { deleteProImageProOwnerFailure, deleteProImageProOwnerSuccess, fetchProCateProOwnerFailure, fetchProCateProOwnerSuccess, fetchProductsProOwnerFailure, fetchProductsProOwnerSuccess, fetchProImageProOwnerFailure, fetchProImageProOwnerSuccess, fetchProSubCateProOwnerFailure, fetchProSubCateProOwnerSuccess, fetchSingleProOwnerFailure, fetchSingleProOwnerSuccess, proSearchProOwnerFailure, proSearchProOwnerSuccess, saveProImageProOwnerFailure, saveProImageProOwnerSuccess, saveProOwnerFailure, saveProOwnerSuccess, setVisibilityProOwnerFailure, setVisibilityProOwnerSuccess, updateAvailabiltyProOwnerFailure, updateAvailabiltyProOwnerSuccess } from \"../actions/ProductOwnerAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* saveProOwnerAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.saveProduct.inputData);\n    const response = yield api.postMethod(\"user_products_save\", inputData);\n\n    if (response.data.success) {\n      yield put(saveProOwnerSuccess(response.data.data));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n      yield put(saveProOwnerFailure(response.data.error));\n    }\n  } catch (error) {\n    yield put(saveProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleProProOwnerAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.singlePro.inputData);\n    const response = yield api.postMethod(\"user_products_view\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchSingleProOwnerSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* setVisibleAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.setVisible.inputData);\n    const response = yield api.postMethod(\"user_products_set_visibility\", inputData);\n\n    if (response.data.success) {\n      yield put(setVisibilityProOwnerSuccess(response.data.data));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n      yield put(setVisibilityProOwnerFailure(response.data.error));\n    }\n  } catch (error) {\n    yield put(setVisibilityProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* updateAvailabiltyAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.updateAva.inputData);\n    const response = yield api.postMethod(\"user_products_update_availability\", inputData);\n\n    if (response.data.success) {\n      yield put(updateAvailabiltyProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(updateAvailabiltyProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(updateAvailabiltyProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProductsAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products\", action.data);\n\n    if (response.data.success) {\n      yield put(fetchProductsProOwnerSuccess(response.data.data));\n    } else {\n      yield put(fetchProductsProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProductsProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProCategoryAPI() {\n  try {\n    const response = yield api.postMethod(\"product_categories\");\n\n    if (response.data.success) {\n      yield put(fetchProCateProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchProCateProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProCateProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProSubCategoryAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.proSubCategory.inputData);\n    const response = yield api.postMethod(\"product_sub_categories\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchProSubCateProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchProSubCateProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProSubCateProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* proSearchAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.proSearch.inputData);\n    const response = yield api.postMethod(\"user_products_search\", inputData);\n\n    if (response.data.success) {\n      yield put(proSearchProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(proSearchProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(proSearchProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProImageAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.proImage.inputData);\n    const response = yield api.postMethod(\"user_product_pictures\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchProImageProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchProImageProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProImageProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveProImageAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.saveProImage.inputData);\n    const response = yield api.postMethod(\"user_product_pictures_save\", inputData);\n\n    if (response.data.success) {\n      yield put(saveProImageProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(saveProImageProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveProImageProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* delProImageAPI() {\n  try {\n    const inputData = yield select(state => state.proOwner.delProImage.inputData);\n    const response = yield api.postMethod(\"user_product_pictures_delete\", inputData);\n\n    if (response.data.success) {\n      yield put(deleteProImageProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteProImageProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteProImageProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(SAVE_PRO_OWNER_START, saveProOwnerAPI)]);\n  yield all([yield takeLatest(FETCH_SINGLE_PRO_OWNER_START, fetchSingleProProOwnerAPI)]);\n  yield all([yield takeLatest(SET_VISIBILITY_PRO_OWNER_START, setVisibleAPI)]);\n  yield all([yield takeLatest(UPDATE_AVAILABILITY_PRO_OWNER_START, updateAvailabiltyAPI)]);\n  yield all([yield takeLatest(FETCH_PRODUCTS_PRO_OWNER_START, fetchProductsAPI)]);\n  yield all([yield takeLatest(FETCH_PRO_CATE_PRO_OWNER_START, fetchProCategoryAPI)]);\n  yield all([yield takeLatest(FETCH_PRO_SUBCATE_PRO_OWNER_START, fetchProSubCategoryAPI)]);\n  yield all([yield takeLatest(PRO_SEARCH_PRO_OWNER_START, proSearchAPI)]);\n  yield all([yield takeLatest(FETCH_PRO_IMAGE_PRO_OWNER_START, fetchProImageAPI)]);\n  yield all([yield takeLatest(SAVE_PRO_IMAGE_PRO_OWNER_START, saveProImageAPI)]);\n  yield all([yield takeLatest(DELETE_PRO_IMAGE_PRO_OWNER_START, delProImageAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/ProductOwnerSaga.jsx"],"names":["React","Component","call","select","put","takeLatest","all","api","DELETE_PRO_IMAGE_PRO_OWNER_START","FETCH_PRODUCTS_PRO_OWNER_START","FETCH_PRO_CATE_PRO_OWNER_START","FETCH_PRO_IMAGE_PRO_OWNER_START","FETCH_PRO_SUBCATE_PRO_OWNER_START","FETCH_SINGLE_PRO_OWNER_START","PRO_SEARCH_PRO_OWNER_START","SAVE_PRO_IMAGE_PRO_OWNER_START","SAVE_PRO_OWNER_START","SET_VISIBILITY_PRO_OWNER_START","UPDATE_AVAILABILITY_PRO_OWNER_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","deleteProImageProOwnerFailure","deleteProImageProOwnerSuccess","fetchProCateProOwnerFailure","fetchProCateProOwnerSuccess","fetchProductsProOwnerFailure","fetchProductsProOwnerSuccess","fetchProImageProOwnerFailure","fetchProImageProOwnerSuccess","fetchProSubCateProOwnerFailure","fetchProSubCateProOwnerSuccess","fetchSingleProOwnerFailure","fetchSingleProOwnerSuccess","proSearchProOwnerFailure","proSearchProOwnerSuccess","saveProImageProOwnerFailure","saveProImageProOwnerSuccess","saveProOwnerFailure","saveProOwnerSuccess","setVisibilityProOwnerFailure","setVisibilityProOwnerSuccess","updateAvailabiltyProOwnerFailure","updateAvailabiltyProOwnerSuccess","checkLogoutStatus","saveProOwnerAPI","inputData","state","proOwner","saveProduct","response","postMethod","data","success","notificationMessage","error","message","fetchSingleProProOwnerAPI","singlePro","setVisibleAPI","setVisible","updateAvailabiltyAPI","updateAva","fetchProductsAPI","action","fetchProCategoryAPI","fetchProSubCategoryAPI","proSubCategory","proSearchAPI","proSearch","fetchProImageAPI","proImage","saveProImageAPI","saveProImage","delProImageAPI","delProImage","pageSaga"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  DELETE_PRO_IMAGE_PRO_OWNER_START,\n  FETCH_PRODUCTS_PRO_OWNER_START,\n  FETCH_PRO_CATE_PRO_OWNER_START,\n  FETCH_PRO_IMAGE_PRO_OWNER_START,\n  FETCH_PRO_SUBCATE_PRO_OWNER_START,\n  FETCH_SINGLE_PRO_OWNER_START,\n  PRO_SEARCH_PRO_OWNER_START,\n  SAVE_PRO_IMAGE_PRO_OWNER_START,\n  SAVE_PRO_OWNER_START,\n  SET_VISIBILITY_PRO_OWNER_START,\n  UPDATE_AVAILABILITY_PRO_OWNER_START,\n} from \"../actions/ActionConstant\";\n\nimport { createNotification } from \"react-redux-notify\";\n\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  deleteProImageProOwnerFailure,\n  deleteProImageProOwnerSuccess,\n  fetchProCateProOwnerFailure,\n  fetchProCateProOwnerSuccess,\n  fetchProductsProOwnerFailure,\n  fetchProductsProOwnerSuccess,\n  fetchProImageProOwnerFailure,\n  fetchProImageProOwnerSuccess,\n  fetchProSubCateProOwnerFailure,\n  fetchProSubCateProOwnerSuccess,\n  fetchSingleProOwnerFailure,\n  fetchSingleProOwnerSuccess,\n  proSearchProOwnerFailure,\n  proSearchProOwnerSuccess,\n  saveProImageProOwnerFailure,\n  saveProImageProOwnerSuccess,\n  saveProOwnerFailure,\n  saveProOwnerSuccess,\n  setVisibilityProOwnerFailure,\n  setVisibilityProOwnerSuccess,\n  updateAvailabiltyProOwnerFailure,\n  updateAvailabiltyProOwnerSuccess,\n} from \"../actions/ProductOwnerAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* saveProOwnerAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.saveProduct.inputData\n    );\n    const response = yield api.postMethod(\"user_products_save\", inputData);\n    if (response.data.success) {\n      yield put(saveProOwnerSuccess(response.data.data));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n      yield put(saveProOwnerFailure(response.data.error));\n    }\n  } catch (error) {\n    yield put(saveProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleProProOwnerAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.singlePro.inputData\n    );\n    const response = yield api.postMethod(\"user_products_view\", inputData);\n    if (response.data.success) {\n      yield put(fetchSingleProOwnerSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* setVisibleAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.setVisible.inputData\n    );\n    const response = yield api.postMethod(\n      \"user_products_set_visibility\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(setVisibilityProOwnerSuccess(response.data.data));\n    } else {\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n      yield put(setVisibilityProOwnerFailure(response.data.error));\n    }\n  } catch (error) {\n    yield put(setVisibilityProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* updateAvailabiltyAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.updateAva.inputData\n    );\n    const response = yield api.postMethod(\n      \"user_products_update_availability\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(updateAvailabiltyProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(updateAvailabiltyProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(updateAvailabiltyProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProductsAPI(action) {\n  try {\n    const response = yield api.postMethod(\"user_products\",action.data);\n\n    if (response.data.success) {\n      yield put(fetchProductsProOwnerSuccess(response.data.data));\n    } else {\n      yield put(fetchProductsProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProductsProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProCategoryAPI() {\n  try {\n    const response = yield api.postMethod(\"product_categories\");\n\n    if (response.data.success) {\n      yield put(fetchProCateProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchProCateProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProCateProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProSubCategoryAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.proSubCategory.inputData\n    );\n    const response = yield api.postMethod(\"product_sub_categories\", inputData);\n    if (response.data.success) {\n      yield put(fetchProSubCateProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchProSubCateProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProSubCateProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* proSearchAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.proSearch.inputData\n    );\n    const response = yield api.postMethod(\"user_products_search\", inputData);\n    if (response.data.success) {\n      yield put(proSearchProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(proSearchProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(proSearchProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchProImageAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.proImage.inputData\n    );\n    const response = yield api.postMethod(\"user_product_pictures\", inputData);\n    if (response.data.success) {\n      yield put(fetchProImageProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchProImageProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchProImageProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveProImageAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.saveProImage.inputData\n    );\n    const response = yield api.postMethod(\n      \"user_product_pictures_save\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(saveProImageProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(saveProImageProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(saveProImageProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* delProImageAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.proOwner.delProImage.inputData\n    );\n    const response = yield api.postMethod(\n      \"user_product_pictures_delete\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(deleteProImageProOwnerSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteProImageProOwnerFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteProImageProOwnerFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(SAVE_PRO_OWNER_START, saveProOwnerAPI)]);\n  yield all([\n    yield takeLatest(FETCH_SINGLE_PRO_OWNER_START, fetchSingleProProOwnerAPI),\n  ]);\n  yield all([yield takeLatest(SET_VISIBILITY_PRO_OWNER_START, setVisibleAPI)]);\n  yield all([\n    yield takeLatest(UPDATE_AVAILABILITY_PRO_OWNER_START, updateAvailabiltyAPI),\n  ]);\n  yield all([\n    yield takeLatest(FETCH_PRODUCTS_PRO_OWNER_START, fetchProductsAPI),\n  ]);\n  yield all([\n    yield takeLatest(FETCH_PRO_CATE_PRO_OWNER_START, fetchProCategoryAPI),\n  ]);\n  yield all([\n    yield takeLatest(FETCH_PRO_SUBCATE_PRO_OWNER_START, fetchProSubCategoryAPI),\n  ]);\n  yield all([yield takeLatest(PRO_SEARCH_PRO_OWNER_START, proSearchAPI)]);\n  yield all([\n    yield takeLatest(FETCH_PRO_IMAGE_PRO_OWNER_START, fetchProImageAPI),\n  ]);\n  yield all([\n    yield takeLatest(SAVE_PRO_IMAGE_PRO_OWNER_START, saveProImageAPI),\n  ]);\n  yield all([\n    yield takeLatest(DELETE_PRO_IMAGE_PRO_OWNER_START, delProImageAPI),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}