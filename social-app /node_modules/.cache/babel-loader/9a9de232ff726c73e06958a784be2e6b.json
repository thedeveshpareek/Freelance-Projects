{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_NOTIFICATIONS_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchNotificationsFailure, fetchNotificationsSuccess } from \"../actions/NotificationAction\";\n\nfunction* fetchNotificationAPI() {\n  try {\n    const inputData = yield select(state => state.notification.notification.inputData);\n    const response = yield api.postMethod(\"bell_notifications_index\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchNotificationsSuccess(response.data.data));\n    } else {\n      yield put(fetchNotificationsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchNotificationsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_NOTIFICATIONS_START, fetchNotificationAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/NotificationSaga.jsx"],"names":["call","select","put","takeLatest","all","api","FETCH_NOTIFICATIONS_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchNotificationsFailure","fetchNotificationsSuccess","fetchNotificationAPI","inputData","state","notification","response","postMethod","data","success","error","notificationMessage","message","pageSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SACEC,6BADF,EAEEC,2BAFF,QAGO,6CAHP;AAKA,SACEC,yBADF,EAEEC,yBAFF,QAGO,+BAHP;;AAKA,UAAUC,oBAAV,GAAiC;AAC/B,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMZ,MAAM,CAC3Ba,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBA,YAAnB,CAAgCF,SADf,CAA9B;AAGA,UAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACY,UAAJ,CACrB,0BADqB,EAErBJ,SAFqB,CAAvB;;AAIA,QAAIG,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,YAAMjB,GAAG,CAACS,yBAAyB,CAACK,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAA1B,CAAT;AACD,KAFD,MAEO;AACL,YAAMhB,GAAG,CAACQ,yBAAyB,CAACM,QAAQ,CAACE,IAAT,CAAcE,KAAf,CAA1B,CAAT;AACA,YAAMC,mBAAmB,GAAGZ,2BAA2B,CACrDO,QAAQ,CAACE,IAAT,CAAcE,KADuC,CAAvD;AAGA,YAAMlB,GAAG,CAACK,kBAAkB,CAACc,mBAAD,CAAnB,CAAT;AACD;AACF,GAjBD,CAiBE,OAAOD,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACQ,yBAAyB,CAACU,KAAD,CAA1B,CAAT;AACA,UAAMC,mBAAmB,GAAGZ,2BAA2B,CAACW,KAAK,CAACE,OAAP,CAAvD;AACA,UAAMpB,GAAG,CAACK,kBAAkB,CAACc,mBAAD,CAAnB,CAAT;AACD;AACF;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CACR,MAAMD,UAAU,CAACG,yBAAD,EAA4BM,oBAA5B,CADR,CAAD,CAAT;AAGD","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_NOTIFICATIONS_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\n\nimport {\n  fetchNotificationsFailure,\n  fetchNotificationsSuccess,\n} from \"../actions/NotificationAction\";\n\nfunction* fetchNotificationAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.notification.notification.inputData\n    );\n    const response = yield api.postMethod(\n      \"bell_notifications_index\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(fetchNotificationsSuccess(response.data.data));\n    } else {\n      yield put(fetchNotificationsFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchNotificationsFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([\n    yield takeLatest(FETCH_NOTIFICATIONS_START, fetchNotificationAPI),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}