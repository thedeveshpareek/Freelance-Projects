{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(addBankAccountAPI),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(getBankAccountAPI),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(makeDefaultBankAccountAPI),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(deleteAccountBankAccountAPI),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(fetchSingleBankAccountAPI),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(addBankAccountContentCreatorFlowAPI),_marked7=/*#__PURE__*/_regeneratorRuntime.mark(deleteBankAccountContentCreatorFlowAPI),_marked8=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import api from\"../../Environment\";import{ADD_BANK_ACCOUNT_START,ADD_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START,GET_BANK_ACCOUNT_START,MAKE_DEFAULT_BANK_ACCOUNT_START,DELETE_BANK_ACCOUNT_START,DELETE_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START,FETCH_SINGLE_BANK_ACCOUNT_START}from\"../actions/ActionConstant\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{addBankAccountSuccess,addBankAccountFailure,getBankAccountSuccess,getBankAccountFailure,getBankAccountStart,makeDefaultBankAccountSuccess,makeDefaultBankAccountFailure,deleteBankAccountSuccess,deleteBankAccountFailure,fetchSingleBankAccountSuccess,fetchSingleBankAccountFailure}from\"../actions/BankAccountAction\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function addBankAccountAPI(){var inputData,response,notificationMessage,_notificationMessage,_notificationMessage2;return _regeneratorRuntime.wrap(function addBankAccountAPI$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return select(function(state){return state.bankAccount.addBankAccountInput.inputData;});case 3:inputData=_context.sent;_context.next=6;return api.postMethod(\"billing_accounts_save\",inputData);case 6:response=_context.sent;if(!response.data.success){_context.next=16;break;}_context.next=10;return put(addBankAccountSuccess(response.data));case 10:notificationMessage=getSuccessNotificationMessage(response.data.message);_context.next=13;return put(createNotification(notificationMessage));case 13:window.location.assign(\"/billing-accounts\");_context.next=21;break;case 16:_context.next=18;return put(addBankAccountFailure(response.data.error));case 18:_notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=21;return put(createNotification(_notificationMessage));case 21:_context.next=30;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](0);_context.next=27;return put(addBankAccountFailure(_context.t0));case 27:_notificationMessage2=getErrorNotificationMessage(_context.t0.message);_context.next=30;return put(createNotification(_notificationMessage2));case 30:case\"end\":return _context.stop();}}},_marked,null,[[0,23]]);}function getBankAccountAPI(){var response,notificationMessage,_notificationMessage3;return _regeneratorRuntime.wrap(function getBankAccountAPI$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.postMethod(\"billing_accounts_list\");case 3:response=_context2.sent;if(!response.data.success){_context2.next=9;break;}_context2.next=7;return put(getBankAccountSuccess(response.data.data));case 7:_context2.next=16;break;case 9:_context2.next=11;return put(getBankAccountFailure(response.data.error));case 11:notificationMessage=getErrorNotificationMessage(response.data.error);_context2.next=14;return put(checkLogoutStatus(response.data));case 14:_context2.next=16;return put(createNotification(notificationMessage));case 16:_context2.next=25;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);_context2.next=22;return put(getBankAccountFailure(_context2.t0));case 22:_notificationMessage3=getErrorNotificationMessage(_context2.t0.message);_context2.next=25;return put(createNotification(_notificationMessage3));case 25:case\"end\":return _context2.stop();}}},_marked2,null,[[0,18]]);}function makeDefaultBankAccountAPI(){var inputData,response,notificationMessage,_notificationMessage4,_notificationMessage5;return _regeneratorRuntime.wrap(function makeDefaultBankAccountAPI$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return select(function(state){return state.bankAccount.makeDefault.inputData;});case 3:inputData=_context3.sent;_context3.next=6;return api.postMethod(\"billing_accounts_default\",inputData);case 6:response=_context3.sent;if(!response.data.success){_context3.next=17;break;}_context3.next=10;return put(makeDefaultBankAccountSuccess(response.data));case 10:_context3.next=12;return put(getBankAccountStart());case 12:notificationMessage=getSuccessNotificationMessage(response.data.message);_context3.next=15;return put(createNotification(notificationMessage));case 15:_context3.next=22;break;case 17:_context3.next=19;return put(makeDefaultBankAccountFailure(response.data.error));case 19:_notificationMessage4=getErrorNotificationMessage(response.data.error);_context3.next=22;return put(createNotification(_notificationMessage4));case 22:_context3.next=31;break;case 24:_context3.prev=24;_context3.t0=_context3[\"catch\"](0);_context3.next=28;return put(makeDefaultBankAccountFailure(_context3.t0));case 28:_notificationMessage5=getErrorNotificationMessage(_context3.t0.message);_context3.next=31;return put(createNotification(_notificationMessage5));case 31:case\"end\":return _context3.stop();}}},_marked3,null,[[0,24]]);}function deleteAccountBankAccountAPI(){var inputData,response,notificationMessage,_notificationMessage6,_notificationMessage7;return _regeneratorRuntime.wrap(function deleteAccountBankAccountAPI$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return select(function(state){return state.bankAccount.deleteAccount.inputData;});case 3:inputData=_context4.sent;_context4.next=6;return api.postMethod(\"billing_accounts_delete\",inputData);case 6:response=_context4.sent;if(!response.data.success){_context4.next=16;break;}_context4.next=10;return put(deleteBankAccountSuccess(response.data));case 10:notificationMessage=getSuccessNotificationMessage(response.data.message);_context4.next=13;return put(createNotification(notificationMessage));case 13:window.location.assign(\"/billing-accounts\");_context4.next=21;break;case 16:_context4.next=18;return put(deleteBankAccountFailure(response.data.error));case 18:_notificationMessage6=getErrorNotificationMessage(response.data.error);_context4.next=21;return put(createNotification(_notificationMessage6));case 21:_context4.next=30;break;case 23:_context4.prev=23;_context4.t0=_context4[\"catch\"](0);_context4.next=27;return put(deleteBankAccountFailure(_context4.t0));case 27:_notificationMessage7=getErrorNotificationMessage(_context4.t0.message);_context4.next=30;return put(createNotification(_notificationMessage7));case 30:case\"end\":return _context4.stop();}}},_marked4,null,[[0,23]]);}function fetchSingleBankAccountAPI(){var inputData,response,notificationMessage,_notificationMessage8,_notificationMessage9;return _regeneratorRuntime.wrap(function fetchSingleBankAccountAPI$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return select(function(state){return state.bankAccount.singleAccount.inputData;});case 3:inputData=_context5.sent;_context5.next=6;return api.postMethod(\"users_accounts_save\",inputData);case 6:response=_context5.sent;if(!response.data.success){_context5.next=17;break;}_context5.next=10;return put(fetchSingleBankAccountSuccess(response.data));case 10:_context5.next=12;return put(getBankAccountStart());case 12:notificationMessage=getSuccessNotificationMessage(response.data.message);_context5.next=15;return put(createNotification(notificationMessage));case 15:_context5.next=22;break;case 17:_context5.next=19;return put(fetchSingleBankAccountFailure(response.data.error));case 19:_notificationMessage8=getErrorNotificationMessage(response.data.error);_context5.next=22;return put(createNotification(_notificationMessage8));case 22:_context5.next=31;break;case 24:_context5.prev=24;_context5.t0=_context5[\"catch\"](0);_context5.next=28;return put(fetchSingleBankAccountFailure(_context5.t0));case 28:_notificationMessage9=getErrorNotificationMessage(_context5.t0.message);_context5.next=31;return put(createNotification(_notificationMessage9));case 31:case\"end\":return _context5.stop();}}},_marked5,null,[[0,24]]);}function addBankAccountContentCreatorFlowAPI(){var inputData,response,notificationMessage,_notificationMessage10,_notificationMessage11;return _regeneratorRuntime.wrap(function addBankAccountContentCreatorFlowAPI$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return select(function(state){return state.bankAccount.addBankAccountContentCreatorFlowInput.inputData;});case 3:inputData=_context6.sent;_context6.next=6;return api.postMethod(\"billing_accounts_save\",inputData);case 6:response=_context6.sent;if(!response.data.success){_context6.next=17;break;}_context6.next=10;return put(addBankAccountSuccess(response.data));case 10:_context6.next=12;return put(getBankAccountStart());case 12:notificationMessage=getSuccessNotificationMessage(response.data.message);_context6.next=15;return put(createNotification(notificationMessage));case 15:_context6.next=22;break;case 17:_context6.next=19;return put(addBankAccountFailure(response.data.error));case 19:_notificationMessage10=getErrorNotificationMessage(response.data.error);_context6.next=22;return put(createNotification(_notificationMessage10));case 22:_context6.next=31;break;case 24:_context6.prev=24;_context6.t0=_context6[\"catch\"](0);_context6.next=28;return put(addBankAccountFailure(_context6.t0));case 28:_notificationMessage11=getErrorNotificationMessage(_context6.t0.message);_context6.next=31;return put(createNotification(_notificationMessage11));case 31:case\"end\":return _context6.stop();}}},_marked6,null,[[0,24]]);}function deleteBankAccountContentCreatorFlowAPI(){var inputData,response,notificationMessage,_notificationMessage12,_notificationMessage13;return _regeneratorRuntime.wrap(function deleteBankAccountContentCreatorFlowAPI$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return select(function(state){return state.bankAccount.deleteAccountContentCreatorFlow.inputData;});case 3:inputData=_context7.sent;_context7.next=6;return api.postMethod(\"billing_accounts_delete\",inputData);case 6:response=_context7.sent;if(!response.data.success){_context7.next=17;break;}_context7.next=10;return put(deleteBankAccountSuccess(response.data));case 10:_context7.next=12;return put(getBankAccountStart());case 12:notificationMessage=getSuccessNotificationMessage(response.data.message);_context7.next=15;return put(createNotification(notificationMessage));case 15:_context7.next=22;break;case 17:_context7.next=19;return put(deleteBankAccountFailure(response.data.error));case 19:_notificationMessage12=getErrorNotificationMessage(response.data.error);_context7.next=22;return put(createNotification(_notificationMessage12));case 22:_context7.next=31;break;case 24:_context7.prev=24;_context7.t0=_context7[\"catch\"](0);_context7.next=28;return put(deleteBankAccountFailure(_context7.t0));case 28:_notificationMessage13=getErrorNotificationMessage(_context7.t0.message);_context7.next=31;return put(createNotification(_notificationMessage13));case 31:case\"end\":return _context7.stop();}}},_marked7,null,[[0,24]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.t0=all;_context8.next=3;return takeLatest(ADD_BANK_ACCOUNT_START,addBankAccountAPI);case 3:_context8.t1=_context8.sent;_context8.t2=[_context8.t1];_context8.next=7;return(0,_context8.t0)(_context8.t2);case 7:_context8.t3=all;_context8.next=10;return takeLatest(ADD_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START,addBankAccountContentCreatorFlowAPI);case 10:_context8.t4=_context8.sent;_context8.t5=[_context8.t4];_context8.next=14;return(0,_context8.t3)(_context8.t5);case 14:_context8.t6=all;_context8.next=17;return takeLatest(GET_BANK_ACCOUNT_START,getBankAccountAPI);case 17:_context8.t7=_context8.sent;_context8.t8=[_context8.t7];_context8.next=21;return(0,_context8.t6)(_context8.t8);case 21:_context8.t9=all;_context8.next=24;return takeLatest(MAKE_DEFAULT_BANK_ACCOUNT_START,makeDefaultBankAccountAPI);case 24:_context8.t10=_context8.sent;_context8.t11=[_context8.t10];_context8.next=28;return(0,_context8.t9)(_context8.t11);case 28:_context8.t12=all;_context8.next=31;return takeLatest(DELETE_BANK_ACCOUNT_START,deleteAccountBankAccountAPI);case 31:_context8.t13=_context8.sent;_context8.t14=[_context8.t13];_context8.next=35;return(0,_context8.t12)(_context8.t14);case 35:_context8.t15=all;_context8.next=38;return takeLatest(DELETE_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START,deleteBankAccountContentCreatorFlowAPI);case 38:_context8.t16=_context8.sent;_context8.t17=[_context8.t16];_context8.next=42;return(0,_context8.t15)(_context8.t17);case 42:_context8.t18=all;_context8.next=45;return takeLatest(FETCH_SINGLE_BANK_ACCOUNT_START,fetchSingleBankAccountAPI);case 45:_context8.t19=_context8.sent;_context8.t20=[_context8.t19];_context8.next=49;return(0,_context8.t18)(_context8.t20);case 49:case\"end\":return _context8.stop();}}},_marked8);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/BankAccountSaga.jsx"],"names":["addBankAccountAPI","getBankAccountAPI","makeDefaultBankAccountAPI","deleteAccountBankAccountAPI","fetchSingleBankAccountAPI","addBankAccountContentCreatorFlowAPI","deleteBankAccountContentCreatorFlowAPI","pageSaga","call","select","put","takeLatest","all","api","ADD_BANK_ACCOUNT_START","ADD_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START","GET_BANK_ACCOUNT_START","MAKE_DEFAULT_BANK_ACCOUNT_START","DELETE_BANK_ACCOUNT_START","DELETE_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START","FETCH_SINGLE_BANK_ACCOUNT_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","addBankAccountSuccess","addBankAccountFailure","getBankAccountSuccess","getBankAccountFailure","getBankAccountStart","makeDefaultBankAccountSuccess","makeDefaultBankAccountFailure","deleteBankAccountSuccess","deleteBankAccountFailure","fetchSingleBankAccountSuccess","fetchSingleBankAccountFailure","checkLogoutStatus","state","bankAccount","addBankAccountInput","inputData","postMethod","response","data","success","notificationMessage","message","window","location","assign","error","makeDefault","deleteAccount","singleAccount","addBankAccountContentCreatorFlowInput","deleteAccountContentCreatorFlow"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  ADD_BANK_ACCOUNT_START,\n  ADD_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START,\n  GET_BANK_ACCOUNT_START,\n  MAKE_DEFAULT_BANK_ACCOUNT_START,\n  DELETE_BANK_ACCOUNT_START,\n  DELETE_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START,\n  FETCH_SINGLE_BANK_ACCOUNT_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  addBankAccountSuccess,\n  addBankAccountFailure,\n  getBankAccountSuccess,\n  getBankAccountFailure,\n  getBankAccountStart,\n  makeDefaultBankAccountSuccess,\n  makeDefaultBankAccountFailure,\n  deleteBankAccountSuccess,\n  deleteBankAccountFailure,\n  fetchSingleBankAccountSuccess,\n  fetchSingleBankAccountFailure,\n} from \"../actions/BankAccountAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* addBankAccountAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.bankAccount.addBankAccountInput.inputData\n    );\n    const response = yield api.postMethod(\"billing_accounts_save\", inputData);\n\n    if (response.data.success) {\n      yield put(addBankAccountSuccess(response.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/billing-accounts\");\n    } else {\n      yield put(addBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* getBankAccountAPI() {\n  try {\n    const response = yield api.postMethod(\"billing_accounts_list\");\n\n    if (response.data.success) {\n      yield put(getBankAccountSuccess(response.data.data));\n    } else {\n      yield put(getBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(getBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* makeDefaultBankAccountAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.bankAccount.makeDefault.inputData\n    );\n    const response = yield api.postMethod(\n      \"billing_accounts_default\",\n      inputData\n    );\n\n    if (response.data.success) {\n      yield put(makeDefaultBankAccountSuccess(response.data));\n      yield put(getBankAccountStart());\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(makeDefaultBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(makeDefaultBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteAccountBankAccountAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.bankAccount.deleteAccount.inputData\n    );\n    const response = yield api.postMethod(\"billing_accounts_delete\", inputData);\n\n    if (response.data.success) {\n      yield put(deleteBankAccountSuccess(response.data));\n\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/billing-accounts\");\n    } else {\n      yield put(deleteBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleBankAccountAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.bankAccount.singleAccount.inputData\n    );\n    const response = yield api.postMethod(\"users_accounts_save\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchSingleBankAccountSuccess(response.data));\n      yield put(getBankAccountStart());\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(fetchSingleBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* addBankAccountContentCreatorFlowAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.bankAccount.addBankAccountContentCreatorFlowInput.inputData\n    );\n    const response = yield api.postMethod(\"billing_accounts_save\", inputData);\n\n    if (response.data.success) {\n      yield put(addBankAccountSuccess(response.data));\n      yield put(getBankAccountStart());\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(addBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(addBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteBankAccountContentCreatorFlowAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.bankAccount.deleteAccountContentCreatorFlow.inputData\n    );\n    const response = yield api.postMethod(\"billing_accounts_delete\", inputData);\n\n    if (response.data.success) {\n      yield put(deleteBankAccountSuccess(response.data));\n      yield put(getBankAccountStart());\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteBankAccountFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteBankAccountFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(ADD_BANK_ACCOUNT_START, addBankAccountAPI)]);\n  yield all([yield takeLatest(ADD_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START, addBankAccountContentCreatorFlowAPI)]);\n  yield all([yield takeLatest(GET_BANK_ACCOUNT_START, getBankAccountAPI)]);\n  yield all([\n    yield takeLatest(\n      MAKE_DEFAULT_BANK_ACCOUNT_START,\n      makeDefaultBankAccountAPI\n    ),\n  ]);\n  yield all([\n    yield takeLatest(DELETE_BANK_ACCOUNT_START, deleteAccountBankAccountAPI),\n  ]);\n  yield all([\n    yield takeLatest(DELETE_BANK_ACCOUNT_CONTENT_CREATOR_FLOW_START, deleteBankAccountContentCreatorFlowAPI),\n  ]);\n  yield all([\n    yield takeLatest(\n      FETCH_SINGLE_BANK_ACCOUNT_START,\n      fetchSingleBankAccountAPI\n    ),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}