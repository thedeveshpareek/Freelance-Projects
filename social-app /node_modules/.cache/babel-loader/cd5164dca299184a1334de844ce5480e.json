{"ast":null,"code":"import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Form,Button,Image,Modal}from\"react-bootstrap\";import{connect}from\"react-redux\";import{fetchReportReasonStart,saveReportPostStart}from\"../../store/actions/PostAction\";import{translate,t}from\"react-multi-lang\";var ReportModeModal=function ReportModeModal(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),reportReason=_useState2[0],setReportReason=_useState2[1];useEffect(function(){if(props.reportMode===true){props.dispatch(fetchReportReasonStart());}},[props.reportMode]);var handleSubmit=function handleSubmit(event){event.preventDefault();props.dispatch(saveReportPostStart({post_id:props.post.post_id,report_reason_id:reportReason}));props.closeReportModeModal();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-center report-modal\",size:\"md\",centered:true,show:props.reportMode,onHide:props.closeReportModeModal},props.reportMode===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,t(\"report_post\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"report-form\"},/*#__PURE__*/React.createElement(Form,null,props.reportReason.loading?t(\"loading\"):props.reportReason.data.report_reason.length>0?props.reportReason.data.report_reason.map(function(report_content){return/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Check,{type:\"radio\",id:report_content.report_reason_id,value:report_content.report_reason_id,label:report_content.title,name:\"report_content\",custom:true,onClick:function onClick(){return setReportReason(report_content.report_reason_id);}}));}):null))),/*#__PURE__*/React.createElement(Modal.Footer,null,/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-normal\",onClick:props.closeReportModeModal},t(\"cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn btn-theme\",onClick:handleSubmit,disabled:props.reportReason.buttonDisable},props.saveReportPost.loadingButtonContent!==null?props.saveReportPost.loadingButtonContent:t(\"report\")))):null));};var mapStateToPros=function mapStateToPros(state){return{reportReason:state.post.reportReason,saveReportPost:state.post.saveReportPost};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(ReportModeModal));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/helper/ReportModeModal.jsx"],"names":["React","useState","useEffect","Form","Button","Image","Modal","connect","fetchReportReasonStart","saveReportPostStart","translate","t","ReportModeModal","props","reportReason","setReportReason","reportMode","dispatch","handleSubmit","event","preventDefault","post_id","post","report_reason_id","closeReportModeModal","loading","data","report_reason","length","map","report_content","title","buttonDisable","saveReportPost","loadingButtonContent","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Form, Button, Image, Modal} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchReportReasonStart,\n  saveReportPostStart,\n} from \"../../store/actions/PostAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst ReportModeModal = (props) => {\n\n  const [reportReason, setReportReason] = useState('');\n\n  useEffect(() => {\n    if (props.reportMode === true) {\n      props.dispatch(fetchReportReasonStart());\n    }\n    \n  }, [props.reportMode]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(saveReportPostStart({post_id: props.post.post_id, report_reason_id: reportReason,}));\n    props.closeReportModeModal();\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"modal-dialog-center report-modal\"\n        size=\"md\"\n        centered\n        show={props.reportMode}\n        onHide={props.closeReportModeModal}\n      >\n        {props.reportMode === true ? (\n          <>\n            <Modal.Header closeButton>\n              <Modal.Title>{t(\"report_post\")}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"report-form\">\n                  <Form>\n                    {props.reportReason.loading ? t(\"loading\") : \n                      props.reportReason.data.report_reason.length > 0 ? \n                      props.reportReason.data.report_reason.map((report_content) => (\n                      <Form.Group>\n                        <Form.Check\n                            type=\"radio\"\n                            id={report_content.report_reason_id}\n                            value={report_content.report_reason_id}\n                            label={report_content.title}\n                            name=\"report_content\"\n                            custom\n                            onClick={() => setReportReason(report_content.report_reason_id)} \n                        />\n                      </Form.Group>\n                    )) : null}\n                  </Form>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                className=\"btn btn-normal\"\n                onClick={props.closeReportModeModal}\n              >\n                {t(\"cancel\")}\n              </Button>\n              <Button\n                type=\"button\"\n                className=\"btn btn-theme\"\n                onClick={handleSubmit}\n                disabled={props.reportReason.buttonDisable}\n              >\n                {props.saveReportPost.loadingButtonContent !== null\n                  ? props.saveReportPost.loadingButtonContent\n                  : t(\"report\")}\n              </Button>\n            </Modal.Footer>\n          </>\n        ) : null}\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  reportReason: state.post.reportReason,\n  saveReportPost: state.post.saveReportPost,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(ReportModeModal));\n"]},"metadata":{},"sourceType":"module"}