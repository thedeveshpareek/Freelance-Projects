{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { acceptCallFailure, acceptCallSuccess, callHistoryModelFailure, callHistoryModelSuccess, callHistoryUserFailure, callHistoryUserSuccess, callRequestReceivedModelFailure, callRequestReceivedModelSuccess, callRequestSentUserFailure, callRequestSentUserSuccess, endVideoCallFailure, endVideoCallSuccess, fetchSingleVideoCallFailure, fetchSingleVideoCallSuccess, joinVideoCallFailure, joinVideoCallSuccess, payByPayPalFailure, payByPayPalSuccess, payByStripeFailure, payByStripeSuccess, rejectCallFailure, rejectCallSuccess, requestCallFailure, requestCallSuccess, acceptAudioCallFailure, acceptAudioCallSuccess, audioCallHistoryUserFailure, audioCallHistoryUserSuccess, rejectAudioCallFailure, rejectAudioCallSuccess, requestAudioCallFailure, requestAudioCallSuccess, payAudioCallByStripeFailure, payAudioCallByStripeSuccess, payAudioCallByPayPalFailure, payAudioCallByPayPalSuccess, fetchSingleAudioCallFailure, fetchSingleAudioCallSuccess, endAudioCallFailure, endAudioCallSuccess, joinAudioCallFailure, joinAudioCallSuccess, videoCallPayByWalletFailure, videoCallPayByWalletSuccess, audioCallPayByWalletFailure, audioCallPayByWalletSuccess } from \"../actions/PrivateCallAction\";\nimport { ACCEPT_CALL_START, CALL_HISTORY_MODEL_START, CALL_HISTORY_USER_START, CALL_REQUEST_RECEIVED_MODEL_START, CALL_REQUEST_SENT_USER_START, END_VIDEO_CALL_START, FETCH_SINGLE_VIDEO_CALL_START, JOIN_VIDEO_CALL_START, PAY_BY_PAYPAL_START, PAY_BY_STRIPE_START, REJECT_CALL_START, REQUEST_CALL_START, ACCEPT_AUDIO_CALL_START, AUDIO_CALL_HISTORY_USER_START, REJECT_AUDIO_CALL_START, REQUEST_AUDIO_CALL_START, PAY_AUDIO_CALL_BY_STRIPE_START, PAY_AUDIO_CALL_BY_PAYPAL_START, FETCH_SINGLE_AUDIO_CALL_START, END_AUDIO_CALL_START, JOIN_AUDIO_CALL_START, VIDEO_CALL_PAY_BY_WALLET_START, AUDIO_CALL_PAY_BY_WALLET_START } from \"../actions/ActionConstant\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* saveRequestCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.requestCall.inputData);\n    const response = yield api.postMethod(\"video_call_requests_save\", inputData);\n\n    if (response.data.success) {\n      yield put(requestCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/video-calls-sent\");\n    } else {\n      yield put(requestCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(requestCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* acceptCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.acceptCall.inputData);\n    const response = yield api.postMethod(\"video_call_requests_accept\", inputData);\n\n    if (response.data.success) {\n      yield put(acceptCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.reload();\n    } else {\n      yield put(acceptCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(acceptCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* rejectCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.rejectCall.inputData);\n    const response = yield api.postMethod(\"video_call_requests_reject\", inputData);\n\n    if (response.data.success) {\n      yield put(rejectCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(rejectCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(rejectCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payByStripeApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.payByStripe.inputData);\n    const response = yield api.postMethod(\"video_call_payment_by_stripe\", inputData);\n\n    if (response.data.success) {\n      yield put(payByStripeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/video-calls-sent\");\n    } else {\n      yield put(payByStripeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payByStripeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payByPayPalApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.payByPayPal.inputData);\n    const response = yield api.postMethod(\"video_call_payment_by_paypal\", inputData);\n\n    if (response.data.success) {\n      yield put(payByPayPalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(payByPayPalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payByPayPalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* joinCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.joinVideoCall.inputData);\n    const response = yield api.postMethod(\"video_call_requests_join\", inputData);\n\n    if (response.data.success) {\n      yield put(joinVideoCallSuccess(response.data.data));\n    } else {\n      yield put(joinVideoCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(joinVideoCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* endVideoCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.endVideoCall.inputData);\n    const response = yield api.postMethod(\"video_call_requests_end\", inputData);\n\n    if (response.data.success) {\n      yield put(endVideoCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.reload();\n    } else {\n      yield put(endVideoCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(endVideoCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callRequestSentUserApi() {\n  try {\n    const response = yield api.postMethod(\"video_call_requests\");\n\n    if (response.data.success) {\n      yield put(callRequestSentUserSuccess(response.data.data));\n    } else {\n      yield put(callRequestSentUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callRequestSentUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callHistoryUserApi() {\n  try {\n    const response = yield api.postMethod(\"user_video_call_history\");\n\n    if (response.data.success) {\n      yield put(callHistoryUserSuccess(response.data.data));\n    } else {\n      yield put(callHistoryUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callHistoryUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callHistoryModelApi() {\n  try {\n    const response = yield api.postMethod(\"model_video_call_history\");\n\n    if (response.data.success) {\n      yield put(callHistoryModelSuccess(response.data.data));\n    } else {\n      yield put(callHistoryModelFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callHistoryModelFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callRequestReceivedModelApi() {\n  try {\n    const response = yield api.postMethod(\"model_video_call_requests\");\n\n    if (response.data.success) {\n      yield put(callRequestReceivedModelSuccess(response.data.data));\n    } else {\n      yield put(callRequestReceivedModelFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callRequestReceivedModelFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleVideoCallAPI() {\n  try {\n    const inputData = yield select(state => state.privateCall.singleVideoCall.inputData);\n    const response = yield api.postMethod(\"video_call_requests_view\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchSingleVideoCallSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleVideoCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleVideoCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* acceptAudioCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.acceptAudioCall.inputData);\n    const response = yield api.postMethod(\"audio_call_requests_accept\", inputData);\n\n    if (response.data.success) {\n      yield put(acceptAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.reload();\n    } else {\n      yield put(acceptAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(acceptAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* audioCallHistoryUserApi() {\n  try {\n    const response = yield api.postMethod(\"user_audio_call_history\");\n\n    if (response.data.success) {\n      yield put(audioCallHistoryUserSuccess(response.data.data));\n    } else {\n      yield put(audioCallHistoryUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(audioCallHistoryUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* rejectAudioCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.rejectAudioCall.inputData);\n    const response = yield api.postMethod(\"audio_call_requests_reject\", inputData);\n\n    if (response.data.success) {\n      yield put(rejectAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(rejectAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(rejectAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveRequestAudioCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.requestAudioCall.inputData);\n    const response = yield api.postMethod(\"audio_call_requests_save\", inputData);\n\n    if (response.data.success) {\n      yield put(requestAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-history\");\n    } else {\n      yield put(requestAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(requestCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payAudioCallByStripeApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.payAudioCallByStripe.inputData);\n    const response = yield api.postMethod(\"audio_call_payment_by_stripe\", inputData);\n\n    if (response.data.success) {\n      yield put(payAudioCallByStripeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-sent\");\n    } else {\n      yield put(payAudioCallByStripeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payAudioCallByStripeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payAudioCallByPayPalApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.payAudioCallByPayPal.inputData);\n    const response = yield api.postMethod(\"audio_call_payment_by_paypal\", inputData);\n\n    if (response.data.success) {\n      yield put(payAudioCallByPayPalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-sent\");\n    } else {\n      yield put(payAudioCallByPayPalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payAudioCallByPayPalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleAudioCallAPI() {\n  try {\n    const inputData = yield select(state => state.privateCall.singleAudioCall.inputData);\n    const response = yield api.postMethod(\"audio_call_requests_view\", inputData);\n\n    if (response.data.success) {\n      yield put(fetchSingleAudioCallSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* endAudioCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.endAudioCall.inputData);\n    const response = yield api.postMethod(\"audio_call_requests_end\", inputData);\n\n    if (response.data.success) {\n      yield put(endAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(endAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(endAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* joinAudioCallApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.joinAudioCall.inputData);\n    const response = yield api.postMethod(\"audio_call_requests_join\", inputData);\n\n    if (response.data.success) {\n      yield put(joinAudioCallSuccess(response.data.data));\n    } else {\n      yield put(joinAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(joinAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* videoCallPayByWalletApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.videoCallPayByWallet.inputData);\n    const response = yield api.postMethod(\"video_call_payment_by_wallet\", inputData);\n\n    if (response.data.success) {\n      yield put(videoCallPayByWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/video-calls-history\");\n    } else {\n      yield put(videoCallPayByWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(videoCallPayByWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* audioCallPayByWalletApi() {\n  try {\n    const inputData = yield select(state => state.privateCall.audioCallPayByWallet.inputData);\n    const response = yield api.postMethod(\"audio_call_payment_by_wallet\", inputData);\n\n    if (response.data.success) {\n      yield put(audioCallPayByWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-history\");\n    } else {\n      yield put(audioCallPayByWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(audioCallPayByWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(REQUEST_CALL_START, saveRequestCallApi)]);\n  yield all([yield takeLatest(ACCEPT_CALL_START, acceptCallApi)]);\n  yield all([yield takeLatest(REJECT_CALL_START, rejectCallApi)]);\n  yield all([yield takeLatest(PAY_BY_STRIPE_START, payByStripeApi)]);\n  yield all([yield takeLatest(PAY_BY_PAYPAL_START, payByPayPalApi)]);\n  yield all([yield takeLatest(JOIN_VIDEO_CALL_START, joinCallApi)]);\n  yield all([yield takeLatest(END_VIDEO_CALL_START, endVideoCallApi)]);\n  yield all([yield takeLatest(CALL_REQUEST_SENT_USER_START, callRequestSentUserApi)]);\n  yield all([yield takeLatest(CALL_HISTORY_USER_START, callHistoryUserApi)]);\n  yield all([yield takeLatest(CALL_HISTORY_MODEL_START, callHistoryModelApi)]);\n  yield all([yield takeLatest(FETCH_SINGLE_VIDEO_CALL_START, fetchSingleVideoCallAPI)]);\n  yield all([yield takeLatest(CALL_REQUEST_RECEIVED_MODEL_START, callRequestReceivedModelApi)]);\n  yield all([yield takeLatest(ACCEPT_AUDIO_CALL_START, acceptAudioCallApi)]);\n  yield all([yield takeLatest(AUDIO_CALL_HISTORY_USER_START, audioCallHistoryUserApi)]);\n  yield all([yield takeLatest(REJECT_AUDIO_CALL_START, rejectAudioCallApi)]);\n  yield all([yield takeLatest(REQUEST_AUDIO_CALL_START, saveRequestAudioCallApi)]);\n  yield all([yield takeLatest(PAY_AUDIO_CALL_BY_STRIPE_START, payAudioCallByStripeApi)]);\n  yield all([yield takeLatest(PAY_AUDIO_CALL_BY_PAYPAL_START, payAudioCallByPayPalApi)]);\n  yield all([yield takeLatest(FETCH_SINGLE_AUDIO_CALL_START, fetchSingleAudioCallAPI)]);\n  yield all([yield takeLatest(END_AUDIO_CALL_START, endAudioCallApi)]);\n  yield all([yield takeLatest(JOIN_AUDIO_CALL_START, joinAudioCallApi)]);\n  yield all([yield takeLatest(VIDEO_CALL_PAY_BY_WALLET_START, videoCallPayByWalletApi)]);\n  yield all([yield takeLatest(AUDIO_CALL_PAY_BY_WALLET_START, audioCallPayByWalletApi)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/PrivateCallSaga.jsx"],"names":["call","select","put","takeLatest","all","api","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","acceptCallFailure","acceptCallSuccess","callHistoryModelFailure","callHistoryModelSuccess","callHistoryUserFailure","callHistoryUserSuccess","callRequestReceivedModelFailure","callRequestReceivedModelSuccess","callRequestSentUserFailure","callRequestSentUserSuccess","endVideoCallFailure","endVideoCallSuccess","fetchSingleVideoCallFailure","fetchSingleVideoCallSuccess","joinVideoCallFailure","joinVideoCallSuccess","payByPayPalFailure","payByPayPalSuccess","payByStripeFailure","payByStripeSuccess","rejectCallFailure","rejectCallSuccess","requestCallFailure","requestCallSuccess","acceptAudioCallFailure","acceptAudioCallSuccess","audioCallHistoryUserFailure","audioCallHistoryUserSuccess","rejectAudioCallFailure","rejectAudioCallSuccess","requestAudioCallFailure","requestAudioCallSuccess","payAudioCallByStripeFailure","payAudioCallByStripeSuccess","payAudioCallByPayPalFailure","payAudioCallByPayPalSuccess","fetchSingleAudioCallFailure","fetchSingleAudioCallSuccess","endAudioCallFailure","endAudioCallSuccess","joinAudioCallFailure","joinAudioCallSuccess","videoCallPayByWalletFailure","videoCallPayByWalletSuccess","audioCallPayByWalletFailure","audioCallPayByWalletSuccess","ACCEPT_CALL_START","CALL_HISTORY_MODEL_START","CALL_HISTORY_USER_START","CALL_REQUEST_RECEIVED_MODEL_START","CALL_REQUEST_SENT_USER_START","END_VIDEO_CALL_START","FETCH_SINGLE_VIDEO_CALL_START","JOIN_VIDEO_CALL_START","PAY_BY_PAYPAL_START","PAY_BY_STRIPE_START","REJECT_CALL_START","REQUEST_CALL_START","ACCEPT_AUDIO_CALL_START","AUDIO_CALL_HISTORY_USER_START","REJECT_AUDIO_CALL_START","REQUEST_AUDIO_CALL_START","PAY_AUDIO_CALL_BY_STRIPE_START","PAY_AUDIO_CALL_BY_PAYPAL_START","FETCH_SINGLE_AUDIO_CALL_START","END_AUDIO_CALL_START","JOIN_AUDIO_CALL_START","VIDEO_CALL_PAY_BY_WALLET_START","AUDIO_CALL_PAY_BY_WALLET_START","checkLogoutStatus","saveRequestCallApi","inputData","state","privateCall","requestCall","response","postMethod","data","success","notificationMessage","message","window","location","assign","error","acceptCallApi","acceptCall","reload","rejectCallApi","rejectCall","payByStripeApi","payByStripe","payByPayPalApi","payByPayPal","joinCallApi","joinVideoCall","endVideoCallApi","endVideoCall","callRequestSentUserApi","callHistoryUserApi","callHistoryModelApi","callRequestReceivedModelApi","fetchSingleVideoCallAPI","singleVideoCall","acceptAudioCallApi","acceptAudioCall","audioCallHistoryUserApi","rejectAudioCallApi","rejectAudioCall","saveRequestAudioCallApi","requestAudioCall","payAudioCallByStripeApi","payAudioCallByStripe","payAudioCallByPayPalApi","payAudioCallByPayPal","fetchSingleAudioCallAPI","singleAudioCall","endAudioCallApi","endAudioCall","joinAudioCallApi","joinAudioCall","videoCallPayByWalletApi","videoCallPayByWallet","audioCallPayByWalletApi","audioCallPayByWallet","pageSaga"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\n\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  acceptCallFailure,\n  acceptCallSuccess,\n  callHistoryModelFailure,\n  callHistoryModelSuccess,\n  callHistoryUserFailure,\n  callHistoryUserSuccess,\n  callRequestReceivedModelFailure,\n  callRequestReceivedModelSuccess,\n  callRequestSentUserFailure,\n  callRequestSentUserSuccess,\n  endVideoCallFailure,\n  endVideoCallSuccess,\n  fetchSingleVideoCallFailure,\n  fetchSingleVideoCallSuccess,\n  joinVideoCallFailure,\n  joinVideoCallSuccess,\n  payByPayPalFailure,\n  payByPayPalSuccess,\n  payByStripeFailure,\n  payByStripeSuccess,\n  rejectCallFailure,\n  rejectCallSuccess,\n  requestCallFailure,\n  requestCallSuccess,\n  acceptAudioCallFailure,\n  acceptAudioCallSuccess,\n  audioCallHistoryUserFailure,\n  audioCallHistoryUserSuccess,\n  rejectAudioCallFailure,\n  rejectAudioCallSuccess,\n  requestAudioCallFailure,\n  requestAudioCallSuccess,\n  payAudioCallByStripeFailure,\n  payAudioCallByStripeSuccess,\n  payAudioCallByPayPalFailure,\n  payAudioCallByPayPalSuccess,\n  fetchSingleAudioCallFailure,\n  fetchSingleAudioCallSuccess,\n  endAudioCallFailure,\n  endAudioCallSuccess,\n  joinAudioCallFailure,\n  joinAudioCallSuccess,\n  videoCallPayByWalletFailure,\n  videoCallPayByWalletSuccess,\n  audioCallPayByWalletFailure,\n  audioCallPayByWalletSuccess,\n} from \"../actions/PrivateCallAction\";\nimport {\n  ACCEPT_CALL_START,\n  CALL_HISTORY_MODEL_START,\n  CALL_HISTORY_USER_START,\n  CALL_REQUEST_RECEIVED_MODEL_START,\n  CALL_REQUEST_SENT_USER_START,\n  END_VIDEO_CALL_START,\n  FETCH_SINGLE_VIDEO_CALL_START,\n  JOIN_VIDEO_CALL_START,\n  PAY_BY_PAYPAL_START,\n  PAY_BY_STRIPE_START,\n  REJECT_CALL_START,\n  REQUEST_CALL_START,\n  ACCEPT_AUDIO_CALL_START,\n  AUDIO_CALL_HISTORY_USER_START,\n  REJECT_AUDIO_CALL_START,\n  REQUEST_AUDIO_CALL_START,\n  PAY_AUDIO_CALL_BY_STRIPE_START,\n  PAY_AUDIO_CALL_BY_PAYPAL_START,\n  FETCH_SINGLE_AUDIO_CALL_START,\n  END_AUDIO_CALL_START,\n  JOIN_AUDIO_CALL_START,\n  VIDEO_CALL_PAY_BY_WALLET_START,\n  AUDIO_CALL_PAY_BY_WALLET_START,\n} from \"../actions/ActionConstant\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* saveRequestCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.requestCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_requests_save\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(requestCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n\n      window.location.assign(\"/video-calls-sent\");\n    } else {\n      yield put(requestCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(requestCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* acceptCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.acceptCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_requests_accept\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(acceptCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n\n      window.location.reload();\n    } else {\n      yield put(acceptCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(acceptCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* rejectCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.rejectCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_requests_reject\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(rejectCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(rejectCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(rejectCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payByStripeApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.payByStripe.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_payment_by_stripe\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(payByStripeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/video-calls-sent\");\n    } else {\n      yield put(payByStripeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payByStripeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payByPayPalApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.payByPayPal.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_payment_by_paypal\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(payByPayPalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(payByPayPalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payByPayPalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* joinCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.joinVideoCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_requests_join\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(joinVideoCallSuccess(response.data.data));\n    } else {\n      yield put(joinVideoCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(joinVideoCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* endVideoCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.endVideoCall.inputData\n    );\n    const response = yield api.postMethod(\"video_call_requests_end\", inputData);\n    if (response.data.success) {\n      yield put(endVideoCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.reload();\n    } else {\n      yield put(endVideoCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(endVideoCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callRequestSentUserApi() {\n  try {\n    const response = yield api.postMethod(\"video_call_requests\");\n    if (response.data.success) {\n      yield put(callRequestSentUserSuccess(response.data.data));\n    } else {\n      yield put(callRequestSentUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callRequestSentUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callHistoryUserApi() {\n  try {\n    const response = yield api.postMethod(\"user_video_call_history\");\n    if (response.data.success) {\n      yield put(callHistoryUserSuccess(response.data.data));\n    } else {\n      yield put(callHistoryUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callHistoryUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callHistoryModelApi() {\n  try {\n    const response = yield api.postMethod(\"model_video_call_history\");\n    if (response.data.success) {\n      yield put(callHistoryModelSuccess(response.data.data));\n    } else {\n      yield put(callHistoryModelFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callHistoryModelFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* callRequestReceivedModelApi() {\n  try {\n    const response = yield api.postMethod(\"model_video_call_requests\");\n    if (response.data.success) {\n      yield put(callRequestReceivedModelSuccess(response.data.data));\n    } else {\n      yield put(callRequestReceivedModelFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(callRequestReceivedModelFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleVideoCallAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.singleVideoCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_requests_view\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(fetchSingleVideoCallSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleVideoCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleVideoCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* acceptAudioCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.acceptAudioCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_requests_accept\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(acceptAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n\n      window.location.reload();\n    } else {\n      yield put(acceptAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(acceptAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* audioCallHistoryUserApi() {\n  try {\n    const response = yield api.postMethod(\"user_audio_call_history\");\n    if (response.data.success) {\n      yield put(audioCallHistoryUserSuccess(response.data.data));\n    } else {\n      yield put(audioCallHistoryUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(audioCallHistoryUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* rejectAudioCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.rejectAudioCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_requests_reject\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(rejectAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(rejectAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(rejectAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* saveRequestAudioCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.requestAudioCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_requests_save\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(requestAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n\n      window.location.assign(\"/audio-calls-history\");\n    } else {\n      yield put(requestAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(requestCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payAudioCallByStripeApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.payAudioCallByStripe.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_payment_by_stripe\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(payAudioCallByStripeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-sent\");\n    } else {\n      yield put(payAudioCallByStripeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payAudioCallByStripeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* payAudioCallByPayPalApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.payAudioCallByPayPal.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_payment_by_paypal\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(payAudioCallByPayPalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-sent\");\n    } else {\n      yield put(payAudioCallByPayPalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(payAudioCallByPayPalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchSingleAudioCallAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.singleAudioCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_requests_view\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(fetchSingleAudioCallSuccess(response.data.data));\n    } else {\n      yield put(fetchSingleAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSingleAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* endAudioCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.endAudioCall.inputData\n    );\n    const response = yield api.postMethod(\"audio_call_requests_end\", inputData);\n    if (response.data.success) {\n      yield put(endAudioCallSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(endAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(endAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* joinAudioCallApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.joinAudioCall.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_requests_join\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(joinAudioCallSuccess(response.data.data));\n    } else {\n      yield put(joinAudioCallFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(joinAudioCallFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* videoCallPayByWalletApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.videoCallPayByWallet.inputData\n    );\n    const response = yield api.postMethod(\n      \"video_call_payment_by_wallet\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(videoCallPayByWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/video-calls-history\");\n    } else {\n      yield put(videoCallPayByWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(videoCallPayByWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* audioCallPayByWalletApi() {\n  try {\n    const inputData = yield select(\n      (state) => state.privateCall.audioCallPayByWallet.inputData\n    );\n    const response = yield api.postMethod(\n      \"audio_call_payment_by_wallet\",\n      inputData\n    );\n    if (response.data.success) {\n      yield put(audioCallPayByWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/audio-calls-history\");\n    } else {\n      yield put(audioCallPayByWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(audioCallPayByWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(REQUEST_CALL_START, saveRequestCallApi)]);\n  yield all([yield takeLatest(ACCEPT_CALL_START, acceptCallApi)]);\n  yield all([yield takeLatest(REJECT_CALL_START, rejectCallApi)]);\n  yield all([yield takeLatest(PAY_BY_STRIPE_START, payByStripeApi)]);\n  yield all([yield takeLatest(PAY_BY_PAYPAL_START, payByPayPalApi)]);\n  yield all([yield takeLatest(JOIN_VIDEO_CALL_START, joinCallApi)]);\n  yield all([yield takeLatest(END_VIDEO_CALL_START, endVideoCallApi)]);\n  yield all([\n    yield takeLatest(CALL_REQUEST_SENT_USER_START, callRequestSentUserApi),\n  ]);\n  yield all([yield takeLatest(CALL_HISTORY_USER_START, callHistoryUserApi)]);\n  yield all([yield takeLatest(CALL_HISTORY_MODEL_START, callHistoryModelApi)]);\n  yield all([\n    yield takeLatest(FETCH_SINGLE_VIDEO_CALL_START, fetchSingleVideoCallAPI),\n  ]);\n  yield all([\n    yield takeLatest(\n      CALL_REQUEST_RECEIVED_MODEL_START,\n      callRequestReceivedModelApi\n    ),\n  ]);\n  yield all([yield takeLatest(ACCEPT_AUDIO_CALL_START, acceptAudioCallApi)]);\n  yield all([yield takeLatest(AUDIO_CALL_HISTORY_USER_START, audioCallHistoryUserApi)]);\n  yield all([yield takeLatest(REJECT_AUDIO_CALL_START, rejectAudioCallApi)]);\n  yield all([yield takeLatest(REQUEST_AUDIO_CALL_START, saveRequestAudioCallApi)]);\n  yield all([yield takeLatest(PAY_AUDIO_CALL_BY_STRIPE_START, payAudioCallByStripeApi)]);\n  yield all([yield takeLatest(PAY_AUDIO_CALL_BY_PAYPAL_START, payAudioCallByPayPalApi)]);\n  yield all([yield takeLatest(FETCH_SINGLE_AUDIO_CALL_START, fetchSingleAudioCallAPI),]);\n  yield all([yield takeLatest(END_AUDIO_CALL_START, endAudioCallApi)]);\n  yield all([yield takeLatest(JOIN_AUDIO_CALL_START, joinAudioCallApi)]);\n  yield all([yield takeLatest(VIDEO_CALL_PAY_BY_WALLET_START, videoCallPayByWalletApi)]);\n  yield all([yield takeLatest(AUDIO_CALL_PAY_BY_WALLET_START, audioCallPayByWalletApi)]);\n}\n"]},"metadata":{},"sourceType":"module"}