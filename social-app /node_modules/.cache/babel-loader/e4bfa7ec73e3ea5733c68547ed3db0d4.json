{"ast":null,"code":"import _objectSpread from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{Form,Button,Row,Col}from\"react-bootstrap\";import{changePasswordStart}from\"../../../store/actions/UserAction\";import{translate,t}from\"react-multi-lang\";var ChangePasswordCard=function ChangePasswordCard(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),inputData=_useState2[0],setInputData=_useState2[1];var handleSubmit=function handleSubmit(event){event.preventDefault();props.dispatch(changePasswordStart(inputData));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{role:\"tabpanel\",className:props.activeSec===\"change-password-card\"?\"tab-pane fade in active\":\"tab-pane fade\",id:\"Section3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"change-password-sec\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header bg-transparent\"},/*#__PURE__*/React.createElement(\"h4\",null,t(\"change_password\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(Form,{autoComplete:\"new-password\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:\"old_password\"},t(\"old_password\")),/*#__PURE__*/React.createElement(Form.Control,{className:\"form-control\",id:\"old_password\",type:\"password\",placeholder:t(\"old_password_placeholder\"),name:\"old_password\",value:inputData.old_password,onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{old_password:event.currentTarget.value}));}})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{for:\"password\"},t(\"new_password\")),/*#__PURE__*/React.createElement(Form.Control,{className:\"form-control\",id:\"password\",type:\"password\",placeholder:t(\"new_password_placeholder\"),name:\"password\",value:inputData.password,onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{password:event.currentTarget.value}));}})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{for:\"password_confirmation\"},t(\"confirm_password\")),/*#__PURE__*/React.createElement(Form.Control,{className:\"form-control\",id:\"password_confirmation\",type:\"password\",placeholder:t(\"confirm_password\"),name:\"password_confirmation\",value:inputData.password_confirmation,onChange:function onChange(event){return setInputData(_objectSpread(_objectSpread({},inputData),{},{password_confirmation:event.currentTarget.value}));}})),/*#__PURE__*/React.createElement(Row,{className:\"mt-5\"},/*#__PURE__*/React.createElement(Col,{sm:12,xs:12,md:6,className:\"mx-auto\"},/*#__PURE__*/React.createElement(Button,{className:\"btn gradient-btn gradientcolor\",type:\"submit\",disabled:props.changePassword.buttonDisable,onClick:handleSubmit},props.changePassword.loadingButtonContent!=null?props.changePassword.loadingButtonContent:t(\"change_password\")))))))));};var mapStateToPros=function mapStateToPros(state){return{changePassword:state.changePassword};};function mapDispatchToProps(dispatch){return{dispatch:dispatch};}export default connect(mapStateToPros,mapDispatchToProps)(translate(ChangePasswordCard));","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/components/Accounts/Profile/ChangePasswordCard.jsx"],"names":["React","useState","connect","Form","Button","Row","Col","changePasswordStart","translate","t","ChangePasswordCard","props","inputData","setInputData","handleSubmit","event","preventDefault","dispatch","activeSec","old_password","currentTarget","value","password","password_confirmation","changePassword","buttonDisable","loadingButtonContent","mapStateToPros","state","mapDispatchToProps"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,CAA4BC,GAA5B,KAAuC,iBAAvC,CACA,OAASC,mBAAT,KAAoC,mCAApC,CACA,OAASC,SAAT,CAAoBC,CAApB,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,eACFV,QAAQ,CAAC,EAAD,CADN,wCAC7BW,SAD6B,eAClBC,YADkB,eAGpC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GACAL,KAAK,CAACM,QAAN,CAAeV,mBAAmB,CAACK,SAAD,CAAlC,EACD,CAHD,CAKA,mBACE,qDACE,2BACE,IAAI,CAAC,UADP,CAEE,SAAS,CACPD,KAAK,CAACO,SAAN,GAAoB,sBAApB,CACI,yBADJ,CAEI,eALR,CAOE,EAAE,CAAC,UAPL,eASE,2BAAK,SAAS,CAAC,qBAAf,eACE,2BAAK,SAAS,CAAC,4BAAf,eACE,8BAAKT,CAAC,CAAC,iBAAD,CAAN,CADF,CADF,cAIE,2BAAK,SAAS,CAAC,WAAf,eACE,oBAAC,IAAD,EAAM,YAAY,CAAC,cAAnB,CAAkC,QAAQ,CAAEK,YAA5C,eACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAC,cAApB,EAAoCL,CAAC,CAAC,cAAD,CAArC,CADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,SAAS,CAAC,cADZ,CAEE,EAAE,CAAC,cAFL,CAGE,IAAI,CAAC,UAHP,CAIE,WAAW,CAAEA,CAAC,CAAC,0BAAD,CAJhB,CAKE,IAAI,CAAC,cALP,CAME,KAAK,CAAEG,SAAS,CAACO,YANnB,CAOE,QAAQ,CAAE,kBAACJ,KAAD,QACRF,CAAAA,YAAY,gCACPD,SADO,MAEVO,YAAY,CAAEJ,KAAK,CAACK,aAAN,CAAoBC,KAFxB,GADJ,EAPZ,EAFF,CADF,cAkBE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,GAAG,CAAC,UAAhB,EAA4BZ,CAAC,CAAC,cAAD,CAA7B,CADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,SAAS,CAAC,cADZ,CAEE,EAAE,CAAC,UAFL,CAGE,IAAI,CAAC,UAHP,CAIE,WAAW,CAAEA,CAAC,CAAC,0BAAD,CAJhB,CAKE,IAAI,CAAC,UALP,CAME,KAAK,CAAEG,SAAS,CAACU,QANnB,CAOE,QAAQ,CAAE,kBAACP,KAAD,QACRF,CAAAA,YAAY,gCACPD,SADO,MAEVU,QAAQ,CAAEP,KAAK,CAACK,aAAN,CAAoBC,KAFpB,GADJ,EAPZ,EAFF,CAlBF,cAmCE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,GAAG,CAAC,uBAAhB,EACGZ,CAAC,CAAC,kBAAD,CADJ,CADF,cAIE,oBAAC,IAAD,CAAM,OAAN,EACE,SAAS,CAAC,cADZ,CAEE,EAAE,CAAC,uBAFL,CAGE,IAAI,CAAC,UAHP,CAIE,WAAW,CAAEA,CAAC,CAAC,kBAAD,CAJhB,CAKE,IAAI,CAAC,uBALP,CAME,KAAK,CAAEG,SAAS,CAACW,qBANnB,CAOE,QAAQ,CAAE,kBAACR,KAAD,QACRF,CAAAA,YAAY,gCACPD,SADO,MAEVW,qBAAqB,CAAER,KAAK,CAACK,aAAN,CAAoBC,KAFjC,GADJ,EAPZ,EAJF,CAnCF,cAsDE,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,eACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,CAAqB,EAAE,CAAE,CAAzB,CAA4B,SAAS,CAAC,SAAtC,eACE,oBAAC,MAAD,EACE,SAAS,CAAC,gCADZ,CAEE,IAAI,CAAC,QAFP,CAGE,QAAQ,CAAEV,KAAK,CAACa,cAAN,CAAqBC,aAHjC,CAIE,OAAO,CAAEX,YAJX,EAMGH,KAAK,CAACa,cAAN,CAAqBE,oBAArB,EAA6C,IAA7C,CACGf,KAAK,CAACa,cAAN,CAAqBE,oBADxB,CAEGjB,CAAC,CAAC,iBAAD,CARP,CADF,CADF,CAtDF,CADF,CAJF,CATF,CADF,CADF,CA0FD,CAlGD,CAoGA,GAAMkB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAAY,CACjCJ,cAAc,CAAEI,KAAK,CAACJ,cADW,CAAZ,EAAvB,CAIA,QAASK,CAAAA,kBAAT,CAA4BZ,QAA5B,CAAsC,CACpC,MAAO,CAAEA,QAAQ,CAARA,QAAF,CAAP,CACD,CAED,cAAef,CAAAA,OAAO,CAACyB,cAAD,CAAiBE,kBAAjB,CAAP,CAA4CrB,SAAS,CAACE,kBAAD,CAArD,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { changePasswordStart } from \"../../../store/actions/UserAction\";\nimport { translate, t } from \"react-multi-lang\";\n\nconst ChangePasswordCard = (props) => {\n  const [inputData, setInputData] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.dispatch(changePasswordStart(inputData));\n  };\n\n  return (\n    <>\n      <div\n        role=\"tabpanel\"\n        className={\n          props.activeSec === \"change-password-card\"\n            ? \"tab-pane fade in active\"\n            : \"tab-pane fade\"\n        }\n        id=\"Section3\"\n      >\n        <div className=\"change-password-sec\">\n          <div className=\"card-header bg-transparent\">\n            <h4>{t(\"change_password\")}</h4>\n          </div>\n          <div className=\"card-body\">\n            <Form autoComplete=\"new-password\" onSubmit={handleSubmit}>\n              <Form.Group>\n                <Form.Label htmlFor=\"old_password\">{t(\"old_password\")}</Form.Label>\n                <Form.Control\n                  className=\"form-control\"\n                  id=\"old_password\"\n                  type=\"password\"\n                  placeholder={t(\"old_password_placeholder\")}\n                  name=\"old_password\"\n                  value={inputData.old_password}\n                  onChange={(event) =>\n                    setInputData({\n                      ...inputData,\n                      old_password: event.currentTarget.value,\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label for=\"password\">{t(\"new_password\")}</Form.Label>\n                <Form.Control\n                  className=\"form-control\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder={t(\"new_password_placeholder\")}\n                  name=\"password\"\n                  value={inputData.password}\n                  onChange={(event) =>\n                    setInputData({\n                      ...inputData,\n                      password: event.currentTarget.value,\n                    })\n                  }\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label for=\"password_confirmation\">\n                  {t(\"confirm_password\")}\n                </Form.Label>\n                <Form.Control\n                  className=\"form-control\"\n                  id=\"password_confirmation\"\n                  type=\"password\"\n                  placeholder={t(\"confirm_password\")}\n                  name=\"password_confirmation\"\n                  value={inputData.password_confirmation}\n                  onChange={(event) =>\n                    setInputData({\n                      ...inputData,\n                      password_confirmation: event.currentTarget.value,\n                    })\n                  }\n                />\n              </Form.Group>\n              <Row className=\"mt-5\">\n                <Col sm={12} xs={12} md={6} className=\"mx-auto\">\n                  <Button\n                    className=\"btn gradient-btn gradientcolor\"\n                    type=\"submit\"\n                    disabled={props.changePassword.buttonDisable}\n                    onClick={handleSubmit}\n                  >\n                    {props.changePassword.loadingButtonContent != null\n                      ? props.changePassword.loadingButtonContent\n                      : t(\"change_password\")}\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  changePassword: state.changePassword,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(ChangePasswordCard));\n"]},"metadata":{},"sourceType":"module"}