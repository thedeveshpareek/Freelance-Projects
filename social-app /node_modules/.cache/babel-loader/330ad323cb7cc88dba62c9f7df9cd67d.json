{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { CHAT_ASSET_FILE_UPLOAD_START, CHAT_ASSET_PAYMENT_STRIPE_START, CHAT_ASSET_PAYMENT_PAYPAL_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { chatAssetFileUploadSuccess, chatAssetFileUploadFailure, chatAssetPaymentStripeSuccess, chatAssetPaymentStripeFailure, chatAssetPaymentWalletSuccess, chatAssetPaymentWalletFailure, chatAssetPaymentPaypalSuccess, chatAssetPaymentPaypalFailure } from \"../actions/ChatAssetAction\";\nimport { fetchChatMessageStart } from \"../actions/ChatAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* chatAssetFileUploadAPI() {\n  try {\n    const inputData = yield select(state => state.chatAsset.chatAssetInputData.inputData);\n    const response = yield api.postMethod(\"chat_assets_save\", inputData);\n\n    if (response.data.success) {\n      console.log(response.data.data);\n      yield put(chatAssetFileUploadSuccess(response.data.data));\n    } else {\n      yield put(chatAssetFileUploadFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetFileUploadFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* chatAssetPaymentStripeAPI() {\n  try {\n    const paymentInputData = yield select(state => state.chatAsset.chatAssetPayStripe.inputData);\n    const response = yield api.postMethod(\"chat_assets_payment_by_stripe\", paymentInputData);\n\n    if (response.data.success) {\n      console.log(response.data.data);\n      yield put(chatAssetPaymentStripeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      yield put(fetchChatMessageStart({\n        to_user_id: response.data.data.chat_message.to_user_id,\n        from_user_id: response.data.data.chat_message.from_user_id\n      }));\n    } else {\n      yield put(chatAssetPaymentStripeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetPaymentStripeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* chatAssetPaymentPaypalAPI() {\n  try {\n    const paymentInputData = yield select(state => state.chatAsset.chatAssetPayPaypal.inputData);\n    const response = yield api.postMethod(\"chat_assets_payment_by_paypal\", paymentInputData);\n\n    if (response.data.success) {\n      yield put(chatAssetPaymentPaypalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      yield put(fetchChatMessageStart({\n        to_user_id: response.data.data.chat_message.to_user_id,\n        from_user_id: response.data.data.chat_message.from_user_id\n      }));\n    } else {\n      yield put(chatAssetPaymentPaypalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetPaymentPaypalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* chatAssetPaymentWalletAPI() {\n  try {\n    const paymentInputData = yield select(state => state.chatAsset.chatAssetPayWallet.inputData);\n    const response = yield api.postMethod(\"chat_assets_payment_by_wallet\", paymentInputData);\n\n    if (response.data.success) {\n      yield put(chatAssetPaymentWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/post/\" + response.data.data.post.post_unique_id);\n    } else {\n      yield put(chatAssetPaymentWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetPaymentWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(CHAT_ASSET_FILE_UPLOAD_START, chatAssetFileUploadAPI)]);\n  yield all([yield takeLatest(CHAT_ASSET_PAYMENT_STRIPE_START, chatAssetPaymentStripeAPI)]);\n  yield all([yield takeLatest(CHAT_ASSET_PAYMENT_PAYPAL_START, chatAssetPaymentPaypalAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/ChatAssetSaga.jsx"],"names":["call","select","put","takeLatest","all","api","CHAT_ASSET_FILE_UPLOAD_START","CHAT_ASSET_PAYMENT_STRIPE_START","CHAT_ASSET_PAYMENT_PAYPAL_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","chatAssetFileUploadSuccess","chatAssetFileUploadFailure","chatAssetPaymentStripeSuccess","chatAssetPaymentStripeFailure","chatAssetPaymentWalletSuccess","chatAssetPaymentWalletFailure","chatAssetPaymentPaypalSuccess","chatAssetPaymentPaypalFailure","fetchChatMessageStart","checkLogoutStatus","chatAssetFileUploadAPI","inputData","state","chatAsset","chatAssetInputData","response","postMethod","data","success","console","log","error","notificationMessage","message","chatAssetPaymentStripeAPI","paymentInputData","chatAssetPayStripe","to_user_id","chat_message","from_user_id","chatAssetPaymentPaypalAPI","chatAssetPayPaypal","chatAssetPaymentWalletAPI","chatAssetPayWallet","window","location","assign","post","post_unique_id","pageSaga"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  CHAT_ASSET_FILE_UPLOAD_START,\n  CHAT_ASSET_PAYMENT_STRIPE_START,\n  CHAT_ASSET_PAYMENT_PAYPAL_START\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  chatAssetFileUploadSuccess,\n  chatAssetFileUploadFailure,\n  chatAssetPaymentStripeSuccess,\n  chatAssetPaymentStripeFailure,\n  chatAssetPaymentWalletSuccess,\n  chatAssetPaymentWalletFailure,\n  chatAssetPaymentPaypalSuccess,\n  chatAssetPaymentPaypalFailure,\n} from \"../actions/ChatAssetAction\";\n\nimport {\n  fetchChatMessageStart,\n} from \"../actions/ChatAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\n\nfunction* chatAssetFileUploadAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.chatAsset.chatAssetInputData.inputData\n    );\n    const response = yield api.postMethod(\"chat_assets_save\", inputData);\n    if (response.data.success) {\n      console.log(response.data.data);\n      yield put(chatAssetFileUploadSuccess(response.data.data));\n    } else {\n      yield put(chatAssetFileUploadFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetFileUploadFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* chatAssetPaymentStripeAPI() {\n  try {\n    const paymentInputData = yield select(\n      (state) => state.chatAsset.chatAssetPayStripe.inputData\n    );\n    const response = yield api.postMethod(\n      \"chat_assets_payment_by_stripe\",\n      paymentInputData\n    );\n    if (response.data.success) {\n      console.log(response.data.data);\n      yield put(chatAssetPaymentStripeSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      yield put(\n        fetchChatMessageStart({\n          to_user_id: response.data.data.chat_message.to_user_id,\n          from_user_id: response.data.data.chat_message.from_user_id,\n        })\n      );\n    } else {\n      yield put(chatAssetPaymentStripeFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetPaymentStripeFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* chatAssetPaymentPaypalAPI() {\n  try {\n    const paymentInputData = yield select(\n      (state) => state.chatAsset.chatAssetPayPaypal.inputData\n    );\n    const response = yield api.postMethod(\n      \"chat_assets_payment_by_paypal\",\n      paymentInputData\n    );\n    if (response.data.success) {\n      yield put(chatAssetPaymentPaypalSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      yield put(\n        fetchChatMessageStart({\n          to_user_id: response.data.data.chat_message.to_user_id,\n          from_user_id: response.data.data.chat_message.from_user_id,\n        })\n      );\n    } else {\n      yield put(chatAssetPaymentPaypalFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetPaymentPaypalFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* chatAssetPaymentWalletAPI() {\n  try {\n    const paymentInputData = yield select(\n      (state) => state.chatAsset.chatAssetPayWallet.inputData\n    );\n    const response = yield api.postMethod(\n      \"chat_assets_payment_by_wallet\",\n      paymentInputData\n    );\n\n    if (response.data.success) {\n      yield put(chatAssetPaymentWalletSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      window.location.assign(\"/post/\" + response.data.data.post.post_unique_id);\n    } else {\n      yield put(chatAssetPaymentWalletFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(chatAssetPaymentWalletFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\nexport default function* pageSaga() {\n  yield all([\n    yield takeLatest(CHAT_ASSET_FILE_UPLOAD_START, chatAssetFileUploadAPI),\n  ]);\n  yield all([\n    yield takeLatest(CHAT_ASSET_PAYMENT_STRIPE_START, chatAssetPaymentStripeAPI),\n  ]);\n  yield all([\n    yield takeLatest(CHAT_ASSET_PAYMENT_PAYPAL_START, chatAssetPaymentPaypalAPI),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}