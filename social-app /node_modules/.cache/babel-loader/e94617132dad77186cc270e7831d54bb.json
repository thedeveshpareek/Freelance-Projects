{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Messages/MessageIndex.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Container, Row, Col, Dropdown, Image, Media, InputGroup, FormControl, Modal, Tab, Nav } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addMessageContent, fetchChatMessageStart, fetchChatUsersStart } from \"../../store/actions/ChatAction\";\nimport ChatUserList from \"./ChatUserList\";\nimport InboxNoDataFound from \"../NoDataFound/InboxNoDataFound\";\nimport io from \"socket.io-client\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\nimport InboxLoader from \"../Loader/InboxLoader\";\nimport { getErrorNotificationMessage } from \"../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport VerifiedBadgeNoShadow from \"../Handlers/VerifiedBadgeNoShadow\";\nimport ChatAssetModal from \"../helper/ChatAssetModal\";\nimport ReactPlayer from \"react-player/lazy\";\nimport AssetPaymentModal from \"../helper/AssetPaymentModal\";\nconst $ = window.$;\nlet chatSocket;\n\nconst MessageIndex = props => {\n  const [activeChat, setActiveChat] = useState(0);\n  const [toUserId, setToUserId] = useState(0);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [initialHeight, setInitialHeight] = useState(0);\n  const messageRef = useRef();\n  useEffect(() => {\n    props.dispatch(fetchChatUsersStart());\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (chatSocketUrl === \"\") {\n      const notificationMessage = getErrorNotificationMessage(\"Socket URL is not configured. Chat wil not work...\");\n      props.dispatch(createNotification(notificationMessage));\n      window.location.assign(\"/home\");\n    }\n\n    if (messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"nearest\"\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (props.chatUsers.loading === false && props.chatUsers.data.users.length > 0) {\n      console.log(\"Number of times called true  \");\n      setToUserId(props.chatUsers.data.users[0].to_user_id);\n      chatSocketConnect(props.chatUsers.data.users[0].to_user_id);\n    } else {}\n  }, [!props.chatUsers.loading]); // Scroll down function..\n\n  useEffect(() => {\n    console.log(\"Scroll down..\");\n    const objDiv = document.getElementById(\"options-holder\");\n\n    if (objDiv != null) {\n      let differenceNumber = objDiv.offsetHeight > objDiv.scrollHeight ? objDiv.offsetHeight - objDiv.scrollHeight : objDiv.scrollHeight - objDiv.offsetHeight;\n\n      if (differenceNumber > 280) {\n        objDiv.scrollTop = objDiv.scrollHeight;\n      } else {\n        objDiv.scrollTop = initialHeight;\n        setInitialHeight(initialHeight + 20);\n      }\n    }\n  }, [props.chatMessages.data.messages]);\n\n  const chatSocketConnect = to_user_id => {\n    // check the socket url is configured\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    console.log(\"chatSocket\", chatSocketUrl);\n    console.log(\"Input ID\", to_user_id);\n\n    if (chatSocketUrl) {\n      chatSocket = io(chatSocketUrl, {\n        query: `commonid:'user_id_` + localStorage.getItem(\"userId\") + `_to_user_id_` + to_user_id + `',myid:` + localStorage.getItem(\"userId\")\n      });\n      console.log(\"chatSocket\", chatSocket);\n      chatSocket.emit(\"update sender\", {\n        commonid: \"user_id_\" + localStorage.getItem(\"userId\") + \"_to_user_id_\" + to_user_id,\n        myid: localStorage.getItem(\"userId\")\n      });\n      let chatContent;\n      chatSocket.on(\"message\", newData => {\n        let content = [];\n        content.push(newData); // chatContent = [...this.state.chatData, ...content];\n        // this.setState({ chatData: chatContent });\n\n        console.log(content);\n        props.dispatch(addMessageContent(content));\n      });\n    }\n  };\n\n  const changeUser = (event, chat, index) => {\n    chatSocket.disconnect();\n    event.preventDefault();\n    setActiveChat(index);\n    let to_user_id = chat.to_user_id == localStorage.getItem(\"userId\") ? chat.from_user_id : chat.to_user_id;\n    setToUserId(to_user_id);\n    props.dispatch(fetchChatMessageStart({\n      to_user_id: chat.to_user_id,\n      from_user_id: chat.from_user_id\n    }));\n    chatSocketConnect(to_user_id);\n  };\n\n  const handleChatSubmit = event => {\n    event.preventDefault();\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (chatSocketUrl != undefined && inputMessage) {\n      let chatData = [{\n        from_user_id: localStorage.getItem(\"userId\"),\n        to_user_id: toUserId,\n        message: inputMessage,\n        type: \"uu\",\n        user_picture: localStorage.getItem(\"user_picture\"),\n        loggedin_user_id: localStorage.getItem(\"userId\"),\n        created: Date(),\n        from_username: localStorage.getItem(\"username\"),\n        from_displayname: localStorage.getItem(\"name\"),\n        from_userpicture: localStorage.getItem(\"user_picture\"),\n        from_user_unique_id: \"\",\n        to_username: \"\",\n        to_displayname: \"\",\n        to_userpicture: \"\",\n        to_user_unique_id: \"\"\n      }];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatData];\n      } else {\n        messages = [...chatData];\n      }\n\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatData));\n    }\n  };\n\n  const chatInputChange = value => {\n    setInputMessage(value);\n  };\n\n  const [chatAssetUpload, setChatAssetUpload] = useState(false);\n  const [fileType, setFileType] = useState(\"picture\");\n\n  const closeChatAssetUploadModal = () => {\n    setChatAssetUpload(false);\n  };\n\n  const handleAssetUploadModal = fileType => {\n    setChatAssetUpload(true);\n    setFileType(fileType);\n  };\n\n  useEffect(() => {\n    props.assetUpload.loading || handleMediaSubmit();\n  }, [props.assetUpload.loading]);\n\n  const handleMediaSubmit = () => {\n    const assetData = props.assetUpload.data.chat_asset;\n    const assetMessage = props.assetUpload.data.chat_message;\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (chatSocketUrl != undefined && assetData && assetMessage) {\n      let chatData = [{\n        from_user_id: localStorage.getItem(\"userId\"),\n        to_user_id: toUserId,\n        chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n        message: assetMessage ? assetMessage.message : \"\",\n        type: \"uu\",\n        user_picture: localStorage.getItem(\"user_picture\"),\n        loggedin_user_id: localStorage.getItem(\"userId\"),\n        created: Date(),\n        from_username: localStorage.getItem(\"username\"),\n        from_displayname: localStorage.getItem(\"name\"),\n        from_userpicture: localStorage.getItem(\"user_picture\"),\n        from_user_unique_id: \"\",\n        to_username: \"\",\n        to_displayname: \"\",\n        to_userpicture: \"\",\n        to_user_unique_id: \"\",\n        chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n        chat_asset_url: assetMessage.amount > 0 ? assetData.blur_file : assetData.file,\n        file_type: assetData.file_type,\n        is_user_needs_pay: assetMessage.amount > 0 ? 1 : 0,\n        amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n        amount_formatted: assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n        payment_text: assetMessage.amount > 0 ? \"UNLOCK MESSAGE FOR \" + assetMessage.amount_formatted : \"\"\n      }];\n      let chatMessageData = [{\n        from_user_id: localStorage.getItem(\"userId\"),\n        to_user_id: toUserId,\n        chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n        message: assetMessage ? assetMessage.message : \"\",\n        type: \"uu\",\n        user_picture: localStorage.getItem(\"user_picture\"),\n        loggedin_user_id: localStorage.getItem(\"userId\"),\n        created: Date(),\n        from_username: localStorage.getItem(\"username\"),\n        from_displayname: localStorage.getItem(\"name\"),\n        from_userpicture: localStorage.getItem(\"user_picture\"),\n        from_user_unique_id: \"\",\n        to_username: \"\",\n        to_displayname: \"\",\n        to_userpicture: \"\",\n        to_user_unique_id: \"\",\n        chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n        chat_asset_url: assetData.file,\n        file_type: assetData.file_type,\n        amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n        amount_formatted: assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n        is_user_needs_pay: 0,\n        payment_text: \"\"\n      }];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatMessageData];\n      } else {\n        messages = [...chatMessageData];\n      }\n\n      if (assetData) {\n        closeChatAssetUploadModal();\n      }\n\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatMessageData));\n    }\n  };\n\n  const [paymentData, setPaymentData] = useState({\n    chat_message_id: 0,\n    from_user_id: localStorage.getItem(\"userId\"),\n    to_user_id: toUserId,\n    amount_formatted: 0,\n    amount: 0\n  });\n  const [chatPayment, setPaymentModal] = useState(false);\n\n  const handleAssetPayment = (event, chat_message_id, amount_formatted, amount) => {\n    event.preventDefault();\n    setPaymentData({ ...paymentData,\n      chat_message_id: chat_message_id,\n      amount: amount,\n      amount_formatted: amount_formatted\n    });\n    setPaymentModal(true);\n  };\n\n  const closePaymentModal = () => {\n    setPaymentModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, props.chatUsers.loading ? /*#__PURE__*/React.createElement(InboxLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }) : props.chatUsers.data.users.length > 0 ? /*#__PURE__*/React.createElement(ChatUserList, {\n    chatUsers: props.chatUsers.data,\n    activeChat: activeChat,\n    setActiveChat: setActiveChat,\n    changeUser: changeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(InboxNoDataFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 12,\n    md: 12,\n    lg: 7,\n    xl: 8,\n    className: \"resp-mrg-btn-xs margin-col col8-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, props.chatMessages.loading ? \"\" : /*#__PURE__*/React.createElement(Row, {\n    className: \"msg-row-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"msg-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"chat-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-section-title-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.chatMessages.data.user.user_unique_id,\n    className: \"chat-user-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, props.chatMessages.data.user.name, \" \", props.chatMessages.data.user.is_verified_badge == 1 ?\n  /*#__PURE__*/\n  // <img\n  //   className=\"verified-badge\"\n  //   alt=\"verified-badge\"\n  //   src={\n  //     window.location.origin +\n  //     \"/assets/images/verified.svg\"\n  //   }\n  // />\n  React.createElement(VerifiedBadgeNoShadow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-down-chat-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"btn btn-default dropdown-toggle btn-normal-2\",\n    type: \"button\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-ellipsis-v\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dropdown-menu btn-normal-2-menu dropdown-menu-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/` + props.chatMessages.data.user.user_unique_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }, \"View Profile\"))))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-icons padding-top-lg\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"btn btn-default dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/vertical-dots.svg\",\n    className: \"svg-clone vertical-dots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dropdown-menu dropdown-menu-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, \" \", t(\"copy_link_to_post\"), \" \")), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, \" \", t(\"hide_paid_blurred_from_the_home_feed\"), \" \")), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 29\n    }\n  }, \" \", t(\"i_dont_like_this_post\"), \" \")), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  }, \" \", t(\"hide_users_posts_from_feed\"), \" \"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-subheader hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-user-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 23\n    }\n  }, t(\"last_seen\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    title: \"Sep 7, 3:12 pm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 25\n    }\n  }, \" 1 \", t(\"hour_ago\"), \" \")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"chat-subheader-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/star.svg\",\n    className: \"svg-clone\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"chat-subheader-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/notification.svg\",\n    className: \"svg-clone\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"chat-subheader-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/gallery.svg\",\n    className: \"svg-clone\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 25\n    }\n  }, t(\"gallery\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"chat-subheader-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/search.svg\",\n    className: \"svg-clone\",\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 25\n    }\n  }, t(\"find\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-wrapper scrollbar\",\n    id: \"options-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message padding overflow\",\n    id: \"check\",\n    ref: messageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 23\n    }\n  }, props.chatMessages.data.messages.length > 0 ? props.chatMessages.data.messages.map((chatMessage, index) => /*#__PURE__*/React.createElement(React.Fragment, null, chatMessage.from_user_id == localStorage.getItem(\"userId\") ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message chat-message-sender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"chat-image chat-image-default\",\n    src: localStorage.getItem(\"user_picture\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 43\n    }\n  }, chatMessage.message)), chatMessage.chat_asset_url && chatMessage.file_type == \"video\" ? /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: chatMessage.chat_asset_url,\n    controls: true,\n    width: \"450px\",\n    height: \"450px\",\n    className: \"post-video-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 43\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 41\n    }\n  }, chatMessage.chat_asset_url && chatMessage.file_type == \"image\" ? /*#__PURE__*/React.createElement(Image, {\n    src: chatMessage.chat_asset_url,\n    className: \"chat-view-image\" // onClick={(event) =>\n    //   handleImagePreview(event, 1)\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 45\n    }\n  }) : \"\", chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery-top-btn-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"subscribe-post-btn-sec\",\n    onClick: event => handleAssetPayment(event, chatMessage.chat_message_id, chatMessage.amount, chatMessage.amount_formatted),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 47\n    }\n  }, chatMessage.payment_text)) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chat-message-localization font-size-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 43\n    }\n  }, chatMessage.created), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chat-message-read-status font-size-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 43\n    }\n  })))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message chat-message-recipient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"chat-image chat-image-default\",\n    src: props.chatMessages.data.user.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message-wrapper gallery js-gallery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 43\n    }\n  }, chatMessage.message)), chatMessage.chat_asset_url && chatMessage.file_type == \"video\" ? chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(Image, {\n    src: chatMessage.chat_asset_url,\n    className: \"chat-view-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: chatMessage.chat_asset_url,\n    controls: true,\n    width: \"450px\",\n    height: \"450px\",\n    className: \"post-video-size chat-room-video-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 45\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 41\n    }\n  }, chatMessage.chat_asset_url && chatMessage.file_type == \"image\" ? /*#__PURE__*/React.createElement(Image, {\n    src: chatMessage.chat_asset_url,\n    className: \"chat-view-image\" // onClick={(event) =>\n    //   handleImagePreview(event, 1)\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 45\n    }\n  }) : \"\", chatMessage.is_user_needs_pay === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery-top-btn-sec chat-room-pay-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"subscribe-post-btn-sec\",\n    onClick: event => handleAssetPayment(event, chatMessage.chat_message_id, chatMessage.amount, chatMessage.amount_formatted),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 47\n    }\n  }, chatMessage.payment_text)) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chat-message-localization font-size-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 43\n    }\n  }, chatMessage.created)))), \" \")) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderTop: \"1px solid rgba(138, 150, 163, 0.2)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats-post-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-textarea-price-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    controlId: \"chat-input-area\",\n    placeholder: \"Type a message\",\n    name: \"text\",\n    rows: \"1\",\n    className: \"form-control chat-input\",\n    style: {\n      overflow: \"hidden\",\n      overflowWrap: \"break-word\",\n      height: \"48px\"\n    },\n    value: inputMessage,\n    onChange: event => {\n      chatInputChange(event.currentTarget.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 33\n    }\n  }), configuration.get(\"configData.is_chat_asset_enabled\") == 1 ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-can_send\": \"true\",\n    className: \"g-btn m-rounded b-chat__btn-submit\",\n    onClick: () => handleAssetUploadModal(\"image\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/picture.svg\",\n    className: \"svg-clone  wh-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 41\n    }\n  })))) : \"\", configuration.get(\"configData.is_chat_asset_enabled\") == 1 ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-can_send\": \"true\",\n    className: \"g-btn m-rounded b-chat__btn-submit\",\n    onClick: () => handleAssetUploadModal(\"video\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: window.location.origin + \"/assets/images/icons/movie.svg\",\n    className: \"svg-clone  wh-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 41\n    }\n  })))) : \"\", /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    id: \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    \"data-can_send\": \"true\",\n    className: \"btn gradient-btn gradientcolor messagebtn\",\n    onClick: handleChatSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"assets/images/icons/send.svg\",\n    className: \"svg-clone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 39\n    }\n  }))))))))))))))), /*#__PURE__*/React.createElement(ChatAssetModal, {\n    chatAssetUpload: chatAssetUpload,\n    closeChatAssetUploadModal: closeChatAssetUploadModal,\n    fileType: fileType,\n    toUserId: toUserId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 9\n    }\n  }), props.chatMessages.loading ? t(\"loading\") : /*#__PURE__*/React.createElement(AssetPaymentModal, {\n    chatPayment: chatPayment,\n    closePaymentModal: closePaymentModal,\n    paymentData: paymentData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToPros = state => ({\n  chatUsers: state.chat.chatUsers,\n  chatMessages: state.chat.messages,\n  assetUpload: state.chatAsset.saveAssetUpload\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(translate(MessageIndex));","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Messages/MessageIndex.jsx"],"names":["React","useEffect","useState","useRef","Link","Form","Button","Container","Row","Col","Dropdown","Image","Media","InputGroup","FormControl","Modal","Tab","Nav","connect","addMessageContent","fetchChatMessageStart","fetchChatUsersStart","ChatUserList","InboxNoDataFound","io","configuration","translate","t","InboxLoader","getErrorNotificationMessage","createNotification","VerifiedBadgeNoShadow","ChatAssetModal","ReactPlayer","AssetPaymentModal","$","window","chatSocket","MessageIndex","props","activeChat","setActiveChat","toUserId","setToUserId","inputMessage","setInputMessage","initialHeight","setInitialHeight","messageRef","dispatch","chatSocketUrl","get","notificationMessage","location","assign","current","scrollIntoView","behavior","block","inline","chatUsers","loading","data","users","length","console","log","to_user_id","chatSocketConnect","objDiv","document","getElementById","differenceNumber","offsetHeight","scrollHeight","scrollTop","chatMessages","messages","query","localStorage","getItem","emit","commonid","myid","chatContent","on","newData","content","push","changeUser","event","chat","index","disconnect","preventDefault","from_user_id","handleChatSubmit","undefined","chatData","message","type","user_picture","loggedin_user_id","created","Date","from_username","from_displayname","from_userpicture","from_user_unique_id","to_username","to_displayname","to_userpicture","to_user_unique_id","chatInputChange","value","chatAssetUpload","setChatAssetUpload","fileType","setFileType","closeChatAssetUploadModal","handleAssetUploadModal","assetUpload","handleMediaSubmit","assetData","chat_asset","assetMessage","chat_message","chat_message_id","chat_asset_id","chat_asset_url","amount","blur_file","file","file_type","is_user_needs_pay","amount_formatted","payment_text","chatMessageData","paymentData","setPaymentData","chatPayment","setPaymentModal","handleAssetPayment","closePaymentModal","user","user_unique_id","name","is_verified_badge","display","map","chatMessage","picture","borderTop","overflow","overflowWrap","height","currentTarget","origin","mapStateToPros","state","chatAsset","saveAssetUpload","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Dropdown,\n  Image,\n  Media,\n  InputGroup,\n  FormControl,\n  Modal,\n  Tab,\n  Nav,\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  addMessageContent,\n  fetchChatMessageStart,\n  fetchChatUsersStart,\n} from \"../../store/actions/ChatAction\";\nimport ChatUserList from \"./ChatUserList\";\nimport InboxNoDataFound from \"../NoDataFound/InboxNoDataFound\";\nimport io from \"socket.io-client\";\nimport configuration from \"react-global-configuration\";\nimport { translate, t } from \"react-multi-lang\";\n\nimport InboxLoader from \"../Loader/InboxLoader\";\nimport { getErrorNotificationMessage } from \"../helper/NotificationMessage\";\nimport { createNotification } from \"react-redux-notify/lib/modules/Notifications\";\nimport VerifiedBadgeNoShadow from \"../Handlers/VerifiedBadgeNoShadow\";\nimport ChatAssetModal from \"../helper/ChatAssetModal\";\nimport ReactPlayer from \"react-player/lazy\";\nimport AssetPaymentModal from \"../helper/AssetPaymentModal\";\n\nconst $ = window.$;\n\nlet chatSocket;\n\nconst MessageIndex = (props) => {\n  const [activeChat, setActiveChat] = useState(0);\n  const [toUserId, setToUserId] = useState(0);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [initialHeight, setInitialHeight] = useState(0);\n\n  const messageRef = useRef();\n\n  useEffect(() => {\n    props.dispatch(fetchChatUsersStart());\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    if (chatSocketUrl === \"\") {\n      const notificationMessage = getErrorNotificationMessage(\n        \"Socket URL is not configured. Chat wil not work...\"\n      );\n      props.dispatch(createNotification(notificationMessage));\n      window.location.assign(\"/home\");\n    }\n    if (messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"nearest\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      props.chatUsers.loading === false &&\n      props.chatUsers.data.users.length > 0\n    ) {\n      console.log(\"Number of times called true  \");\n      setToUserId(props.chatUsers.data.users[0].to_user_id);\n      chatSocketConnect(props.chatUsers.data.users[0].to_user_id);\n    } else {\n    }\n  }, [!props.chatUsers.loading]);\n\n  // Scroll down function..\n  useEffect(() => {\n    console.log(\"Scroll down..\");\n    const objDiv = document.getElementById(\"options-holder\");\n    if (objDiv != null) {\n      let differenceNumber =\n        objDiv.offsetHeight > objDiv.scrollHeight\n          ? objDiv.offsetHeight - objDiv.scrollHeight\n          : objDiv.scrollHeight - objDiv.offsetHeight;\n\n      if (differenceNumber > 280) {\n        objDiv.scrollTop = objDiv.scrollHeight;\n      } else {\n        objDiv.scrollTop = initialHeight;\n        setInitialHeight(initialHeight + 20);\n      }\n    }\n  }, [props.chatMessages.data.messages]);\n\n  const chatSocketConnect = (to_user_id) => {\n    // check the socket url is configured\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    console.log(\"chatSocket\", chatSocketUrl);\n    console.log(\"Input ID\", to_user_id);\n    if (chatSocketUrl) {\n      chatSocket = io(chatSocketUrl, {\n        query:\n          `commonid:'user_id_` +\n          localStorage.getItem(\"userId\") +\n          `_to_user_id_` +\n          to_user_id +\n          `',myid:` +\n          localStorage.getItem(\"userId\"),\n      });\n      console.log(\"chatSocket\", chatSocket);\n      chatSocket.emit(\"update sender\", {\n        commonid:\n          \"user_id_\" +\n          localStorage.getItem(\"userId\") +\n          \"_to_user_id_\" +\n          to_user_id,\n        myid: localStorage.getItem(\"userId\"),\n      });\n      let chatContent;\n      chatSocket.on(\"message\", (newData) => {\n        let content = [];\n        content.push(newData);\n        // chatContent = [...this.state.chatData, ...content];\n        // this.setState({ chatData: chatContent });\n        console.log(content);\n        props.dispatch(addMessageContent(content));\n      });\n    }\n  };\n\n  const changeUser = (event, chat, index) => {\n    chatSocket.disconnect();\n    event.preventDefault();\n    setActiveChat(index);\n    let to_user_id =\n      chat.to_user_id == localStorage.getItem(\"userId\")\n        ? chat.from_user_id\n        : chat.to_user_id;\n    setToUserId(to_user_id);\n\n    props.dispatch(\n      fetchChatMessageStart({\n        to_user_id: chat.to_user_id,\n        from_user_id: chat.from_user_id,\n      })\n    );\n    chatSocketConnect(to_user_id);\n  };\n\n  const handleChatSubmit = (event) => {\n    event.preventDefault();\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n\n    if (chatSocketUrl != undefined && inputMessage) {\n      let chatData = [\n        {\n          from_user_id: localStorage.getItem(\"userId\"),\n          to_user_id: toUserId,\n          message: inputMessage,\n          type: \"uu\",\n          user_picture: localStorage.getItem(\"user_picture\"),\n          loggedin_user_id: localStorage.getItem(\"userId\"),\n          created: Date(),\n          from_username: localStorage.getItem(\"username\"),\n          from_displayname: localStorage.getItem(\"name\"),\n          from_userpicture: localStorage.getItem(\"user_picture\"),\n          from_user_unique_id: \"\",\n          to_username: \"\",\n          to_displayname: \"\",\n          to_userpicture: \"\",\n          to_user_unique_id: \"\",\n        },\n      ];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatData];\n      } else {\n        messages = [...chatData];\n      }\n\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatData));\n    }\n  };\n\n  const chatInputChange = (value) => {\n    setInputMessage(value);\n  };\n\n  const [chatAssetUpload, setChatAssetUpload] = useState(false);\n  const [fileType, setFileType] = useState(\"picture\");\n\n  const closeChatAssetUploadModal = () => {\n    setChatAssetUpload(false);\n  };\n\n  const handleAssetUploadModal = (fileType) => {\n    setChatAssetUpload(true);\n    setFileType(fileType);\n  };\n\n  useEffect(() => {\n    props.assetUpload.loading || handleMediaSubmit();\n  }, [props.assetUpload.loading]);\n\n  const handleMediaSubmit = () => {\n    const assetData = props.assetUpload.data.chat_asset;\n    const assetMessage = props.assetUpload.data.chat_message;\n    let chatSocketUrl = configuration.get(\"configData.chat_socket_url\");\n    if (chatSocketUrl != undefined && assetData && assetMessage) {\n      let chatData = [\n        {\n          from_user_id: localStorage.getItem(\"userId\"),\n          to_user_id: toUserId,\n          chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n          message: assetMessage ? assetMessage.message : \"\",\n          type: \"uu\",\n          user_picture: localStorage.getItem(\"user_picture\"),\n          loggedin_user_id: localStorage.getItem(\"userId\"),\n          created: Date(),\n          from_username: localStorage.getItem(\"username\"),\n          from_displayname: localStorage.getItem(\"name\"),\n          from_userpicture: localStorage.getItem(\"user_picture\"),\n          from_user_unique_id: \"\",\n          to_username: \"\",\n          to_displayname: \"\",\n          to_userpicture: \"\",\n          to_user_unique_id: \"\",\n          chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n          chat_asset_url:\n            assetMessage.amount > 0 ? assetData.blur_file : assetData.file,\n          file_type: assetData.file_type,\n          is_user_needs_pay: assetMessage.amount > 0 ? 1 : 0,\n          amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n          amount_formatted:\n            assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n          payment_text:\n            assetMessage.amount > 0\n              ? \"UNLOCK MESSAGE FOR \" + assetMessage.amount_formatted\n              : \"\",\n        },\n      ];\n\n      let chatMessageData = [\n        {\n          from_user_id: localStorage.getItem(\"userId\"),\n          to_user_id: toUserId,\n          chat_message_id: assetMessage ? assetMessage.chat_message_id : \"\",\n          message: assetMessage ? assetMessage.message : \"\",\n          type: \"uu\",\n          user_picture: localStorage.getItem(\"user_picture\"),\n          loggedin_user_id: localStorage.getItem(\"userId\"),\n          created: Date(),\n          from_username: localStorage.getItem(\"username\"),\n          from_displayname: localStorage.getItem(\"name\"),\n          from_userpicture: localStorage.getItem(\"user_picture\"),\n          from_user_unique_id: \"\",\n          to_username: \"\",\n          to_displayname: \"\",\n          to_userpicture: \"\",\n          to_user_unique_id: \"\",\n          chat_asset_id: assetData ? assetData.chat_asset_id : \"\",\n          chat_asset_url: assetData.file,\n          file_type: assetData.file_type,\n          amount: assetMessage.amount > 0 ? assetMessage.amount : 0,\n          amount_formatted:\n            assetMessage.amount > 0 ? assetMessage.amount_formatted : 0,\n          is_user_needs_pay: 0,\n          payment_text: \"\",\n        },\n      ];\n      chatSocket.emit(\"message\", chatData[0]);\n      let messages;\n      if (props.chatMessages.data.messages != null) {\n        messages = [...props.chatMessages.data.messages, ...chatMessageData];\n      } else {\n        messages = [...chatMessageData];\n      }\n      if (assetData) {\n        closeChatAssetUploadModal();\n      }\n      setInputMessage(\"\");\n      props.dispatch(addMessageContent(chatMessageData));\n    }\n  };\n\n  const [paymentData, setPaymentData] = useState({\n    chat_message_id: 0,\n    from_user_id: localStorage.getItem(\"userId\"),\n    to_user_id: toUserId,\n    amount_formatted: 0,\n    amount: 0,\n  });\n\n  const [chatPayment, setPaymentModal] = useState(false);\n\n  const handleAssetPayment = (\n    event,\n    chat_message_id,\n    amount_formatted,\n    amount\n  ) => {\n    event.preventDefault();\n    setPaymentData({\n      ...paymentData,\n      chat_message_id: chat_message_id,\n      amount: amount,\n      amount_formatted: amount_formatted,\n    });\n    setPaymentModal(true);\n  };\n  const closePaymentModal = () => {\n    setPaymentModal(false);\n  };\n  return (\n    <>\n      <div className=\"message-page\">\n        <Container>\n          <Row>\n            {props.chatUsers.loading ? (\n              <InboxLoader></InboxLoader>\n            ) : props.chatUsers.data.users.length > 0 ? (\n              <ChatUserList\n                chatUsers={props.chatUsers.data}\n                activeChat={activeChat}\n                setActiveChat={setActiveChat}\n                changeUser={changeUser}\n              />\n            ) : (\n              <InboxNoDataFound />\n            )}\n            <Col\n              sm={12}\n              md={12}\n              lg={7}\n              xl={8}\n              className=\"resp-mrg-btn-xs margin-col col8-sm\"\n            >\n              {props.chatMessages.loading ? (\n                \"\"\n              ) : (\n                <Row className=\"msg-row-chat\">\n                  <div className=\"msg-header\">\n                    {/* <Button className=\"chat-header-back\">\n                    <Image\n                      src={window.location.origin + \"/assets/images/icons/back.svg\"}\n                      className=\"svg-clone\"\n                    />\n                  </Button> */}\n                    <h1 className=\"chat-section-title\">\n                      <div className=\"chat-section-title-width\">\n                        <Link\n                          to={`/` + props.chatMessages.data.user.user_unique_id}\n                          className=\"chat-user-name\"\n                        >\n                          {props.chatMessages.data.user.name}{\" \"}\n                          {props.chatMessages.data.user.is_verified_badge ==\n                          1 ? (\n                            // <img\n                            //   className=\"verified-badge\"\n                            //   alt=\"verified-badge\"\n                            //   src={\n                            //     window.location.origin +\n                            //     \"/assets/images/verified.svg\"\n                            //   }\n                            // />\n                            <VerifiedBadgeNoShadow />\n                          ) : null}\n                        </Link>\n                      </div>\n                    </h1>\n                    <div className=\"drop-down-chat-sec\">\n                      <Dropdown>\n                        <Dropdown.Toggle\n                          className=\"btn btn-default dropdown-toggle btn-normal-2\"\n                          type=\"button\"\n                          id=\"dropdown-basic\"\n                        >\n                          <i className=\"fas fa-ellipsis-v\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"dropdown-menu btn-normal-2-menu dropdown-menu-right\">\n                          <Media as=\"li\">\n                            <Link\n                              to={\n                                `/` +\n                                props.chatMessages.data.user.user_unique_id\n                              }\n                            >\n                              View Profile\n                            </Link>\n                          </Media>\n                          {/* <Media as=\"li\" className=\"divider\"></Media> */}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </div>\n                    <span\n                      className=\"post-icons padding-top-lg\"\n                      style={{ display: \"none\" }}\n                    >\n                      <Dropdown>\n                        <Dropdown.Toggle\n                          className=\"btn btn-default dropdown-toggle\"\n                          type=\"button\"\n                          id=\"dropdown-basic\"\n                        >\n                          <Image\n                            src=\"assets/images/icons/vertical-dots.svg\"\n                            className=\"svg-clone vertical-dots\"\n                          />\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                          <Media as=\"li\">\n                            <Link to=\"#\"> {t(\"copy_link_to_post\")} </Link>\n                          </Media>\n                          <Media as=\"li\">\n                            <Link to=\"#\">\n                              {\" \"}\n                              {t(\"hide_paid_blurred_from_the_home_feed\")}{\" \"}\n                            </Link>\n                          </Media>\n                          <Media as=\"li\" className=\"divider\"></Media>\n                          <Media as=\"li\">\n                            <Link to=\"#\"> {t(\"i_dont_like_this_post\")} </Link>\n                          </Media>\n                          <Media as=\"li\">\n                            <Link to=\"#\">\n                              {\" \"}\n                              {t(\"hide_users_posts_from_feed\")}{\" \"}\n                            </Link>\n                          </Media>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </span>\n                    <div className=\"chat-subheader hidden\">\n                      <div className=\"chat-user-status\">\n                        {t(\"last_seen\")}{\" \"}\n                        <span title=\"Sep 7, 3:12 pm\"> 1 {t(\"hour_ago\")} </span>\n                      </div>\n\n                      <Button type=\"button\" className=\"chat-subheader-btn\">\n                        <Image\n                          src=\"assets/images/icons/star.svg\"\n                          className=\"svg-clone\"\n                          width=\"12\"\n                        />\n                      </Button>\n                      <Button type=\"button\" className=\"chat-subheader-btn\">\n                        <Image\n                          src=\"assets/images/icons/notification.svg\"\n                          className=\"svg-clone\"\n                          width=\"12\"\n                        />\n                      </Button>\n                      <Button type=\"button\" className=\"chat-subheader-btn\">\n                        <Image\n                          src=\"assets/images/icons/gallery.svg\"\n                          className=\"svg-clone\"\n                          width=\"12\"\n                        />\n\n                        <span>{t(\"gallery\")}</span>\n                      </Button>\n                      <Button type=\"button\" className=\"chat-subheader-btn\">\n                        <Image\n                          src=\"assets/images/icons/search.svg\"\n                          className=\"svg-clone\"\n                          width=\"12\"\n                        />\n\n                        <span>{t(\"find\")}</span>\n                      </Button>\n                    </div>\n                  </div>\n\n                  <div className=\"chat-area\">\n                    <div className=\"chat-wrapper scrollbar\" id=\"options-holder\">\n                      <div\n                        className=\"chat-message padding overflow\"\n                        id=\"check\"\n                        ref={messageRef}\n                      >\n                        {props.chatMessages.data.messages.length > 0\n                          ? props.chatMessages.data.messages.map(\n                              (chatMessage, index) => (\n                                <>\n                                  {chatMessage.from_user_id ==\n                                  localStorage.getItem(\"userId\") ? (\n                                    <div className=\"chat-message chat-message-sender\">\n                                      <Image\n                                        className=\"chat-image chat-image-default\"\n                                        src={localStorage.getItem(\n                                          \"user_picture\"\n                                        )}\n                                      />\n\n                                      <div className=\"chat-message-wrapper\">\n                                        <div className=\"chat-message-content\">\n                                          <p>{chatMessage.message}</p>\n                                        </div>\n                                        {chatMessage.chat_asset_url &&\n                                        chatMessage.file_type == \"video\" ? (\n                                          <ReactPlayer\n                                            url={chatMessage.chat_asset_url}\n                                            controls={true}\n                                            width=\"450px\"\n                                            height=\"450px\"\n                                            className=\"post-video-size\"\n                                          />\n                                        ) : (\n                                          \"\"\n                                        )}\n                                        <div>\n                                          {chatMessage.chat_asset_url &&\n                                          chatMessage.file_type == \"image\" ? (\n                                            <Image\n                                              src={chatMessage.chat_asset_url}\n                                              className=\"chat-view-image\"\n                                              // onClick={(event) =>\n                                              //   handleImagePreview(event, 1)\n                                              // }\n                                            />\n                                          ) : (\n                                            \"\"\n                                          )}\n\n                                          {chatMessage.is_user_needs_pay ===\n                                          1 ? (\n                                            <div className=\"gallery-top-btn-sec\">\n                                              <Button\n                                                className=\"subscribe-post-btn-sec\"\n                                                onClick={(event) =>\n                                                  handleAssetPayment(\n                                                    event,\n                                                    chatMessage.chat_message_id,\n                                                    chatMessage.amount,\n                                                    chatMessage.amount_formatted\n                                                  )\n                                                }\n                                              >\n                                                {chatMessage.payment_text}\n                                              </Button>\n                                            </div>\n                                          ) : (\n                                            \"\"\n                                          )}\n                                        </div>\n                                        <div className=\"chat-details\">\n                                          <span className=\"chat-message-localization font-size-small\">\n                                            {chatMessage.created}\n                                          </span>\n                                          <span className=\"chat-message-read-status font-size-small\"></span>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    <div className=\"chat-message chat-message-recipient\">\n                                      <Image\n                                        className=\"chat-image chat-image-default\"\n                                        src={\n                                          props.chatMessages.data.user.picture\n                                        }\n                                      />\n\n                                      <div className=\"chat-message-wrapper gallery js-gallery\">\n                                        <div className=\"chat-message-content\">\n                                          <p>{chatMessage.message}</p>\n                                        </div>\n                                        {chatMessage.chat_asset_url &&\n                                        chatMessage.file_type == \"video\" ? (\n                                          chatMessage.is_user_needs_pay ===\n                                          1 ? (\n                                            <Image\n                                              src={chatMessage.chat_asset_url}\n                                              className=\"chat-view-image\"\n                                            ></Image>\n                                          ) : (\n                                            <ReactPlayer\n                                              url={chatMessage.chat_asset_url}\n                                              controls={true}\n                                              width=\"450px\"\n                                              height=\"450px\"\n                                              className=\"post-video-size chat-room-video-display\"\n                                            />\n                                          )\n                                        ) : (\n                                          \"\"\n                                        )}\n                                        <div>\n                                          {chatMessage.chat_asset_url &&\n                                          chatMessage.file_type == \"image\" ? (\n                                            <Image\n                                              src={chatMessage.chat_asset_url}\n                                              className=\"chat-view-image\"\n                                              // onClick={(event) =>\n                                              //   handleImagePreview(event, 1)\n                                              // }\n                                            />\n                                          ) : (\n                                            \"\"\n                                          )}\n\n                                          {chatMessage.is_user_needs_pay ===\n                                          1 ? (\n                                            <div className=\"gallery-top-btn-sec chat-room-pay-display\">\n                                              <Button\n                                                className=\"subscribe-post-btn-sec\"\n                                                onClick={(event) =>\n                                                  handleAssetPayment(\n                                                    event,\n                                                    chatMessage.chat_message_id,\n                                                    chatMessage.amount,\n                                                    chatMessage.amount_formatted\n                                                  )\n                                                }\n                                              >\n                                                {chatMessage.payment_text}\n                                              </Button>\n                                            </div>\n                                          ) : (\n                                            \"\"\n                                          )}\n                                        </div>\n                                        <div className=\"chat-details\">\n                                          <span className=\"chat-message-localization font-size-small\">\n                                            {chatMessage.created}\n                                          </span>\n                                          {/* <span className=\"chat-message-read-status font-size-small\">\n                                          , $69 not paid yet\n                                        </span> */}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  )}{\" \"}\n                                </>\n                              )\n                            )\n                          : \"\"}\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        borderTop: \"1px solid rgba(138, 150, 163, 0.2)\",\n                      }}\n                    >\n                      <div className=\"chats-post-footer\">\n                        <div></div>\n                        <div className=\"chat-post\">\n                          <div className=\"chat-textarea-price-wrapper\">\n                            <div className=\"\">\n                              <InputGroup className=\"mb-3\">\n                                <FormControl\n                                  controlId=\"chat-input-area\"\n                                  placeholder=\"Type a message\"\n                                  name=\"text\"\n                                  rows=\"1\"\n                                  className=\"form-control chat-input\"\n                                  style={{\n                                    overflow: \"hidden\",\n                                    overflowWrap: \"break-word\",\n                                    height: \"48px\",\n                                  }}\n                                  value={inputMessage}\n                                  onChange={(event) => {\n                                    chatInputChange(event.currentTarget.value);\n                                  }}\n                                />\n                                {configuration.get(\n                                  \"configData.is_chat_asset_enabled\"\n                                ) == 1 ? (\n                                  <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">\n                                      <Button\n                                        type=\"button\"\n                                        data-can_send=\"true\"\n                                        className=\"g-btn m-rounded b-chat__btn-submit\"\n                                        onClick={() =>\n                                          handleAssetUploadModal(\"image\")\n                                        }\n                                      >\n                                        <Image\n                                          src={\n                                            window.location.origin +\n                                            \"/assets/images/icons/picture.svg\"\n                                          }\n                                          className=\"svg-clone  wh-32\"\n                                        />\n                                      </Button>\n                                    </InputGroup.Text>\n                                  </InputGroup.Append>\n                                ) : (\n                                  \"\"\n                                )}\n                                {configuration.get(\n                                  \"configData.is_chat_asset_enabled\"\n                                ) == 1 ? (\n                                  <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">\n                                      <Button\n                                        type=\"button\"\n                                        data-can_send=\"true\"\n                                        className=\"g-btn m-rounded b-chat__btn-submit\"\n                                        onClick={() =>\n                                          handleAssetUploadModal(\"video\")\n                                        }\n                                      >\n                                        <Image\n                                          src={\n                                            window.location.origin +\n                                            \"/assets/images/icons/movie.svg\"\n                                          }\n                                          className=\"svg-clone  wh-32\"\n                                        />\n                                      </Button>\n                                    </InputGroup.Text>\n                                  </InputGroup.Append>\n                                ) : (\n                                  \"\"\n                                )}\n                                <InputGroup.Append>\n                                  <InputGroup.Text id=\"basic-addon2\">\n                                    <Button\n                                      type=\"button\"\n                                      data-can_send=\"true\"\n                                      className=\"btn gradient-btn gradientcolor messagebtn\"\n                                      onClick={handleChatSubmit}\n                                    >\n                                      <Image\n                                        src=\"assets/images/icons/send.svg\"\n                                        className=\"svg-clone\"\n                                      />\n                                    </Button>\n                                  </InputGroup.Text>\n                                </InputGroup.Append>\n                              </InputGroup>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Row>\n              )}\n            </Col>\n          </Row>\n        </Container>\n\n        <ChatAssetModal\n          chatAssetUpload={chatAssetUpload}\n          closeChatAssetUploadModal={closeChatAssetUploadModal}\n          fileType={fileType}\n          toUserId={toUserId}\n        />\n        {props.chatMessages.loading ? (\n          t(\"loading\")\n        ) : (\n          <AssetPaymentModal\n            chatPayment={chatPayment}\n            closePaymentModal={closePaymentModal}\n            paymentData={paymentData}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  chatUsers: state.chat.chatUsers,\n  chatMessages: state.chat.messages,\n  assetUpload: state.chatAsset.saveAssetUpload,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(\n  mapStateToPros,\n  mapDispatchToProps\n)(translate(MessageIndex));\n"]},"metadata":{},"sourceType":"module"}