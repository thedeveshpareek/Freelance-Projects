{"ast":null,"code":"import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { FETCH_FOLLOWERS_START, FETCH_ACTIVE_FOLLOWERS_START, FETCH_EXPIRED_FOLLOWERS_START, FETCH_FOLLOWING_START, FOLLOW_USER_START, UNFOLLOW_USER_START, FETCH_ACTIVE_FOLLOWING_START, FETCH_EXPIRED_FOLLOWING_START } from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport { getSuccessNotificationMessage, getErrorNotificationMessage } from \"../../components/helper/NotificationMessage\";\nimport { fetchFollowersFailure, fetchFollowersSuccess, fetchActiveFollowersFailure, fetchActiveFollowersSuccess, fetchExpiredFollowersFailure, fetchExpiredFollowersSuccess, fetchFollowingFailure, fetchFollowingSuccess, followUserFailure, followUserSuccess, unFollowUserFailure, unFollowUserSuccess, fetchActiveFollowingSuccess, fetchActiveFollowingFailure, fetchExpiredFollowingSuccess, fetchExpiredFollowingFailure } from \"../actions/FollowAction\";\nimport { checkLogoutStatus } from \"../actions/ErrorAction\";\n\nfunction* followUserAPI() {\n  try {\n    const inputData = yield select(state => state.follow.followUser.inputData);\n    const response = yield api.postMethod(\"follow_users\", inputData);\n\n    if (response.data.success) {\n      yield put(followUserSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      localStorage.setItem(\"total_followers\", JSON.stringify(response.data.data.total_followers));\n      localStorage.setItem(\"total_followings\", JSON.stringify(response.data.data.total_followings));\n    } else {\n      yield put(followUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(followUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* unFollowUserAPI() {\n  try {\n    const inputData = yield select(state => state.follow.unFollowUser.inputData);\n    const response = yield api.postMethod(\"unfollow_users\", inputData);\n\n    if (response.data.success) {\n      yield put(unFollowUserSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(response.data.message);\n      yield put(createNotification(notificationMessage));\n      localStorage.setItem(\"total_followers\", JSON.stringify(response.data.data.total_followers));\n      localStorage.setItem(\"total_followings\", JSON.stringify(response.data.data.total_followings));\n      window.location.reload();\n    } else {\n      yield put(unFollowUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(unFollowUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchFollowersAPI() {\n  try {\n    const response = yield api.postMethod(\"followers\");\n\n    if (response.data.success) {\n      yield put(fetchFollowersSuccess(response.data.data));\n    } else {\n      yield put(fetchFollowersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchFollowersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchActiveFollowersAPI() {\n  try {\n    const response = yield api.postMethod(\"active_followers\");\n\n    if (response.data.success) {\n      yield put(fetchActiveFollowersSuccess(response.data.data));\n    } else {\n      yield put(fetchActiveFollowersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchActiveFollowersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchExpiredFollowersAPI() {\n  try {\n    const response = yield api.postMethod(\"expired_followers\");\n\n    if (response.data.success) {\n      yield put(fetchExpiredFollowersSuccess(response.data.data));\n    } else {\n      yield put(fetchExpiredFollowersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchExpiredFollowersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchFollowingAPI() {\n  try {\n    const response = yield api.postMethod(\"followings\");\n\n    if (response.data.success) {\n      yield put(fetchFollowingSuccess(response.data.data));\n    } else {\n      yield put(fetchFollowingFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchFollowingFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchActiveFollowingAPI() {\n  try {\n    const response = yield api.postMethod(\"active_followings\");\n\n    if (response.data.success) {\n      yield put(fetchActiveFollowingSuccess(response.data.data));\n    } else {\n      yield put(fetchActiveFollowingFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchActiveFollowingFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchExpiredFollowingAPI() {\n  try {\n    const response = yield api.postMethod(\"expired_followings\");\n\n    if (response.data.success) {\n      yield put(fetchExpiredFollowingSuccess(response.data.data));\n    } else {\n      yield put(fetchExpiredFollowingFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(response.data.error);\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchExpiredFollowingFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FOLLOW_USER_START, followUserAPI)]);\n  yield all([yield takeLatest(UNFOLLOW_USER_START, unFollowUserAPI)]);\n  yield all([yield takeLatest(FETCH_FOLLOWERS_START, fetchFollowersAPI)]);\n  yield all([yield takeLatest(FETCH_ACTIVE_FOLLOWERS_START, fetchActiveFollowersAPI)]);\n  yield all([yield takeLatest(FETCH_EXPIRED_FOLLOWERS_START, fetchExpiredFollowersAPI)]);\n  yield all([yield takeLatest(FETCH_FOLLOWING_START, fetchFollowingAPI)]);\n  yield all([yield takeLatest(FETCH_ACTIVE_FOLLOWING_START, fetchActiveFollowingAPI)]);\n  yield all([yield takeLatest(FETCH_EXPIRED_FOLLOWING_START, fetchExpiredFollowingAPI)]);\n}","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/store/sagas/FollowSaga.jsx"],"names":["call","select","put","takeLatest","all","api","FETCH_FOLLOWERS_START","FETCH_ACTIVE_FOLLOWERS_START","FETCH_EXPIRED_FOLLOWERS_START","FETCH_FOLLOWING_START","FOLLOW_USER_START","UNFOLLOW_USER_START","FETCH_ACTIVE_FOLLOWING_START","FETCH_EXPIRED_FOLLOWING_START","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchFollowersFailure","fetchFollowersSuccess","fetchActiveFollowersFailure","fetchActiveFollowersSuccess","fetchExpiredFollowersFailure","fetchExpiredFollowersSuccess","fetchFollowingFailure","fetchFollowingSuccess","followUserFailure","followUserSuccess","unFollowUserFailure","unFollowUserSuccess","fetchActiveFollowingSuccess","fetchActiveFollowingFailure","fetchExpiredFollowingSuccess","fetchExpiredFollowingFailure","checkLogoutStatus","followUserAPI","inputData","state","follow","followUser","response","postMethod","data","success","notificationMessage","message","localStorage","setItem","JSON","stringify","total_followers","total_followings","error","unFollowUserAPI","unFollowUser","window","location","reload","fetchFollowersAPI","fetchActiveFollowersAPI","fetchExpiredFollowersAPI","fetchFollowingAPI","fetchActiveFollowingAPI","fetchExpiredFollowingAPI","pageSaga"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport {\n  FETCH_FOLLOWERS_START,\n  FETCH_ACTIVE_FOLLOWERS_START,\n  FETCH_EXPIRED_FOLLOWERS_START,\n  FETCH_FOLLOWING_START,\n  FOLLOW_USER_START,\n  UNFOLLOW_USER_START,\n  FETCH_ACTIVE_FOLLOWING_START,\n  FETCH_EXPIRED_FOLLOWING_START,\n} from \"../actions/ActionConstant\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchFollowersFailure,\n  fetchFollowersSuccess,\n  fetchActiveFollowersFailure,\n  fetchActiveFollowersSuccess,\n  fetchExpiredFollowersFailure,\n  fetchExpiredFollowersSuccess,\n  fetchFollowingFailure,\n  fetchFollowingSuccess,\n  followUserFailure,\n  followUserSuccess,\n  unFollowUserFailure,\n  unFollowUserSuccess,\n  fetchActiveFollowingSuccess,\n  fetchActiveFollowingFailure,\n  fetchExpiredFollowingSuccess,\n  fetchExpiredFollowingFailure,\n} from \"../actions/FollowAction\";\n\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\nfunction* followUserAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.follow.followUser.inputData\n    );\n    const response = yield api.postMethod(\"follow_users\", inputData);\n    if (response.data.success) {\n      yield put(followUserSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      localStorage.setItem(\n        \"total_followers\",\n        JSON.stringify(response.data.data.total_followers)\n      );\n      localStorage.setItem(\n        \"total_followings\",\n        JSON.stringify(response.data.data.total_followings)\n      );\n    } else {\n      yield put(followUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(followUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* unFollowUserAPI() {\n  try {\n    const inputData = yield select(\n      (state) => state.follow.unFollowUser.inputData\n    );\n    const response = yield api.postMethod(\"unfollow_users\", inputData);\n    if (response.data.success) {\n      yield put(unFollowUserSuccess(response.data.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n      localStorage.setItem(\n        \"total_followers\",\n        JSON.stringify(response.data.data.total_followers)\n      );\n      localStorage.setItem(\n        \"total_followings\",\n        JSON.stringify(response.data.data.total_followings)\n      );\n      window.location.reload();\n    } else {\n      yield put(unFollowUserFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(unFollowUserFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchFollowersAPI() {\n  try {\n    const response = yield api.postMethod(\"followers\");\n    if (response.data.success) {\n      yield put(fetchFollowersSuccess(response.data.data));\n    } else {\n      yield put(fetchFollowersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchFollowersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchActiveFollowersAPI() {\n  try {\n    const response = yield api.postMethod(\"active_followers\");\n    if (response.data.success) {\n      yield put(fetchActiveFollowersSuccess(response.data.data));\n    } else {\n      yield put(fetchActiveFollowersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchActiveFollowersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchExpiredFollowersAPI() {\n  try {\n    const response = yield api.postMethod(\"expired_followers\");\n    if (response.data.success) {\n      yield put(fetchExpiredFollowersSuccess(response.data.data));\n    } else {\n      yield put(fetchExpiredFollowersFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchExpiredFollowersFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchFollowingAPI() {\n  try {\n    const response = yield api.postMethod(\"followings\");\n    if (response.data.success) {\n      yield put(fetchFollowingSuccess(response.data.data));\n    } else {\n      yield put(fetchFollowingFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchFollowingFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchActiveFollowingAPI() {\n  try {\n    const response = yield api.postMethod(\"active_followings\");\n    if (response.data.success) {\n      yield put(fetchActiveFollowingSuccess(response.data.data));\n    } else {\n      yield put(fetchActiveFollowingFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchActiveFollowingFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* fetchExpiredFollowingAPI() {\n  try {\n    const response = yield api.postMethod(\"expired_followings\");\n    if (response.data.success) {\n      yield put(fetchExpiredFollowingSuccess(response.data.data));\n    } else {\n      yield put(fetchExpiredFollowingFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchExpiredFollowingFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FOLLOW_USER_START, followUserAPI)]);\n  yield all([yield takeLatest(UNFOLLOW_USER_START, unFollowUserAPI)]);\n  yield all([yield takeLatest(FETCH_FOLLOWERS_START, fetchFollowersAPI)]);\n  yield all([\n    yield takeLatest(FETCH_ACTIVE_FOLLOWERS_START, fetchActiveFollowersAPI),\n  ]);\n  yield all([\n    yield takeLatest(FETCH_EXPIRED_FOLLOWERS_START, fetchExpiredFollowersAPI),\n  ]);\n  yield all([yield takeLatest(FETCH_FOLLOWING_START, fetchFollowingAPI)]);\n  yield all([\n    yield takeLatest(FETCH_ACTIVE_FOLLOWING_START, fetchActiveFollowingAPI),\n  ]);\n  yield all([\n    yield takeLatest(FETCH_EXPIRED_FOLLOWING_START, fetchExpiredFollowingAPI),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}