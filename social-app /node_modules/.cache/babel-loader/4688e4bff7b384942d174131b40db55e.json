{"ast":null,"code":"var _jsxFileName = \"/Users/devsmac/Downloads/fx-frontend/src/components/Home/StorySlider.jsx\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Media, Image, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport StoriesSliderModal from \"./StoriesSliderModal\";\nimport { fetchStoriesStart } from \"../../store/actions/StoriesAction\";\nimport { connect } from \"react-redux\";\nimport StoryUploadModal from \"./StoryUploadModal\";\nimport StorySliderLoader from \"../Loader/StorySliderLoader\";\nconst $ = window.$;\n\nconst StorySlider = props => {\n  const [renderSliderModal, setRenderSliderModal] = useState(false);\n  const [selectedSliderIndex, setSelectedSliderIndex] = useState(0);\n  const [sliderData, setSliderData] = useState({});\n  var settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    responsive: [{\n      breakpoint: 2048,\n      settings: {\n        slidesToShow: 9.5,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 1920,\n      settings: {\n        slidesToShow: 9.5,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 8,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 6,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 5.5,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 767,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 576,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 376,\n      settings: {\n        slidesToShow: 1.75,\n        slidesToScroll: 1\n      }\n    }]\n  };\n\n  const SliderModalToggle = (status, index, story) => {\n    setRenderSliderModal(status);\n    setSelectedSliderIndex(index);\n    setSliderData(story);\n  };\n\n  useEffect(() => {\n    props.dispatch(fetchStoriesStart());\n  }, []);\n  useEffect(() => {\n    if (SliderModalToggle) {\n      $(\"#storiesSliderModal\").modal(\"show\");\n    } else {\n      $(\"#storiesSliderModal\").modal(\"hide\");\n    }\n  }, [renderSliderModal]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-slider-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, props.userStories.loading ? /*#__PURE__*/React.createElement(StorySliderLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-slider-card \",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addStoryModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-slider-img-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: localStorage.getItem(\"user_picture\"),\n    alt: \"\",\n    className: \"story-slider-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Add Story\"))))), props.userStories.data.stories && props.userStories.data.stories.length > 0 && props.userStories.data.stories.map((story, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Media, {\n    as: \"li\",\n    onClick: () => SliderModalToggle(true, index, story),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-slider-card\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#storiesSliderModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-slider-img-sec\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: story.picture,\n    alt: \"\",\n    className: \"story-slider-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"story-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, story.name)))))))))), renderSliderModal && !props.userStories.loading && /*#__PURE__*/React.createElement(StoriesSliderModal, {\n    SliderModalToggle: SliderModalToggle,\n    selectedSliderIndex: selectedSliderIndex,\n    sliderData: sliderData,\n    data: props.userStories.data.stories.filter(files => files.storyFiles.length > 0),\n    renderSliderModal: renderSliderModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StoryUploadModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToPros = state => ({\n  userStories: state.userStories.stories\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(StorySlider);","map":{"version":3,"sources":["/Users/devsmac/Downloads/fx-frontend/src/components/Home/StorySlider.jsx"],"names":["React","useState","useEffect","Media","Image","Button","Link","Slider","StoriesSliderModal","fetchStoriesStart","connect","StoryUploadModal","StorySliderLoader","$","window","StorySlider","props","renderSliderModal","setRenderSliderModal","selectedSliderIndex","setSelectedSliderIndex","sliderData","setSliderData","settings","dots","infinite","speed","responsive","breakpoint","slidesToShow","slidesToScroll","SliderModalToggle","status","index","story","dispatch","modal","userStories","loading","localStorage","getItem","data","stories","length","map","picture","name","filter","files","storyFiles","mapStateToPros","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Media, Image, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport StoriesSliderModal from \"./StoriesSliderModal\";\nimport { fetchStoriesStart } from \"../../store/actions/StoriesAction\";\nimport { connect } from \"react-redux\";\nimport StoryUploadModal from \"./StoryUploadModal\";\nimport StorySliderLoader from \"../Loader/StorySliderLoader\";\n\nconst $ = window.$;\n\nconst StorySlider = (props) => {\n  const [renderSliderModal, setRenderSliderModal] = useState(false);\n\n  const [selectedSliderIndex, setSelectedSliderIndex] = useState(0);\n\n  const [sliderData, setSliderData] = useState({});\n  \n  var settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    responsive: [\n      {\n        breakpoint: 2048,\n        settings: {\n          slidesToShow: 9.5,\n          slidesToScroll: 3,\n        },\n      },\n      {\n        breakpoint: 1920,\n        settings: {\n          slidesToShow: 9.5,\n          slidesToScroll: 3,\n        },\n      },\n      {\n        breakpoint: 1200,\n        settings: {\n          slidesToShow: 8,\n          slidesToScroll: 3,\n        },\n      },\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 6,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 991,\n        settings: {\n          slidesToShow: 5.5,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 5,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 576,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 376,\n        settings: {\n          slidesToShow: 1.75,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const SliderModalToggle = (status, index,story) => {\n    setRenderSliderModal(status);\n    setSelectedSliderIndex(index);\n    setSliderData(story);\n  };\n\n  useEffect(() => {\n    props.dispatch(fetchStoriesStart());\n  }, []);\n\n  useEffect(() => {\n    if (SliderModalToggle) {\n      $(\"#storiesSliderModal\").modal(\"show\");\n    } else {\n      $(\"#storiesSliderModal\").modal(\"hide\");\n    }\n  }, [renderSliderModal]);\n\n  return (\n    <>\n      <div className=\"story-slider-sec\">\n        <div className=\"\">\n          {props.userStories.loading ? (\n            <StorySliderLoader />\n          ) : (\n            <>\n              <Slider {...settings}>\n                <Media as=\"li\">\n                  <div className=\"story-card-wrapper\">\n                    <div\n                      className=\"story-slider-card \"\n                      data-toggle=\"modal\"\n                      data-target=\"#addStoryModal\"\n                    >\n                      <div className=\"story-slider-img-sec\">\n                        <Image\n                          src={localStorage.getItem(\"user_picture\")}\n                          alt=\"\"\n                          className=\"story-slider-img\"\n                        />\n                        <i className=\"fas fa-plus\"></i>\n                      </div>\n                      <div className=\"story-text\">\n                        <h4>Add Story</h4>\n                      </div>\n                    </div>\n                  </div>\n                </Media>\n                {props.userStories.data.stories &&\n                  props.userStories.data.stories.length > 0 &&\n                  props.userStories.data.stories.map((story, index) => (\n                      <>\n                        <Media\n                          as=\"li\"\n                          onClick={() => SliderModalToggle(true, index,story)}\n                          key={index}\n                        >\n                          <div\n                            className=\"story-card-wrapper\"\n                          >\n                            <div className=\"story-slider-card\"\n                              data-toggle=\"modal\"\n                              data-target=\"#storiesSliderModal\">\n                              \n                              <div\n                                className=\"story-slider-img-sec\"\n                                key={index}\n                              >\n                                <Image\n                                  src={story.picture}\n                                  alt=\"\"\n                                  className=\"story-slider-img\"\n                                />\n                              </div>\n                             \n                              <div className=\"story-text\">\n                                <h4>{story.name}</h4>\n                              </div>\n                            </div>\n                          </div>\n                        </Media>\n                      </>\n                    ))}\n              </Slider>\n            </>\n          )}\n        </div>\n        {renderSliderModal && !props.userStories.loading && (\n          <StoriesSliderModal\n            SliderModalToggle={SliderModalToggle}\n            selectedSliderIndex={selectedSliderIndex}\n            sliderData={sliderData}\n            data={props.userStories.data.stories.filter(\n              (files) => files.storyFiles.length > 0\n            )}\n            renderSliderModal={renderSliderModal}\n          />\n        )}\n        <StoryUploadModal />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToPros = (state) => ({\n  userStories: state.userStories.stories,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return { dispatch };\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(StorySlider);\n"]},"metadata":{},"sourceType":"module"}