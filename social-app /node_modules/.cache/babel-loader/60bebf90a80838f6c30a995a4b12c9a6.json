{"ast":null,"code":"import _regeneratorRuntime from\"/home/codegama/bhawya/source_code/fx-frontend-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchSessionListAPI),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(deleteSingleLoginSessionAPI),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(deleteAllLoginSessionAPI),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(pageSaga);import{call,select,put,takeLatest,all}from\"redux-saga/effects\";import api from\"../../Environment\";import{createNotification}from\"react-redux-notify\";import{getSuccessNotificationMessage,getErrorNotificationMessage}from\"../../components/helper/NotificationMessage\";import{fetchSesssionManagementSuccess,fetchSesssionManagementFailure,deleteSingleLoginSessionSuccess,deleteSingleLoginSessionFailure,deleteAllLoginSessionSuccess,deleteAllLoginSessionFailure}from\"../actions/SessionManagementAction\";import{FETCH_SESSION_MANAGEMENT_LIST_START,DELETE_SINGLE_LOGIN_SESSION_START,DELETE_ALL_LOGIN_SESSION_START}from\"../actions/ActionConstant\";import{checkLogoutStatus}from\"../actions/ErrorAction\";function fetchSessionListAPI(action){var response,notificationMessage,_notificationMessage;return _regeneratorRuntime.wrap(function fetchSessionListAPI$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.postMethod(\"login_session_index\",action.data);case 3:response=_context.sent;if(!response.data.success){_context.next=9;break;}_context.next=7;return put(fetchSesssionManagementSuccess(response.data.data));case 7:_context.next=16;break;case 9:_context.next=11;return put(fetchSesssionManagementFailure(response.data.error));case 11:notificationMessage=getErrorNotificationMessage(response.data.error);_context.next=14;return put(checkLogoutStatus(response.data));case 14:_context.next=16;return put(createNotification(notificationMessage));case 16:_context.next=25;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);_context.next=22;return put(fetchSesssionManagementFailure(_context.t0));case 22:_notificationMessage=getErrorNotificationMessage(_context.t0.message);_context.next=25;return put(createNotification(_notificationMessage));case 25:case\"end\":return _context.stop();}}},_marked,null,[[0,18]]);}function deleteSingleLoginSessionAPI(action){var response,notificationMessage,_notificationMessage2,_notificationMessage3;return _regeneratorRuntime.wrap(function deleteSingleLoginSessionAPI$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.postMethod(\"login_session_delete\",action.data);case 3:response=_context2.sent;if(!response.data.success){_context2.next=12;break;}_context2.next=7;return put(deleteSingleLoginSessionSuccess(response.data));case 7:notificationMessage=getSuccessNotificationMessage(response.data.message);_context2.next=10;return put(createNotification(notificationMessage));case 10:_context2.next=17;break;case 12:_context2.next=14;return put(deleteSingleLoginSessionFailure(response.data.error));case 14:_notificationMessage2=getErrorNotificationMessage(response.data.error);_context2.next=17;return put(createNotification(_notificationMessage2));case 17:_context2.next=26;break;case 19:_context2.prev=19;_context2.t0=_context2[\"catch\"](0);_context2.next=23;return put(deleteSingleLoginSessionFailure(_context2.t0));case 23:_notificationMessage3=getErrorNotificationMessage(_context2.t0.message);_context2.next=26;return put(createNotification(_notificationMessage3));case 26:case\"end\":return _context2.stop();}}},_marked2,null,[[0,19]]);}function deleteAllLoginSessionAPI(action){var response,notificationMessage,_notificationMessage4,_notificationMessage5;return _regeneratorRuntime.wrap(function deleteAllLoginSessionAPI$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.postMethod(\"login_session_delete_all\",action.data);case 3:response=_context3.sent;if(!response.data.success){_context3.next=12;break;}_context3.next=7;return put(deleteAllLoginSessionSuccess(response.data));case 7:notificationMessage=getSuccessNotificationMessage(response.data.message);_context3.next=10;return put(createNotification(notificationMessage));case 10:_context3.next=17;break;case 12:_context3.next=14;return put(deleteAllLoginSessionFailure(response.data.error));case 14:_notificationMessage4=getErrorNotificationMessage(response.data.error);_context3.next=17;return put(createNotification(_notificationMessage4));case 17:_context3.next=26;break;case 19:_context3.prev=19;_context3.t0=_context3[\"catch\"](0);_context3.next=23;return put(deleteAllLoginSessionFailure(_context3.t0));case 23:_notificationMessage5=getErrorNotificationMessage(_context3.t0.message);_context3.next=26;return put(createNotification(_notificationMessage5));case 26:case\"end\":return _context3.stop();}}},_marked3,null,[[0,19]]);}export default function pageSaga(){return _regeneratorRuntime.wrap(function pageSaga$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.t0=all;_context4.next=3;return takeLatest(FETCH_SESSION_MANAGEMENT_LIST_START,fetchSessionListAPI);case 3:_context4.t1=_context4.sent;_context4.t2=[_context4.t1];_context4.next=7;return(0,_context4.t0)(_context4.t2);case 7:_context4.t3=all;_context4.next=10;return takeLatest(DELETE_SINGLE_LOGIN_SESSION_START,deleteSingleLoginSessionAPI);case 10:_context4.t4=_context4.sent;_context4.t5=[_context4.t4];_context4.next=14;return(0,_context4.t3)(_context4.t5);case 14:_context4.t6=all;_context4.next=17;return takeLatest(DELETE_ALL_LOGIN_SESSION_START,deleteAllLoginSessionAPI);case 17:_context4.t7=_context4.sent;_context4.t8=[_context4.t7];_context4.next=21;return(0,_context4.t6)(_context4.t8);case 21:case\"end\":return _context4.stop();}}},_marked4);}","map":{"version":3,"sources":["/home/codegama/bhawya/source_code/fx-frontend-base/src/store/sagas/SessionSaga.jsx"],"names":["fetchSessionListAPI","deleteSingleLoginSessionAPI","deleteAllLoginSessionAPI","pageSaga","call","select","put","takeLatest","all","api","createNotification","getSuccessNotificationMessage","getErrorNotificationMessage","fetchSesssionManagementSuccess","fetchSesssionManagementFailure","deleteSingleLoginSessionSuccess","deleteSingleLoginSessionFailure","deleteAllLoginSessionSuccess","deleteAllLoginSessionFailure","FETCH_SESSION_MANAGEMENT_LIST_START","DELETE_SINGLE_LOGIN_SESSION_START","DELETE_ALL_LOGIN_SESSION_START","checkLogoutStatus","action","postMethod","data","response","success","error","notificationMessage","message"],"mappings":"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","sourcesContent":["import { call, select, put, takeLatest, all } from \"redux-saga/effects\";\nimport api from \"../../Environment\";\nimport { createNotification } from \"react-redux-notify\";\nimport {\n  getSuccessNotificationMessage,\n  getErrorNotificationMessage,\n} from \"../../components/helper/NotificationMessage\";\nimport {\n  fetchSesssionManagementSuccess,\n  fetchSesssionManagementFailure,\n  deleteSingleLoginSessionSuccess,\n  deleteSingleLoginSessionFailure,\n  deleteAllLoginSessionSuccess,\n  deleteAllLoginSessionFailure\n} from \"../actions/SessionManagementAction\";\nimport {\n  FETCH_SESSION_MANAGEMENT_LIST_START,\n  DELETE_SINGLE_LOGIN_SESSION_START,\n  DELETE_ALL_LOGIN_SESSION_START\n} from \"../actions/ActionConstant\";\nimport {\n  checkLogoutStatus,\n} from \"../actions/ErrorAction\";\n\n\nfunction* fetchSessionListAPI(action) {\n  try {\n    const response = yield api.postMethod(\"login_session_index\", action.data);\n    if (response.data.success) {\n      yield put(fetchSesssionManagementSuccess(response.data.data));\n    } else {\n      yield put(fetchSesssionManagementFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(checkLogoutStatus(response.data));\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(fetchSesssionManagementFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteSingleLoginSessionAPI(action) {\n  try {\n    const response = yield api.postMethod(\"login_session_delete\", action.data);\n    if (response.data.success) {\n      yield put(deleteSingleLoginSessionSuccess(response.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteSingleLoginSessionFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteSingleLoginSessionFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nfunction* deleteAllLoginSessionAPI(action) {\n  try {\n    const response = yield api.postMethod(\"login_session_delete_all\", action.data);\n    if (response.data.success) {\n      yield put(deleteAllLoginSessionSuccess(response.data));\n      const notificationMessage = getSuccessNotificationMessage(\n        response.data.message\n      );\n      yield put(createNotification(notificationMessage));\n    } else {\n      yield put(deleteAllLoginSessionFailure(response.data.error));\n      const notificationMessage = getErrorNotificationMessage(\n        response.data.error\n      );\n      yield put(createNotification(notificationMessage));\n    }\n  } catch (error) {\n    yield put(deleteAllLoginSessionFailure(error));\n    const notificationMessage = getErrorNotificationMessage(error.message);\n    yield put(createNotification(notificationMessage));\n  }\n}\n\nexport default function* pageSaga() {\n  yield all([yield takeLatest(FETCH_SESSION_MANAGEMENT_LIST_START, fetchSessionListAPI)]);\n  yield all([yield takeLatest(DELETE_SINGLE_LOGIN_SESSION_START, deleteSingleLoginSessionAPI)]);\n  yield all([yield takeLatest(DELETE_ALL_LOGIN_SESSION_START, deleteAllLoginSessionAPI)]);\n}"]},"metadata":{},"sourceType":"module"}